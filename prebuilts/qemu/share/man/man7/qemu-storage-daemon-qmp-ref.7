.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "QEMU-STORAGE-DAEMON-QMP-REF" "7" "Jun 02, 2025" "10.0.50" "QEMU"
.SH NAME
qemu-storage-daemon-qmp-ref \- QEMU Storage Daemon QMP Reference Manual
.INDENT 0.0
.IP \(bu 2
\fI\%Introduction\fP
.IP \(bu 2
\fI\%Common data types\fP
.IP \(bu 2
\fI\%Socket data types\fP
.IP \(bu 2
\fI\%Cryptography\fP
.IP \(bu 2
\fI\%Background jobs\fP
.IP \(bu 2
\fI\%Block devices\fP
.INDENT 2.0
.IP \(bu 2
\fI\%Block core (VM unrelated)\fP
.IP \(bu 2
\fI\%Block device exports\fP
.UNINDENT
.IP \(bu 2
\fI\%Character devices\fP
.IP \(bu 2
\fI\%User authorization\fP
.IP \(bu 2
\fI\%Transactions\fP
.IP \(bu 2
\fI\%QMP monitor control\fP
.IP \(bu 2
\fI\%QMP introspection\fP
.IP \(bu 2
\fI\%QEMU Object Model (QOM)\fP
.UNINDENT
.SH INTRODUCTION
.sp
This manual describes the commands and events supported by the QEMU
storage daemon QMP.
.sp
For locating a particular item, please see the \fBqapi\-qsd\-index\fP\&.
.sp
The following notation is used in examples:
.INDENT 0.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> ... text sent by client (commands) ...
<\- ... text sent by server (command responses and events) ...
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Example text is formatted for readability.  However, in real
protocol usage, its commonly emitted as a single line.
.sp
Please refer to the
QEMU Machine Protocol Specification
for the general format of commands, responses, and events.
.SH COMMON DATA TYPES
.INDENT 0.0
.TP
.B Enum  IoOperationType  (Since: 2.1)
An enumeration of the I/O operation types
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBread\fP \-\- read operation
.IP \(bu 2
\fBwrite\fP \-\- write operation
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  OnOffAuto  (Since: 2.2)
An enumeration of three options: on, off, and auto
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBauto\fP \-\- QEMU selects the value between on and off
.IP \(bu 2
\fBon\fP \-\- Enabled
.IP \(bu 2
\fBoff\fP \-\- Disabled
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  OnOffSplit  (Since: 2.6)
An enumeration of three values: on, off, and split
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBon\fP \-\- Enabled
.IP \(bu 2
\fBoff\fP \-\- Disabled
.IP \(bu 2
\fBsplit\fP \-\- Mixed
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Alternate  StrOrNull  (Since: 2.10)
This is a string value or the explicit lack of a string (null
pointer in C).  Intended for cases when \(aqoptional absent\(aq already
has a different meaning.
.INDENT 7.0
.TP
.B Alternatives
.INDENT 7.0
.IP \(bu 2
\fBs\fP (\fBstring\fP) \-\- the string value
.IP \(bu 2
\fBn\fP (\fBnull\fP) \-\- no string value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  OffAutoPCIBAR  (Since: 2.12)
An enumeration of options for specifying a PCI BAR
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBoff\fP \-\- The specified feature is disabled
.IP \(bu 2
\fBauto\fP \-\- The PCI BAR for the feature is automatically selected
.IP \(bu 2
\fBbar0\fP \-\- PCI BAR0 is used for the feature
.IP \(bu 2
\fBbar1\fP \-\- PCI BAR1 is used for the feature
.IP \(bu 2
\fBbar2\fP \-\- PCI BAR2 is used for the feature
.IP \(bu 2
\fBbar3\fP \-\- PCI BAR3 is used for the feature
.IP \(bu 2
\fBbar4\fP \-\- PCI BAR4 is used for the feature
.IP \(bu 2
\fBbar5\fP \-\- PCI BAR5 is used for the feature
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  PCIELinkSpeed  (Since: 4.0)
An enumeration of PCIe link speeds in units of GT/s
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fB2_5\fP \-\- 2.5GT/s
.IP \(bu 2
\fB5\fP \-\- 5.0GT/s
.IP \(bu 2
\fB8\fP \-\- 8.0GT/s
.IP \(bu 2
\fB16\fP \-\- 16.0GT/s
.IP \(bu 2
\fB32\fP \-\- 32.0GT/s (since 9.0)
.IP \(bu 2
\fB64\fP \-\- 64.0GT/s (since 9.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  PCIELinkWidth  (Since: 4.0)
An enumeration of PCIe link width
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fB1\fP \-\- x1
.IP \(bu 2
\fB2\fP \-\- x2
.IP \(bu 2
\fB4\fP \-\- x4
.IP \(bu 2
\fB8\fP \-\- x8
.IP \(bu 2
\fB12\fP \-\- x12
.IP \(bu 2
\fB16\fP \-\- x16
.IP \(bu 2
\fB32\fP \-\- x32
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  HostMemPolicy  (Since: 2.1)
Host memory policy types
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBdefault\fP \-\- restore default policy, remove any nondefault policy
.IP \(bu 2
\fBpreferred\fP \-\- set the preferred host nodes for allocation
.IP \(bu 2
\fBbind\fP \-\- a strict policy that restricts memory allocation to the host
nodes specified
.IP \(bu 2
\fBinterleave\fP \-\- memory allocations are interleaved across the set of
host nodes specified
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  NetFilterDirection  (Since: 2.5)
Indicates whether a netfilter is attached to a netdev\(aqs transmit
queue or receive queue or both.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBall\fP \-\- the filter is attached both to the receive and the transmit
queue of the netdev (default).
.IP \(bu 2
\fBrx\fP \-\- the filter is attached to the receive queue of the netdev,
where it will receive packets sent to the netdev.
.IP \(bu 2
\fBtx\fP \-\- the filter is attached to the transmit queue of the netdev,
where it will receive packets sent by the netdev.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  GrabToggleKeys  (Since: 4.0)
Key combinations to toggle input\-linux between host and guest.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBctrl\-ctrl\fP \-\- left and right control key
.IP \(bu 2
\fBalt\-alt\fP \-\- left and right alt key
.IP \(bu 2
\fBshift\-shift\fP \-\- left and right shift key
.IP \(bu 2
\fBmeta\-meta\fP \-\- left and right meta key
.IP \(bu 2
\fBscrolllock\fP \-\- scroll lock key
.IP \(bu 2
\fBctrl\-scrolllock\fP \-\- either control key and scroll lock key
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  HumanReadableText  (Since: 6.2)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBhuman\-readable\-text\fP (\fBstring\fP) \-\- Formatted output intended for humans.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  EndianMode  (Since: 10.0)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBunspecified\fP \-\- Endianness not specified
.IP \(bu 2
\fBlittle\fP \-\- Little endianness
.IP \(bu 2
\fBbig\fP \-\- Big endianness
.UNINDENT
.UNINDENT
.UNINDENT
.SH SOCKET DATA TYPES
.INDENT 0.0
.TP
.B Enum  NetworkAddressFamily  (Since: 2.1)
The network address family
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBipv4\fP \-\- IPV4 family
.IP \(bu 2
\fBipv6\fP \-\- IPV6 family
.IP \(bu 2
\fBunix\fP \-\- unix socket
.IP \(bu 2
\fBvsock\fP \-\- vsock family (since 2.8)
.IP \(bu 2
\fBunknown\fP \-\- otherwise
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  InetSocketAddressBase
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBhost\fP (\fBstring\fP) \-\- host part of the address
.IP \(bu 2
\fBport\fP (\fBstring\fP) \-\- port part of the address
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  InetSocketAddress  (Since: 1.3)
Captures a socket address or address range in the Internet
namespace.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnumeric\fP (\fBboolean\fP, \fIoptional\fP) \-\- true if the host/port are guaranteed to be numeric, false
if name resolution should be attempted.  Defaults to false.
(Since 2.9)
.IP \(bu 2
\fBto\fP (\fBint\fP, \fIoptional\fP) \-\- If present, this is range of possible addresses, with port
between \fBport\fP and \fBto\fP\&.
.IP \(bu 2
\fBipv4\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether to accept IPv4 addresses, default try both IPv4 and
IPv6
.IP \(bu 2
\fBipv6\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether to accept IPv6 addresses, default try both IPv4 and
IPv6
.IP \(bu 2
\fBkeep\-alive\fP (\fBboolean\fP, \fIoptional\fP) \-\- enable keep\-alive when connecting to/listening on this socket.
(Since 4.2, not supported for listening sockets until 10.1)
.IP \(bu 2
\fBkeep\-alive\-count\fP (\fBint\fP, \fIoptional\fP) \-\- number of keep\-alive packets sent before the connection is
closed.  Only supported for TCP sockets on systems where TCP_KEEPCNT
socket option is defined (this includes Linux, Windows, macOS, FreeBSD,
but not OpenBSD).  When set to 0, system setting is used.  (Since 10.1)
.IP \(bu 2
\fBkeep\-alive\-idle\fP (\fBint\fP, \fIoptional\fP) \-\- time in seconds the connection needs to be idle before
sending a keepalive packet.  Only supported for TCP sockets on systems
where TCP_KEEPIDLE socket option is defined (this includes Linux,
Windows, macOS, FreeBSD, but not OpenBSD).  When set to 0, system setting
is used.  (Since 10.1)
.IP \(bu 2
\fBkeep\-alive\-interval\fP (\fBint\fP, \fIoptional\fP) \-\- time in seconds between keep\-alive packets.  Only
supported for TCP sockets on systems where TCP_KEEPINTVL is defined (this
includes Linux, Windows, macOS, FreeBSD, but not OpenBSD).  When set to
0, system setting is used.  (Since 10.1)
.IP \(bu 2
\fBmptcp\fP (\fBboolean\fP, \fIoptional\fP) \-\- enable multi\-path TCP.  (Since 6.1)
.IP \(bu 2
The members of \fI\%InetSocketAddressBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  UnixSocketAddress  (Since: 1.3)
Captures a socket address in the local (\(dqUnix socket\(dq) namespace.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- filesystem path to use
.IP \(bu 2
\fBabstract\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, this is a Linux abstract socket address.  \fBpath\fP
will be prefixed by a null byte, and optionally padded with null
bytes.  Defaults to false.  (Since 5.1)
.IP \(bu 2
\fBtight\fP (\fBboolean\fP, \fIoptional\fP) \-\- if false, pad an abstract socket address with enough null
bytes to make it fill struct sockaddr_un member sun_path.
Defaults to true.  (Since 5.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VsockSocketAddress  (Since: 2.8)
Captures a socket address in the vsock namespace.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcid\fP (\fBstring\fP) \-\- unique host identifier
.IP \(bu 2
\fBport\fP (\fBstring\fP) \-\- port
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
String types are used to allow for possible future
hostname or service resolution support.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  FdSocketAddress  (Since: 1.2)
A file descriptor name or number.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBstr\fP (\fBstring\fP) \-\- decimal is for file descriptor number, otherwise it\(aqs a file
descriptor name.  Named file descriptors are permitted in
monitor commands, in combination with the \(aqgetfd\(aq command.
Decimal file descriptors are permitted at startup or other
contexts where no monitor context is active.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  InetSocketAddressWrapper  (Since: 1.3)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%InetSocketAddress\fP) \-\- internet domain socket address
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  UnixSocketAddressWrapper  (Since: 1.3)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%UnixSocketAddress\fP) \-\- UNIX domain socket address
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VsockSocketAddressWrapper  (Since: 2.8)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%VsockSocketAddress\fP) \-\- VSOCK domain socket address
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  FdSocketAddressWrapper  (Since: 1.3)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%FdSocketAddress\fP) \-\- file descriptor name or number
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SocketAddressLegacy  (Since: 1.3)
Captures the address of a socket, which could also be a named file
descriptor
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%SocketAddressType\fP) \-\- Transport type
.IP \(bu 2
When \fBtype\fP is \fBinet\fP: The members of \fI\%InetSocketAddressWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBunix\fP: The members of \fI\%UnixSocketAddressWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBvsock\fP: The members of \fI\%VsockSocketAddressWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBfd\fP: The members of \fI\%FdSocketAddressWrapper\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  SocketAddressType  (Since: 2.9)
Available SocketAddress types
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBinet\fP \-\- Internet address
.IP \(bu 2
\fBunix\fP \-\- Unix domain socket
.IP \(bu 2
\fBvsock\fP \-\- VMCI address
.IP \(bu 2
\fBfd\fP \-\- Socket file descriptor
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SocketAddress  (Since: 2.9)
Captures the address of a socket, which could also be a socket file
descriptor
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%SocketAddressType\fP) \-\- Transport type
.IP \(bu 2
When \fBtype\fP is \fBinet\fP: The members of \fI\%InetSocketAddress\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBunix\fP: The members of \fI\%UnixSocketAddress\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBvsock\fP: The members of \fI\%VsockSocketAddress\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBfd\fP: The members of \fI\%FdSocketAddress\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.SH CRYPTOGRAPHY
.INDENT 0.0
.TP
.B Enum  QCryptoTLSCredsEndpoint  (Since: 2.5)
The type of network endpoint that will be using the credentials.
Most types of credential require different setup / structures
depending on whether they will be used in a server versus a client.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBclient\fP \-\- the network endpoint is acting as the client
.IP \(bu 2
\fBserver\fP \-\- the network endpoint is acting as the server
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QCryptoSecretFormat  (Since: 2.6)
The data format that the secret is provided in
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBraw\fP \-\- raw bytes.  When encoded in JSON only valid UTF\-8 sequences
can be used
.IP \(bu 2
\fBbase64\fP \-\- arbitrary base64 encoded binary data
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QCryptoHashAlgo  (Since: 2.6)
The supported algorithms for computing content digests
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBmd5\fP \-\- MD5.  Should not be used in any new code, legacy compat only
.IP \(bu 2
\fBsha1\fP \-\- SHA\-1.  Should not be used in any new code, legacy compat only
.IP \(bu 2
\fBsha224\fP \-\- SHA\-224.  (since 2.7)
.IP \(bu 2
\fBsha256\fP \-\- SHA\-256.  Current recommended strong hash.
.IP \(bu 2
\fBsha384\fP \-\- SHA\-384.  (since 2.7)
.IP \(bu 2
\fBsha512\fP \-\- SHA\-512.  (since 2.7)
.IP \(bu 2
\fBripemd160\fP \-\- RIPEMD\-160.  (since 2.7)
.IP \(bu 2
\fBsm3\fP \-\- SM3. (since 9.2.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QCryptoCipherAlgo  (Since: 2.6)
The supported algorithms for content encryption ciphers
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBaes\-128\fP \-\- AES with 128 bit / 16 byte keys
.IP \(bu 2
\fBaes\-192\fP \-\- AES with 192 bit / 24 byte keys
.IP \(bu 2
\fBaes\-256\fP \-\- AES with 256 bit / 32 byte keys
.IP \(bu 2
\fBdes\fP \-\- DES with 56 bit / 8 byte keys.  Do not use except in VNC.
(since 6.1)
.IP \(bu 2
\fB3des\fP \-\- 3DES(EDE) with 192 bit / 24 byte keys (since 2.9)
.IP \(bu 2
\fBcast5\-128\fP \-\- Cast5 with 128 bit / 16 byte keys
.IP \(bu 2
\fBserpent\-128\fP \-\- Serpent with 128 bit / 16 byte keys
.IP \(bu 2
\fBserpent\-192\fP \-\- Serpent with 192 bit / 24 byte keys
.IP \(bu 2
\fBserpent\-256\fP \-\- Serpent with 256 bit / 32 byte keys
.IP \(bu 2
\fBtwofish\-128\fP \-\- Twofish with 128 bit / 16 byte keys
.IP \(bu 2
\fBtwofish\-192\fP \-\- Twofish with 192 bit / 24 byte keys
.IP \(bu 2
\fBtwofish\-256\fP \-\- Twofish with 256 bit / 32 byte keys
.IP \(bu 2
\fBsm4\fP \-\- SM4 with 128 bit / 16 byte keys (since 9.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QCryptoCipherMode  (Since: 2.6)
The supported modes for content encryption ciphers
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBecb\fP \-\- Electronic Code Book
.IP \(bu 2
\fBcbc\fP \-\- Cipher Block Chaining
.IP \(bu 2
\fBxts\fP \-\- XEX with tweaked code book and ciphertext stealing
.IP \(bu 2
\fBctr\fP \-\- Counter (Since 2.8)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QCryptoIVGenAlgo  (Since: 2.6)
The supported algorithms for generating initialization vectors for
full disk encryption.  The \(aqplain\(aq generator should not be used for
disks with sector numbers larger than 2^32, except where
compatibility with pre\-existing Linux dm\-crypt volumes is required.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBplain\fP \-\- 64\-bit sector number truncated to 32\-bits
.IP \(bu 2
\fBplain64\fP \-\- 64\-bit sector number
.IP \(bu 2
\fBessiv\fP \-\- 64\-bit sector number encrypted with a hash of the encryption
key
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QCryptoBlockFormat  (Since: 2.6)
The supported full disk encryption formats
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBqcow\fP \-\- QCow/QCow2 built\-in AES\-CBC encryption.  Use only for
liberating data from old images.
.IP \(bu 2
\fBluks\fP \-\- LUKS encryption format.  Recommended for new images
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockOptionsBase  (Since: 2.6)
The common options that apply to all full disk encryption formats
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBformat\fP (\fI\%QCryptoBlockFormat\fP) \-\- the encryption format
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockOptionsQCow  (Since: 2.6)
The options that apply to QCow/QCow2 AES\-CBC encryption format
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBkey\-secret\fP (\fBstring\fP, \fIoptional\fP) \-\- the ID of a QCryptoSecret object providing the
decryption key.  Mandatory except when probing image for
metadata only.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockOptionsLUKS  (Since: 2.6)
The options that apply to LUKS encryption format
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBkey\-secret\fP (\fBstring\fP, \fIoptional\fP) \-\- the ID of a QCryptoSecret object providing the
decryption key.  Mandatory except when probing image for
metadata only.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockCreateOptionsLUKS  (Since: 2.6)
The options that apply to LUKS encryption format initialization
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcipher\-alg\fP (\fI\%QCryptoCipherAlgo\fP, \fIoptional\fP) \-\- the cipher algorithm for data encryption Currently
defaults to \(aqaes\-256\(aq.
.IP \(bu 2
\fBcipher\-mode\fP (\fI\%QCryptoCipherMode\fP, \fIoptional\fP) \-\- the cipher mode for data encryption Currently defaults
to \(aqxts\(aq
.IP \(bu 2
\fBivgen\-alg\fP (\fI\%QCryptoIVGenAlgo\fP, \fIoptional\fP) \-\- the initialization vector generator Currently defaults
to \(aqplain64\(aq
.IP \(bu 2
\fBivgen\-hash\-alg\fP (\fI\%QCryptoHashAlgo\fP, \fIoptional\fP) \-\- the initialization vector generator hash Currently
defaults to \(aqsha256\(aq
.IP \(bu 2
\fBhash\-alg\fP (\fI\%QCryptoHashAlgo\fP, \fIoptional\fP) \-\- the master key hash algorithm Currently defaults to
\(aqsha256\(aq
.IP \(bu 2
\fBiter\-time\fP (\fBint\fP, \fIoptional\fP) \-\- number of milliseconds to spend in PBKDF passphrase
processing.  Currently defaults to 2000.  (since 2.8)
.IP \(bu 2
The members of \fI\%QCryptoBlockOptionsLUKS\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockOpenOptions  (Since: 2.6)
The options that are available for all encryption formats when
opening an existing volume
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%QCryptoBlockOptionsBase\fP\&.
.IP \(bu 2
When \fBformat\fP is \fBqcow\fP: The members of \fI\%QCryptoBlockOptionsQCow\fP\&.
.IP \(bu 2
When \fBformat\fP is \fBluks\fP: The members of \fI\%QCryptoBlockOptionsLUKS\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockCreateOptions  (Since: 2.6)
The options that are available for all encryption formats when
initializing a new volume
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%QCryptoBlockOptionsBase\fP\&.
.IP \(bu 2
When \fBformat\fP is \fBqcow\fP: The members of \fI\%QCryptoBlockOptionsQCow\fP\&.
.IP \(bu 2
When \fBformat\fP is \fBluks\fP: The members of \fI\%QCryptoBlockCreateOptionsLUKS\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockInfoBase  (Since: 2.7)
The common information that applies to all full disk encryption
formats
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBformat\fP (\fI\%QCryptoBlockFormat\fP) \-\- the encryption format
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockInfoLUKSSlot  (Since: 2.7)
Information about the LUKS block encryption key slot options
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBactive\fP (\fBboolean\fP) \-\- whether the key slot is currently in use
.IP \(bu 2
\fBkey\-offset\fP (\fBint\fP) \-\- offset to the key material in bytes
.IP \(bu 2
\fBiters\fP (\fBint\fP, \fIoptional\fP) \-\- number of PBKDF2 iterations for key material
.IP \(bu 2
\fBstripes\fP (\fBint\fP, \fIoptional\fP) \-\- number of stripes for splitting key material
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockInfoLUKS  (Since: 2.7)
Information about the LUKS block encryption options
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcipher\-alg\fP (\fI\%QCryptoCipherAlgo\fP) \-\- the cipher algorithm for data encryption
.IP \(bu 2
\fBcipher\-mode\fP (\fI\%QCryptoCipherMode\fP) \-\- the cipher mode for data encryption
.IP \(bu 2
\fBivgen\-alg\fP (\fI\%QCryptoIVGenAlgo\fP) \-\- the initialization vector generator
.IP \(bu 2
\fBivgen\-hash\-alg\fP (\fI\%QCryptoHashAlgo\fP, \fIoptional\fP) \-\- the initialization vector generator hash
.IP \(bu 2
\fBhash\-alg\fP (\fI\%QCryptoHashAlgo\fP) \-\- the master key hash algorithm
.IP \(bu 2
\fBdetached\-header\fP (\fBboolean\fP) \-\- whether the LUKS header is detached (Since 9.0)
.IP \(bu 2
\fBpayload\-offset\fP (\fBint\fP) \-\- offset to the payload data in bytes
.IP \(bu 2
\fBmaster\-key\-iters\fP (\fBint\fP) \-\- number of PBKDF2 iterations for key material
.IP \(bu 2
\fBuuid\fP (\fBstring\fP) \-\- unique identifier for the volume
.IP \(bu 2
\fBslots\fP (\fB[\fP\fI\%QCryptoBlockInfoLUKSSlot\fP\fB]\fP) \-\- information about each key slot
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockInfo  (Since: 2.7)
Information about the block encryption options
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%QCryptoBlockInfoBase\fP\&.
.IP \(bu 2
When \fBformat\fP is \fBluks\fP: The members of \fI\%QCryptoBlockInfoLUKS\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QCryptoBlockLUKSKeyslotState  (Since: 5.1)
Defines state of keyslots that are affected by the update
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBactive\fP \-\- The slots contain the given password and marked as active
.IP \(bu 2
\fBinactive\fP \-\- The slots are erased (contain garbage) and marked as
inactive
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockAmendOptionsLUKS  (Since: 5.1)
This struct defines the update parameters that activate/de\-activate
set of keyslots
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBstate\fP (\fI\%QCryptoBlockLUKSKeyslotState\fP) \-\- the desired state of the keyslots
.IP \(bu 2
\fBnew\-secret\fP (\fBstring\fP, \fIoptional\fP) \-\- The ID of a QCryptoSecret object providing the password
to be written into added active keyslots
.IP \(bu 2
\fBold\-secret\fP (\fBstring\fP, \fIoptional\fP) \-\- Optional (for deactivation only) If given will
deactivate all keyslots that match password located in
QCryptoSecret with this ID
.IP \(bu 2
\fBiter\-time\fP (\fBint\fP, \fIoptional\fP) \-\- Optional (for activation only) Number of milliseconds to
spend in PBKDF passphrase processing for the newly activated
keyslot.  Currently defaults to 2000.
.IP \(bu 2
\fBkeyslot\fP (\fBint\fP, \fIoptional\fP) \-\- 
.sp
Optional.  ID of the keyslot to activate/deactivate.  For
keyslot activation, keyslot should not be active already (this
is unsafe to update an active keyslot), but possible if \(aqforce\(aq
parameter is given.  If keyslot is not given, first free keyslot
will be written.
.sp
For keyslot deactivation, this parameter specifies the exact
keyslot to deactivate

.IP \(bu 2
\fBsecret\fP (\fBstring\fP, \fIoptional\fP) \-\- Optional.  The ID of a QCryptoSecret object providing the
password to use to retrieve current master key.  Defaults to the
same secret that was used to open the image
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockAmendOptions  (Since: 5.1)
The options that are available for all encryption formats when
amending encryption settings
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%QCryptoBlockOptionsBase\fP\&.
.IP \(bu 2
When \fBformat\fP is \fBluks\fP: The members of \fI\%QCryptoBlockAmendOptionsLUKS\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SecretCommonProperties  (Since: 2.6)
Properties for objects of classes derived from secret\-common.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBformat\fP (\fI\%QCryptoSecretFormat\fP, \fIoptional\fP) \-\- the data format that the secret is provided in
(default: raw)
.IP \(bu 2
\fBkeyid\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of another secret that should be used to decrypt
the provided data.  If not present, the data is assumed to be
unencrypted.
.IP \(bu 2
\fBiv\fP (\fBstring\fP, \fIoptional\fP) \-\- the random initialization vector used for encryption of this
particular secret.  Should be a base64 encrypted string of the
16\-byte IV.  Mandatory if \fBkeyid\fP is given.  Ignored if \fBkeyid\fP is
absent.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SecretProperties  (Since: 2.6)
Properties for secret objects.
.sp
Either \fBdata\fP or \fBfile\fP must be provided, but not both.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fBstring\fP, \fIoptional\fP) \-\- the associated with the secret from
.IP \(bu 2
\fBfile\fP (\fBstring\fP, \fIoptional\fP) \-\- the filename to load the data associated with the secret from
.IP \(bu 2
The members of \fI\%SecretCommonProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SecretKeyringProperties  (Since: 5.1)
\fIAvailability\fP: \fBCONFIG_SECRET_KEYRING\fP
.sp
Properties for secret_keyring objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBserial\fP (\fBint\fP) \-\- serial number that identifies a key to get from the kernel
.IP \(bu 2
The members of \fI\%SecretCommonProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  TlsCredsProperties  (Since: 2.5)
Properties for objects of classes derived from tls\-creds.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBverify\-peer\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true the peer credentials will be verified once the
handshake is completed.  This is a no\-op for anonymous
credentials.  (default: true)
.IP \(bu 2
\fBdir\fP (\fBstring\fP, \fIoptional\fP) \-\- the path of the directory that contains the credential files
.IP \(bu 2
\fBendpoint\fP (\fI\%QCryptoTLSCredsEndpoint\fP, \fIoptional\fP) \-\- whether the QEMU network backend that uses the
credentials will be acting as a client or as a server
(default: client)
.IP \(bu 2
\fBpriority\fP (\fBstring\fP, \fIoptional\fP) \-\- a gnutls priority string as described at
\fI\%https://gnutls.org/manual/html_node/Priority\-Strings.html\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  TlsCredsAnonProperties  (Since: 2.5)
Properties for tls\-creds\-anon objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%TlsCredsProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  TlsCredsPskProperties  (Since: 3.0)
Properties for tls\-creds\-psk objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBusername\fP (\fBstring\fP, \fIoptional\fP) \-\- the username which will be sent to the server.  For
clients only.  If absent, \(dqqemu\(dq is sent and the property will
read back as an empty string.
.IP \(bu 2
The members of \fI\%TlsCredsProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  TlsCredsX509Properties  (Since: 2.5)
Properties for tls\-creds\-x509 objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsanity\-check\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, perform some sanity checks before using the
credentials (default: true)
.IP \(bu 2
\fBpasswordid\fP (\fBstring\fP, \fIoptional\fP) \-\- For the server\-key.pem and client\-key.pem files which
contain sensitive private keys, it is possible to use an
encrypted version by providing the \fBpasswordid\fP parameter.  This
provides the ID of a previously created secret object containing
the password for decryption.
.IP \(bu 2
The members of \fI\%TlsCredsProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QCryptoAkCipherAlgo  (Since: 7.1)
The supported algorithms for asymmetric encryption ciphers
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBrsa\fP \-\- RSA algorithm
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QCryptoAkCipherKeyType  (Since: 7.1)
The type of asymmetric keys.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBpublic\fP \-\- public key
.IP \(bu 2
\fBprivate\fP \-\- private key
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QCryptoRSAPaddingAlgo  (Since: 7.1)
The padding algorithm for RSA.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBraw\fP \-\- no padding used
.IP \(bu 2
\fBpkcs1\fP \-\- pkcs1#v1.5
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoAkCipherOptionsRSA  (Since: 7.1)
Specific parameters for RSA algorithm.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBhash\-alg\fP (\fI\%QCryptoHashAlgo\fP) \-\- QCryptoHashAlgo
.IP \(bu 2
\fBpadding\-alg\fP (\fI\%QCryptoRSAPaddingAlgo\fP) \-\- QCryptoRSAPaddingAlgo
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoAkCipherOptions  (Since: 7.1)
The options that are available for all asymmetric key algorithms
when creating a new QCryptoAkCipher.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBalg\fP (\fI\%QCryptoAkCipherAlgo\fP) \-\- encryption cipher algorithm
.IP \(bu 2
When \fBalg\fP is \fBrsa\fP: The members of \fI\%QCryptoAkCipherOptionsRSA\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.SH BACKGROUND JOBS
.INDENT 0.0
.TP
.B Enum  JobType  (Since: 1.7)
Type of a background job.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBcommit\fP \-\- block commit job type, see \(dqblock\-commit\(dq
.IP \(bu 2
\fBstream\fP \-\- block stream job type, see \(dqblock\-stream\(dq
.IP \(bu 2
\fBmirror\fP \-\- drive mirror job type, see \(dqdrive\-mirror\(dq
.IP \(bu 2
\fBbackup\fP \-\- drive backup job type, see \(dqdrive\-backup\(dq
.IP \(bu 2
\fBcreate\fP \-\- image creation job type, see \(dqblockdev\-create\(dq (since 3.0)
.IP \(bu 2
\fBamend\fP \-\- image options amend job type, see \(dqx\-blockdev\-amend\(dq (since
5.1)
.IP \(bu 2
\fBsnapshot\-load\fP \-\- snapshot load job type, see \(dqsnapshot\-load\(dq (since
6.0)
.IP \(bu 2
\fBsnapshot\-save\fP \-\- snapshot save job type, see \(dqsnapshot\-save\(dq (since
6.0)
.IP \(bu 2
\fBsnapshot\-delete\fP \-\- snapshot delete job type, see \(dqsnapshot\-delete\(dq
(since 6.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  JobStatus  (Since: 2.12)
Indicates the present state of a given job in its lifetime.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBundefined\fP \-\- Erroneous, default state.  Should not ever be visible.
.IP \(bu 2
\fBcreated\fP \-\- The job has been created, but not yet started.
.IP \(bu 2
\fBrunning\fP \-\- The job is currently running.
.IP \(bu 2
\fBpaused\fP \-\- The job is running, but paused.  The pause may be requested
by either the QMP user or by internal processes.
.IP \(bu 2
\fBready\fP \-\- The job is running, but is ready for the user to signal
completion.  This is used for long\-running jobs like mirror that
are designed to run indefinitely.
.IP \(bu 2
\fBstandby\fP \-\- The job is ready, but paused.  This is nearly identical to
\fBpaused\fP\&.  The job may return to \fBready\fP or otherwise be canceled.
.IP \(bu 2
\fBwaiting\fP \-\- The job is waiting for other jobs in the transaction to
converge to the waiting state.  This status will likely not be
visible for the last job in a transaction.
.IP \(bu 2
\fBpending\fP \-\- The job has finished its work, but has finalization steps
that it needs to make prior to completing.  These changes will
require manual intervention via \fBjob\-finalize\fP if auto\-finalize
was set to false.  These pending changes may still fail.
.IP \(bu 2
\fBaborting\fP \-\- The job is in the process of being aborted, and will
finish with an error.  The job will afterwards report that it is
\fBconcluded\fP\&.  This status may not be visible to the management
process.
.IP \(bu 2
\fBconcluded\fP \-\- The job has finished all work.  If auto\-dismiss was set
to false, the job will remain in the query list until it is
dismissed via \fBjob\-dismiss\fP\&.
.IP \(bu 2
\fBnull\fP \-\- The job is in the process of being dismantled.  This state
should not ever be visible externally.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  JobVerb  (Since: 2.12)
Represents command verbs that can be applied to a job.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBcancel\fP \-\- see \fBjob\-cancel\fP
.IP \(bu 2
\fBpause\fP \-\- see \fBjob\-pause\fP
.IP \(bu 2
\fBresume\fP \-\- see \fBjob\-resume\fP
.IP \(bu 2
\fBset\-speed\fP \-\- see \fBblock\-job\-set\-speed\fP
.IP \(bu 2
\fBcomplete\fP \-\- see \fBjob\-complete\fP
.IP \(bu 2
\fBdismiss\fP \-\- see \fBjob\-dismiss\fP
.IP \(bu 2
\fBfinalize\fP \-\- see \fBjob\-finalize\fP
.IP \(bu 2
\fBchange\fP \-\- see \fBblock\-job\-change\fP (since 8.2)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  JOB_STATUS_CHANGE  (Since: 3.0)
Emitted when a job transitions to a different status.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The job identifier
.IP \(bu 2
\fBstatus\fP (\fI\%JobStatus\fP) \-\- The new job status
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  job\-pause  (Since: 3.0)
Pause an active job.
.sp
This command returns immediately after marking the active job for
pausing.  Pausing an already paused job is an error.
.sp
The job will pause as soon as possible, which means transitioning
into the PAUSED state if it was RUNNING, or into STANDBY if it was
READY.  The corresponding JOB_STATUS_CHANGE event will be emitted.
.sp
Cancelling a paused job automatically resumes it.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The job identifier.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  job\-resume  (Since: 3.0)
Resume a paused job.
.sp
This command returns immediately after resuming a paused job.
Resuming an already running job is an error.
.sp
This command also clears the error status for block\-jobs (stream,
commit, mirror, backup).
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The job identifier.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  job\-cancel  (Since: 3.0)
Instruct an active background job to cancel at the next opportunity.
This command returns immediately after marking the active job for
cancellation.
.sp
The job will cancel as soon as possible and then emit a
JOB_STATUS_CHANGE event.  Usually, the status will change to
ABORTING, but it is possible that a job successfully completes (e.g.
because it was almost done and there was no opportunity to cancel
earlier than completing the job) and transitions to PENDING instead.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The job identifier.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  job\-complete  (Since: 3.0)
Manually trigger completion of an active job in the READY or STANDBY
state.  Completing the job in any other state is an error.
.sp
This is supported only for drive mirroring, where it also switches
the device to write to the target path only. Note that drive
mirroring includes drive\-mirror, blockdev\-mirror and block\-commit
job (only in case of \(dqactive commit\(dq, when the node being commited
is used by the guest). The ability to complete is signaled with a
BLOCK_JOB_READY event.
.sp
This command completes an active background block operation
synchronously.  The ordering of this command\(aqs return with the
BLOCK_JOB_COMPLETED event is not defined.  Note that if an I/O error
occurs during the processing of this command: 1) the command itself
will fail; 2) the error will be processed according to the
rerror/werror arguments that were specified when starting the
operation.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The job identifier.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  job\-dismiss  (Since: 3.0)
Deletes a job that is in the CONCLUDED state.  This command only
needs to be run explicitly for jobs that don\(aqt have automatic
dismiss enabled. In turn, automatic dismiss may be enabled only
for jobs that have \fBauto\-dismiss\fP option, which are drive\-backup,
blockdev\-backup, drive\-mirror, blockdev\-mirror, block\-commit and
block\-stream. \fBauto\-dismiss\fP is enabled by default for these
jobs.
.sp
This command will refuse to operate on any job that has not yet
reached its terminal state, JOB_STATUS_CONCLUDED.  For jobs that
make use of JOB_READY event, job\-cancel or job\-complete will still
need to be used as appropriate.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The job identifier.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  job\-finalize  (Since: 3.0)
Instructs all jobs in a transaction (or a single job if it is not
part of any transaction) to finalize any graph changes and do any
necessary cleanup.  This command requires that all involved jobs are
in the PENDING state.
.sp
For jobs in a transaction, instructing one job to finalize will
force ALL jobs in the transaction to finalize, so it is only
necessary to instruct a single member job to finalize.
.sp
The command is applicable only to jobs which have \fBauto\-finalize\fP option
and only when this option is set to false.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The identifier of any job in the transaction, or of a job that
is not part of any transaction.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  JobInfo  (Since: 3.0)
Information about a job.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The job identifier
.IP \(bu 2
\fBtype\fP (\fI\%JobType\fP) \-\- The kind of job that is being performed
.IP \(bu 2
\fBstatus\fP (\fI\%JobStatus\fP) \-\- Current job state/status
.IP \(bu 2
\fBcurrent\-progress\fP (\fBint\fP) \-\- Progress made until now.  The unit is arbitrary
and the value can only meaningfully be used for the ratio of
\fBcurrent\-progress\fP to \fBtotal\-progress\fP\&.  The value is
monotonically increasing.
.IP \(bu 2
\fBtotal\-progress\fP (\fBint\fP) \-\- Estimated \fBcurrent\-progress\fP value at the completion
of the job.  This value can arbitrarily change while the job is
running, in both directions.
.IP \(bu 2
\fBerror\fP (\fBstring\fP, \fIoptional\fP) \-\- 
.sp
If this field is present, the job failed; if it is still
missing in the CONCLUDED state, this indicates successful
completion.
.sp
The value is a human\-readable error message to describe the
reason for the job failure.  It should not be parsed by
applications.

.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-jobs  (Since: 3.0)
Return information about jobs.
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%JobInfo\fP\fB]\fP \-\- a list with a \fBJobInfo\fP for each active job
.UNINDENT
.UNINDENT
.SH BLOCK DEVICES
.SS Block core (VM unrelated)
.INDENT 0.0
.TP
.B Object  SnapshotInfo  (Since: 1.3)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- unique snapshot id
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- user chosen name
.IP \(bu 2
\fBvm\-state\-size\fP (\fBint\fP) \-\- size of the VM state
.IP \(bu 2
\fBdate\-sec\fP (\fBint\fP) \-\- UTC date of the snapshot in seconds
.IP \(bu 2
\fBdate\-nsec\fP (\fBint\fP) \-\- fractional part in nano seconds to be used with date\-sec
.IP \(bu 2
\fBvm\-clock\-sec\fP (\fBint\fP) \-\- VM clock relative to boot in seconds
.IP \(bu 2
\fBvm\-clock\-nsec\fP (\fBint\fP) \-\- fractional part in nano seconds to be used with
vm\-clock\-sec
.IP \(bu 2
\fBicount\fP (\fBint\fP, \fIoptional\fP) \-\- Current instruction count.  Appears when execution
record/replay is enabled.  Used for \(dqtime\-traveling\(dq to match
the moment in the recorded execution with the snapshots.  This
counter may be obtained through \fBquery\-replay\fP command (since
5.2)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecificQCow2EncryptionBase  (Since: 2.10)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBformat\fP (\fI\%BlockdevQcow2EncryptionFormat\fP) \-\- The encryption format
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecificQCow2Encryption  (Since: 2.10)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%ImageInfoSpecificQCow2EncryptionBase\fP\&.
.IP \(bu 2
When \fBformat\fP is \fBluks\fP: The members of \fI\%QCryptoBlockInfoLUKS\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecificQCow2  (Since: 1.7)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcompat\fP (\fBstring\fP) \-\- compatibility level
.IP \(bu 2
\fBdata\-file\fP (\fBstring\fP, \fIoptional\fP) \-\- the filename of the external data file that is stored in
the image and used as a default for opening the image
(since: 4.0)
.IP \(bu 2
\fBdata\-file\-raw\fP (\fBboolean\fP, \fIoptional\fP) \-\- True if the external data file must stay valid as a
standalone (read\-only) raw image without looking at qcow2
metadata (since: 4.0)
.IP \(bu 2
\fBextended\-l2\fP (\fBboolean\fP, \fIoptional\fP) \-\- true if the image has extended L2 entries; only valid
for compat >= 1.1 (since 5.2)
.IP \(bu 2
\fBlazy\-refcounts\fP (\fBboolean\fP, \fIoptional\fP) \-\- on or off; only valid for compat >= 1.1
.IP \(bu 2
\fBcorrupt\fP (\fBboolean\fP, \fIoptional\fP) \-\- true if the image has been marked corrupt; only valid for
compat >= 1.1 (since 2.2)
.IP \(bu 2
\fBrefcount\-bits\fP (\fBint\fP) \-\- width of a refcount entry in bits (since 2.3)
.IP \(bu 2
\fBencrypt\fP (\fI\%ImageInfoSpecificQCow2Encryption\fP, \fIoptional\fP) \-\- details about encryption parameters; only set if image is
encrypted (since 2.10)
.IP \(bu 2
\fBbitmaps\fP (\fB[\fP\fI\%Qcow2BitmapInfo\fP\fB]\fP, \fIoptional\fP) \-\- A list of qcow2 bitmap details (since 4.0)
.IP \(bu 2
\fBcompression\-type\fP (\fI\%Qcow2CompressionType\fP) \-\- the image cluster compression method (since 5.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecificVmdk  (Since: 1.7)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcreate\-type\fP (\fBstring\fP) \-\- The create type of VMDK image
.IP \(bu 2
\fBcid\fP (\fBint\fP) \-\- Content id of image
.IP \(bu 2
\fBparent\-cid\fP (\fBint\fP) \-\- Parent VMDK image\(aqs cid
.IP \(bu 2
\fBextents\fP (\fB[\fP\fI\%VmdkExtentInfo\fP\fB]\fP) \-\- List of extent files
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VmdkExtentInfo  (Since: 8.0)
Information about a VMDK extent file
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- Name of the extent file
.IP \(bu 2
\fBformat\fP (\fBstring\fP) \-\- Extent type (e.g. FLAT or SPARSE)
.IP \(bu 2
\fBvirtual\-size\fP (\fBint\fP) \-\- Number of bytes covered by this extent
.IP \(bu 2
\fBcluster\-size\fP (\fBint\fP, \fIoptional\fP) \-\- Cluster size in bytes (for non\-flat extents)
.IP \(bu 2
\fBcompressed\fP (\fBboolean\fP, \fIoptional\fP) \-\- Whether this extent contains compressed data
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecificRbd  (Since: 6.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBencryption\-format\fP (\fI\%RbdImageEncryptionFormat\fP, \fIoptional\fP) \-\- Image encryption format
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecificFile  (Since: 8.0)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBextent\-size\-hint\fP (\fBint\fP, \fIoptional\fP) \-\- Extent size hint (if available)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  ImageInfoSpecificKind  (Since: 1.7)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBluks\fP \-\- Since 2.7
.IP \(bu 2
\fBrbd\fP \-\- Since 6.1
.IP \(bu 2
\fBfile\fP \-\- Since 8.0
.IP \(bu 2
\fBqcow2\fP \-\- Not documented
.IP \(bu 2
\fBvmdk\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecificQCow2Wrapper  (Since: 1.7)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ImageInfoSpecificQCow2\fP) \-\- image information specific to QCOW2
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecificVmdkWrapper  (Since: 6.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ImageInfoSpecificVmdk\fP) \-\- image information specific to VMDK
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecificLUKSWrapper  (Since: 2.7)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%QCryptoBlockInfoLUKS\fP) \-\- image information specific to LUKS
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecificRbdWrapper  (Since: 6.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ImageInfoSpecificRbd\fP) \-\- image information specific to RBD
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecificFileWrapper  (Since: 8.0)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ImageInfoSpecificFile\fP) \-\- image information specific to files
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecific  (Since: 1.7)
A discriminated record of image format specific information
structures.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%ImageInfoSpecificKind\fP) \-\- block driver name
.IP \(bu 2
When \fBtype\fP is \fBqcow2\fP: The members of \fI\%ImageInfoSpecificQCow2Wrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBvmdk\fP: The members of \fI\%ImageInfoSpecificVmdkWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBluks\fP: The members of \fI\%ImageInfoSpecificLUKSWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBrbd\fP: The members of \fI\%ImageInfoSpecificRbdWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBfile\fP: The members of \fI\%ImageInfoSpecificFileWrapper\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockNodeInfo  (Since: 8.0)
Information about a QEMU image file
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- name of the image file
.IP \(bu 2
\fBformat\fP (\fBstring\fP) \-\- format of the image file
.IP \(bu 2
\fBvirtual\-size\fP (\fBint\fP) \-\- maximum capacity in bytes of the image
.IP \(bu 2
\fBactual\-size\fP (\fBint\fP, \fIoptional\fP) \-\- actual size on disk in bytes of the image
.IP \(bu 2
\fBdirty\-flag\fP (\fBboolean\fP, \fIoptional\fP) \-\- true if image is not cleanly closed
.IP \(bu 2
\fBcluster\-size\fP (\fBint\fP, \fIoptional\fP) \-\- size of a cluster in bytes
.IP \(bu 2
\fBencrypted\fP (\fBboolean\fP, \fIoptional\fP) \-\- true if the image is encrypted
.IP \(bu 2
\fBcompressed\fP (\fBboolean\fP, \fIoptional\fP) \-\- true if the image is compressed (Since 1.7)
.IP \(bu 2
\fBbacking\-filename\fP (\fBstring\fP, \fIoptional\fP) \-\- name of the backing file
.IP \(bu 2
\fBfull\-backing\-filename\fP (\fBstring\fP, \fIoptional\fP) \-\- full path of the backing file
.IP \(bu 2
\fBbacking\-filename\-format\fP (\fBstring\fP, \fIoptional\fP) \-\- the format of the backing file
.IP \(bu 2
\fBsnapshots\fP (\fB[\fP\fI\%SnapshotInfo\fP\fB]\fP, \fIoptional\fP) \-\- list of VM snapshots
.IP \(bu 2
\fBformat\-specific\fP (\fI\%ImageInfoSpecific\fP, \fIoptional\fP) \-\- structure supplying additional format\-specific
information (since 1.7)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfo  (Since: 1.3)
Information about a QEMU image file, and potentially its backing
image
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBbacking\-image\fP (\fI\%ImageInfo\fP, \fIoptional\fP) \-\- info of the backing image
.IP \(bu 2
The members of \fI\%BlockNodeInfo\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockChildInfo  (Since: 8.0)
Information about all nodes in the block graph starting at some
node, annotated with information about that node in relation to its
parent.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- Child name of the root node in the BlockGraphInfo struct, in
its role as the child of some undescribed parent node
.IP \(bu 2
\fBinfo\fP (\fI\%BlockGraphInfo\fP) \-\- Block graph information starting at this node
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockGraphInfo  (Since: 8.0)
Information about all nodes in a block (sub)graph in the form of
BlockNodeInfo data.  The base BlockNodeInfo struct contains the
information for the (sub)graph\(aqs root node.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBchildren\fP (\fB[\fP\fI\%BlockChildInfo\fP\fB]\fP) \-\- Array of links to this node\(aqs child nodes\(aq information
.IP \(bu 2
The members of \fI\%BlockNodeInfo\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageCheck  (Since: 1.4)
Information about a QEMU image file check
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- name of the image file checked
.IP \(bu 2
\fBformat\fP (\fBstring\fP) \-\- format of the image file checked
.IP \(bu 2
\fBcheck\-errors\fP (\fBint\fP) \-\- number of unexpected errors occurred during check
.IP \(bu 2
\fBimage\-end\-offset\fP (\fBint\fP, \fIoptional\fP) \-\- offset (in bytes) where the image ends, this
field is present if the driver for the image format supports it
.IP \(bu 2
\fBcorruptions\fP (\fBint\fP, \fIoptional\fP) \-\- number of corruptions found during the check if any
.IP \(bu 2
\fBleaks\fP (\fBint\fP, \fIoptional\fP) \-\- number of leaks found during the check if any
.IP \(bu 2
\fBcorruptions\-fixed\fP (\fBint\fP, \fIoptional\fP) \-\- number of corruptions fixed during the check if
any
.IP \(bu 2
\fBleaks\-fixed\fP (\fBint\fP, \fIoptional\fP) \-\- number of leaks fixed during the check if any
.IP \(bu 2
\fBtotal\-clusters\fP (\fBint\fP, \fIoptional\fP) \-\- total number of clusters, this field is present if
the driver for the image format supports it
.IP \(bu 2
\fBallocated\-clusters\fP (\fBint\fP, \fIoptional\fP) \-\- total number of allocated clusters, this field
is present if the driver for the image format supports it
.IP \(bu 2
\fBfragmented\-clusters\fP (\fBint\fP, \fIoptional\fP) \-\- total number of fragmented clusters, this
field is present if the driver for the image format supports it
.IP \(bu 2
\fBcompressed\-clusters\fP (\fBint\fP, \fIoptional\fP) \-\- total number of compressed clusters, this
field is present if the driver for the image format supports it
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MapEntry  (Since: 2.6)
Mapping information from a virtual block range to a host file range
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBstart\fP (\fBint\fP) \-\- virtual (guest) offset of the first byte described by this
entry
.IP \(bu 2
\fBlength\fP (\fBint\fP) \-\- the number of bytes of the mapped virtual range
.IP \(bu 2
\fBdata\fP (\fBboolean\fP) \-\- reading the image will actually read data from a file (in
particular, if \fBoffset\fP is present this means that the sectors
are not simply preallocated, but contain actual data in raw
format)
.IP \(bu 2
\fBzero\fP (\fBboolean\fP) \-\- whether the virtual blocks read as zeroes
.IP \(bu 2
\fBcompressed\fP (\fBboolean\fP) \-\- true if the data is stored compressed (since 8.2)
.IP \(bu 2
\fBdepth\fP (\fBint\fP) \-\- number of layers (0 = top image, 1 = top image\(aqs backing
file, ..., n \- 1 = bottom image (where n is the number of images
in the chain)) before reaching one for which the range is
allocated
.IP \(bu 2
\fBpresent\fP (\fBboolean\fP) \-\- true if this layer provides the data, false if adding a
backing layer could impact this region (since 6.1)
.IP \(bu 2
\fBoffset\fP (\fBint\fP, \fIoptional\fP) \-\- if present, the image file stores the data for this range
in raw format at the given (host) offset
.IP \(bu 2
\fBfilename\fP (\fBstring\fP, \fIoptional\fP) \-\- filename that is referred to by \fBoffset\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCacheInfo  (Since: 2.3)
Cache mode information for a block device
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBwriteback\fP (\fBboolean\fP) \-\- true if writeback mode is enabled
.IP \(bu 2
\fBdirect\fP (\fBboolean\fP) \-\- true if the host page cache is bypassed (O_DIRECT)
.IP \(bu 2
\fBno\-flush\fP (\fBboolean\fP) \-\- true if flush requests are ignored for the device
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockDeviceInfo  (Since: 0.14)
Information about the backing device for a block device.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fBstring\fP) \-\- the filename of the backing device
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of the block driver node (Since 2.0)
.IP \(bu 2
\fBro\fP (\fBboolean\fP) \-\- true if the backing device was open read\-only
.IP \(bu 2
\fBdrv\fP (\fBstring\fP) \-\- the name of the block format used to open the backing device.
As of 0.14 this can be: \(aqblkdebug\(aq, \(aqbochs\(aq, \(aqcloop\(aq, \(aqcow\(aq,
\(aqdmg\(aq, \(aqfile\(aq, \(aqfile\(aq, \(aqftp\(aq, \(aqftps\(aq, \(aqhost_cdrom\(aq,
\(aqhost_device\(aq, \(aqhttp\(aq, \(aqhttps\(aq, \(aqluks\(aq, \(aqnbd\(aq, \(aqparallels\(aq,
\(aqqcow\(aq, \(aqqcow2\(aq, \(aqraw\(aq, \(aqvdi\(aq, \(aqvmdk\(aq, \(aqvpc\(aq, \(aqvvfat\(aq 2.2:
\(aqarchipelago\(aq added, \(aqcow\(aq dropped 2.3: \(aqhost_floppy\(aq deprecated
2.5: \(aqhost_floppy\(aq dropped 2.6: \(aqluks\(aq added 2.8: \(aqreplication\(aq
added, \(aqtftp\(aq dropped 2.9: \(aqarchipelago\(aq dropped
.IP \(bu 2
\fBbacking_file\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of the backing file (for copy\-on\-write)
.IP \(bu 2
\fBbacking_file_depth\fP (\fBint\fP) \-\- number of files in the backing file chain
(since: 1.2)
.IP \(bu 2
\fBactive\fP (\fBboolean\fP) \-\- true if the backend is active; typical cases for inactive backends
are on the migration source instance after migration completes and on the
destination before it completes. (since: 10.0)
.IP \(bu 2
\fBencrypted\fP (\fBboolean\fP) \-\- true if the backing device is encrypted
.IP \(bu 2
\fBdetect_zeroes\fP (\fI\%BlockdevDetectZeroesOptions\fP) \-\- detect and optimize zero writes (Since 2.1)
.IP \(bu 2
\fBbps\fP (\fBint\fP) \-\- total throughput limit in bytes per second is specified
.IP \(bu 2
\fBbps_rd\fP (\fBint\fP) \-\- read throughput limit in bytes per second is specified
.IP \(bu 2
\fBbps_wr\fP (\fBint\fP) \-\- write throughput limit in bytes per second is specified
.IP \(bu 2
\fBiops\fP (\fBint\fP) \-\- total I/O operations per second is specified
.IP \(bu 2
\fBiops_rd\fP (\fBint\fP) \-\- read I/O operations per second is specified
.IP \(bu 2
\fBiops_wr\fP (\fBint\fP) \-\- write I/O operations per second is specified
.IP \(bu 2
\fBimage\fP (\fI\%ImageInfo\fP) \-\- the info of image used (since: 1.6)
.IP \(bu 2
\fBbps_max\fP (\fBint\fP, \fIoptional\fP) \-\- total throughput limit during bursts, in bytes (Since 1.7)
.IP \(bu 2
\fBbps_rd_max\fP (\fBint\fP, \fIoptional\fP) \-\- read throughput limit during bursts, in bytes (Since
1.7)
.IP \(bu 2
\fBbps_wr_max\fP (\fBint\fP, \fIoptional\fP) \-\- write throughput limit during bursts, in bytes (Since
1.7)
.IP \(bu 2
\fBiops_max\fP (\fBint\fP, \fIoptional\fP) \-\- total I/O operations per second during bursts, in bytes
(Since 1.7)
.IP \(bu 2
\fBiops_rd_max\fP (\fBint\fP, \fIoptional\fP) \-\- read I/O operations per second during bursts, in bytes
(Since 1.7)
.IP \(bu 2
\fBiops_wr_max\fP (\fBint\fP, \fIoptional\fP) \-\- write I/O operations per second during bursts, in
bytes (Since 1.7)
.IP \(bu 2
\fBbps_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBbps_max\fP burst period, in
seconds.  (Since 2.6)
.IP \(bu 2
\fBbps_rd_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBbps_rd_max\fP burst period,
in seconds.  (Since 2.6)
.IP \(bu 2
\fBbps_wr_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBbps_wr_max\fP burst period,
in seconds.  (Since 2.6)
.IP \(bu 2
\fBiops_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBiops\fP burst period, in
seconds.  (Since 2.6)
.IP \(bu 2
\fBiops_rd_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBiops_rd_max\fP burst
period, in seconds.  (Since 2.6)
.IP \(bu 2
\fBiops_wr_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBiops_wr_max\fP burst
period, in seconds.  (Since 2.6)
.IP \(bu 2
\fBiops_size\fP (\fBint\fP, \fIoptional\fP) \-\- an I/O size in bytes (Since 1.7)
.IP \(bu 2
\fBgroup\fP (\fBstring\fP, \fIoptional\fP) \-\- throttle group name (Since 2.4)
.IP \(bu 2
\fBcache\fP (\fI\%BlockdevCacheInfo\fP) \-\- the cache mode used for the block device (since: 2.3)
.IP \(bu 2
\fBwrite_threshold\fP (\fBint\fP) \-\- configured write threshold for the device.  0 if
disabled.  (Since 2.3)
.IP \(bu 2
\fBdirty\-bitmaps\fP (\fB[\fP\fI\%BlockDirtyInfo\fP\fB]\fP, \fIoptional\fP) \-\- dirty bitmaps information (only present if node has
one or more dirty bitmaps) (Since 4.2)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockDeviceIoStatus  (Since: 1.0)
An enumeration of block device I/O status.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBok\fP \-\- The last I/O operation has succeeded
.IP \(bu 2
\fBfailed\fP \-\- The last I/O operation has failed
.IP \(bu 2
\fBnospace\fP \-\- The last I/O operation has failed due to a no\-space
condition
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockDirtyInfo  (Since: 1.3)
Block dirty bitmap information.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of the dirty bitmap (Since 2.4)
.IP \(bu 2
\fBcount\fP (\fBint\fP) \-\- number of dirty bytes according to the dirty bitmap
.IP \(bu 2
\fBgranularity\fP (\fBint\fP) \-\- granularity of the dirty bitmap in bytes (since 1.4)
.IP \(bu 2
\fBrecording\fP (\fBboolean\fP) \-\- true if the bitmap is recording new writes from the
guest.  (since 4.0)
.IP \(bu 2
\fBbusy\fP (\fBboolean\fP) \-\- true if the bitmap is in\-use by some operation (NBD or jobs)
and cannot be modified via QMP or used by another operation.
(since 4.0)
.IP \(bu 2
\fBpersistent\fP (\fBboolean\fP) \-\- true if the bitmap was stored on disk, is scheduled to
be stored on disk, or both.  (since 4.0)
.IP \(bu 2
\fBinconsistent\fP (\fBboolean\fP, \fIoptional\fP) \-\- true if this is a persistent bitmap that was
improperly stored.  Implies \fBpersistent\fP to be true; \fBrecording\fP
and \fBbusy\fP to be false.  This bitmap cannot be used.  To remove
it, use \fBblock\-dirty\-bitmap\-remove\fP\&.  (Since 4.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  Qcow2BitmapInfoFlags  (Since: 4.0)
An enumeration of flags that a bitmap can report to the user.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBin\-use\fP \-\- This flag is set by any process actively modifying the
qcow2 file, and cleared when the updated bitmap is flushed to
the qcow2 image.  The presence of this flag in an offline image
means that the bitmap was not saved correctly after its last
usage, and may contain inconsistent data.
.IP \(bu 2
\fBauto\fP \-\- The bitmap must reflect all changes of the virtual disk by
any application that would write to this qcow2 file.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  Qcow2BitmapInfo  (Since: 4.0)
Qcow2 bitmap information.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the name of the bitmap
.IP \(bu 2
\fBgranularity\fP (\fBint\fP) \-\- granularity of the bitmap in bytes
.IP \(bu 2
\fBflags\fP (\fB[\fP\fI\%Qcow2BitmapInfoFlags\fP\fB]\fP) \-\- flags of the bitmap
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockLatencyHistogramInfo  (Since: 4.0)
Block latency histogram.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBboundaries\fP (\fB[\fP\fBint\fP\fB]\fP) \-\- list of interval boundary values in nanoseconds, all
greater than zero and in ascending order.  For example, the list
[10, 50, 100] produces the following histogram intervals: [0,
10), [10, 50), [50, 100), [100, +inf).
.IP \(bu 2
\fBbins\fP (\fB[\fP\fBint\fP\fB]\fP) \-\- 
.sp
list of io request counts corresponding to histogram
intervals, one more element than \fBboundaries\fP has.  For the
example above, \fBbins\fP may be something like [3, 1, 5, 2], and
corresponding histogram looks like:
.INDENT 2.0
.INDENT 3.5
.sp
.nf
.ft C
5|           *
4|           *
3| *         *
2| *         *    *
1| *    *    *    *
 +\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
     10   50   100
.ft P
.fi
.UNINDENT
.UNINDENT

.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockInfo  (Since: 0.14)
Block device information.  This structure describes a virtual device
and the backing device associated with it.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The device name associated with the virtual device.
.IP \(bu 2
\fBqdev\fP (\fBstring\fP, \fIoptional\fP) \-\- The qdev ID, or if no ID is assigned, the QOM path of the
block device.  (since 2.10)
.IP \(bu 2
\fBtype\fP (\fBstring\fP) \-\- This field is returned only for compatibility reasons, it
should not be used (always returns \(aqunknown\(aq)
.IP \(bu 2
\fBremovable\fP (\fBboolean\fP) \-\- True if the device supports removable media.
.IP \(bu 2
\fBlocked\fP (\fBboolean\fP) \-\- True if the guest has locked this device from having its
media removed
.IP \(bu 2
\fBtray_open\fP (\fBboolean\fP, \fIoptional\fP) \-\- True if the device\(aqs tray is open (only present if it
has a tray)
.IP \(bu 2
\fBio\-status\fP (\fI\%BlockDeviceIoStatus\fP, \fIoptional\fP) \-\- \fBBlockDeviceIoStatus\fP\&.  Only present if the device
supports it and the VM is configured to stop on errors
(supported device models: virtio\-blk, IDE, SCSI except
scsi\-generic)
.IP \(bu 2
\fBinserted\fP (\fI\%BlockDeviceInfo\fP, \fIoptional\fP) \-\- \fBBlockDeviceInfo\fP describing the device if media is
present
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockMeasureInfo  (Since: 2.10)
Image file size calculation information.  This structure describes
the size requirements for creating a new image file.
.sp
The size requirements depend on the new image file format.  File
size always equals virtual disk size for the \(aqraw\(aq format, even for
sparse POSIX files.  Compact formats such as \(aqqcow2\(aq represent
unallocated and zero regions efficiently so file size may be smaller
than virtual disk size.
.sp
The values are upper bounds that are guaranteed to fit the new image
file.  Subsequent modification, such as internal snapshot or further
bitmap creation, may require additional space and is not covered
here.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBrequired\fP (\fBint\fP) \-\- Size required for a new image file, in bytes, when
copying just allocated guest\-visible contents.
.IP \(bu 2
\fBfully\-allocated\fP (\fBint\fP) \-\- Image file size, in bytes, once data has been
written to all sectors, when copying just guest\-visible
contents.
.IP \(bu 2
\fBbitmaps\fP (\fBint\fP, \fIoptional\fP) \-\- Additional size required if all the top\-level bitmap
metadata in the source image were to be copied to the
destination, present only when source and destination both
support persistent bitmaps.  (since 5.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-block  (Since: 0.14)
Get a list of BlockInfo for all virtual block devices.
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%BlockInfo\fP\fB]\fP \-\- a list of \fBBlockInfo\fP describing each virtual block device.
Filter nodes that were created implicitly are skipped over.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-block\(dq }
<\- {
      \(dqreturn\(dq:[
         {
            \(dqio\-status\(dq: \(dqok\(dq,
            \(dqdevice\(dq:\(dqide0\-hd0\(dq,
            \(dqlocked\(dq:false,
            \(dqremovable\(dq:false,
            \(dqinserted\(dq:{
               \(dqro\(dq:false,
               \(dqdrv\(dq:\(dqqcow2\(dq,
               \(dqencrypted\(dq:false,
               \(dqfile\(dq:\(dqdisks/test.qcow2\(dq,
               \(dqbacking_file_depth\(dq:1,
               \(dqbps\(dq:1000000,
               \(dqbps_rd\(dq:0,
               \(dqbps_wr\(dq:0,
               \(dqiops\(dq:1000000,
               \(dqiops_rd\(dq:0,
               \(dqiops_wr\(dq:0,
               \(dqbps_max\(dq: 8000000,
               \(dqbps_rd_max\(dq: 0,
               \(dqbps_wr_max\(dq: 0,
               \(dqiops_max\(dq: 0,
               \(dqiops_rd_max\(dq: 0,
               \(dqiops_wr_max\(dq: 0,
               \(dqiops_size\(dq: 0,
               \(dqdetect_zeroes\(dq: \(dqon\(dq,
               \(dqwrite_threshold\(dq: 0,
               \(dqimage\(dq:{
                  \(dqfilename\(dq:\(dqdisks/test.qcow2\(dq,
                  \(dqformat\(dq:\(dqqcow2\(dq,
                  \(dqvirtual\-size\(dq:2048000,
                  \(dqbacking_file\(dq:\(dqbase.qcow2\(dq,
                  \(dqfull\-backing\-filename\(dq:\(dqdisks/base.qcow2\(dq,
                  \(dqbacking\-filename\-format\(dq:\(dqqcow2\(dq,
                  \(dqsnapshots\(dq:[
                     {
                        \(dqid\(dq: \(dq1\(dq,
                        \(dqname\(dq: \(dqsnapshot1\(dq,
                        \(dqvm\-state\-size\(dq: 0,
                        \(dqdate\-sec\(dq: 10000200,
                        \(dqdate\-nsec\(dq: 12,
                        \(dqvm\-clock\-sec\(dq: 206,
                        \(dqvm\-clock\-nsec\(dq: 30
                     }
                  ],
                  \(dqbacking\-image\(dq:{
                      \(dqfilename\(dq:\(dqdisks/base.qcow2\(dq,
                      \(dqformat\(dq:\(dqqcow2\(dq,
                      \(dqvirtual\-size\(dq:2048000
                  }
               }
            },
            \(dqqdev\(dq: \(dqide_disk\(dq,
            \(dqtype\(dq:\(dqunknown\(dq
         },
         {
            \(dqio\-status\(dq: \(dqok\(dq,
            \(dqdevice\(dq:\(dqide1\-cd0\(dq,
            \(dqlocked\(dq:false,
            \(dqremovable\(dq:true,
            \(dqqdev\(dq: \(dq/machine/unattached/device[23]\(dq,
            \(dqtray_open\(dq: false,
            \(dqtype\(dq:\(dqunknown\(dq
         },
         {
            \(dqdevice\(dq:\(dqfloppy0\(dq,
            \(dqlocked\(dq:false,
            \(dqremovable\(dq:true,
            \(dqqdev\(dq: \(dq/machine/unattached/device[20]\(dq,
            \(dqtype\(dq:\(dqunknown\(dq
         },
         {
            \(dqdevice\(dq:\(dqsd0\(dq,
            \(dqlocked\(dq:false,
            \(dqremovable\(dq:true,
            \(dqtype\(dq:\(dqunknown\(dq
         }
      ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockDeviceTimedStats  (Since: 2.5)
Statistics of a block device during a given interval of time.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBinterval_length\fP (\fBint\fP) \-\- Interval used for calculating the statistics, in
seconds.
.IP \(bu 2
\fBmin_rd_latency_ns\fP (\fBint\fP) \-\- Minimum latency of read operations in the
defined interval, in nanoseconds.
.IP \(bu 2
\fBmin_wr_latency_ns\fP (\fBint\fP) \-\- Minimum latency of write operations in the
defined interval, in nanoseconds.
.IP \(bu 2
\fBmin_zone_append_latency_ns\fP (\fBint\fP) \-\- Minimum latency of zone append
operations in the defined interval, in nanoseconds (since 8.1)
.IP \(bu 2
\fBmin_flush_latency_ns\fP (\fBint\fP) \-\- Minimum latency of flush operations in the
defined interval, in nanoseconds.
.IP \(bu 2
\fBmax_rd_latency_ns\fP (\fBint\fP) \-\- Maximum latency of read operations in the
defined interval, in nanoseconds.
.IP \(bu 2
\fBmax_wr_latency_ns\fP (\fBint\fP) \-\- Maximum latency of write operations in the
defined interval, in nanoseconds.
.IP \(bu 2
\fBmax_zone_append_latency_ns\fP (\fBint\fP) \-\- Maximum latency of zone append
operations in the defined interval, in nanoseconds (since 8.1)
.IP \(bu 2
\fBmax_flush_latency_ns\fP (\fBint\fP) \-\- Maximum latency of flush operations in the
defined interval, in nanoseconds.
.IP \(bu 2
\fBavg_rd_latency_ns\fP (\fBint\fP) \-\- Average latency of read operations in the
defined interval, in nanoseconds.
.IP \(bu 2
\fBavg_wr_latency_ns\fP (\fBint\fP) \-\- Average latency of write operations in the
defined interval, in nanoseconds.
.IP \(bu 2
\fBavg_zone_append_latency_ns\fP (\fBint\fP) \-\- Average latency of zone append
operations in the defined interval, in nanoseconds (since 8.1)
.IP \(bu 2
\fBavg_flush_latency_ns\fP (\fBint\fP) \-\- Average latency of flush operations in the
defined interval, in nanoseconds.
.IP \(bu 2
\fBavg_rd_queue_depth\fP (\fBnumber\fP) \-\- Average number of pending read operations in
the defined interval.
.IP \(bu 2
\fBavg_wr_queue_depth\fP (\fBnumber\fP) \-\- Average number of pending write operations in
the defined interval.
.IP \(bu 2
\fBavg_zone_append_queue_depth\fP (\fBnumber\fP) \-\- Average number of pending zone append
operations in the defined interval (since 8.1).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockDeviceStats  (Since: 0.14)
Statistics of a virtual block device or a block backing device.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBrd_bytes\fP (\fBint\fP) \-\- The number of bytes read by the device.
.IP \(bu 2
\fBwr_bytes\fP (\fBint\fP) \-\- The number of bytes written by the device.
.IP \(bu 2
\fBzone_append_bytes\fP (\fBint\fP) \-\- The number of bytes appended by the zoned
devices (since 8.1)
.IP \(bu 2
\fBunmap_bytes\fP (\fBint\fP) \-\- The number of bytes unmapped by the device (Since 4.2)
.IP \(bu 2
\fBrd_operations\fP (\fBint\fP) \-\- The number of read operations performed by the
device.
.IP \(bu 2
\fBwr_operations\fP (\fBint\fP) \-\- The number of write operations performed by the
device.
.IP \(bu 2
\fBzone_append_operations\fP (\fBint\fP) \-\- The number of zone append operations
performed by the zoned devices (since 8.1)
.IP \(bu 2
\fBflush_operations\fP (\fBint\fP) \-\- The number of cache flush operations performed by
the device (since 0.15)
.IP \(bu 2
\fBunmap_operations\fP (\fBint\fP) \-\- The number of unmap operations performed by the
device (Since 4.2)
.IP \(bu 2
\fBrd_total_time_ns\fP (\fBint\fP) \-\- Total time spent on reads in nanoseconds (since
0.15).
.IP \(bu 2
\fBwr_total_time_ns\fP (\fBint\fP) \-\- Total time spent on writes in nanoseconds (since
0.15).
.IP \(bu 2
\fBzone_append_total_time_ns\fP (\fBint\fP) \-\- Total time spent on zone append writes
in nanoseconds (since 8.1)
.IP \(bu 2
\fBflush_total_time_ns\fP (\fBint\fP) \-\- Total time spent on cache flushes in
nanoseconds (since 0.15).
.IP \(bu 2
\fBunmap_total_time_ns\fP (\fBint\fP) \-\- Total time spent on unmap operations in
nanoseconds (Since 4.2)
.IP \(bu 2
\fBwr_highest_offset\fP (\fBint\fP) \-\- The offset after the greatest byte written to
the device.  The intended use of this information is for
growable sparse files (like qcow2) that are used on top of a
physical device.
.IP \(bu 2
\fBrd_merged\fP (\fBint\fP) \-\- Number of read requests that have been merged into
another request (Since 2.3).
.IP \(bu 2
\fBwr_merged\fP (\fBint\fP) \-\- Number of write requests that have been merged into
another request (Since 2.3).
.IP \(bu 2
\fBzone_append_merged\fP (\fBint\fP) \-\- Number of zone append requests that have been
merged into another request (since 8.1)
.IP \(bu 2
\fBunmap_merged\fP (\fBint\fP) \-\- Number of unmap requests that have been merged into
another request (Since 4.2)
.IP \(bu 2
\fBidle_time_ns\fP (\fBint\fP, \fIoptional\fP) \-\- Time since the last I/O operation, in nanoseconds.
If the field is absent it means that there haven\(aqt been any
operations yet (Since 2.5).
.IP \(bu 2
\fBfailed_rd_operations\fP (\fBint\fP) \-\- The number of failed read operations
performed by the device (Since 2.5)
.IP \(bu 2
\fBfailed_wr_operations\fP (\fBint\fP) \-\- The number of failed write operations
performed by the device (Since 2.5)
.IP \(bu 2
\fBfailed_zone_append_operations\fP (\fBint\fP) \-\- The number of failed zone append
write operations performed by the zoned devices (since 8.1)
.IP \(bu 2
\fBfailed_flush_operations\fP (\fBint\fP) \-\- The number of failed flush operations
performed by the device (Since 2.5)
.IP \(bu 2
\fBfailed_unmap_operations\fP (\fBint\fP) \-\- The number of failed unmap operations
performed by the device (Since 4.2)
.IP \(bu 2
\fBinvalid_rd_operations\fP (\fBint\fP) \-\- The number of invalid read operations
performed by the device (Since 2.5)
.IP \(bu 2
\fBinvalid_wr_operations\fP (\fBint\fP) \-\- The number of invalid write operations
performed by the device (Since 2.5)
.IP \(bu 2
\fBinvalid_zone_append_operations\fP (\fBint\fP) \-\- The number of invalid zone append
operations performed by the zoned device (since 8.1)
.IP \(bu 2
\fBinvalid_flush_operations\fP (\fBint\fP) \-\- The number of invalid flush operations
performed by the device (Since 2.5)
.IP \(bu 2
\fBinvalid_unmap_operations\fP (\fBint\fP) \-\- The number of invalid unmap operations
performed by the device (Since 4.2)
.IP \(bu 2
\fBaccount_invalid\fP (\fBboolean\fP) \-\- Whether invalid operations are included in the
last access statistics (Since 2.5)
.IP \(bu 2
\fBaccount_failed\fP (\fBboolean\fP) \-\- Whether failed operations are included in the
latency and last access statistics (Since 2.5)
.IP \(bu 2
\fBtimed_stats\fP (\fB[\fP\fI\%BlockDeviceTimedStats\fP\fB]\fP) \-\- Statistics specific to the set of previously defined
intervals of time (Since 2.5)
.IP \(bu 2
\fBrd_latency_histogram\fP (\fI\%BlockLatencyHistogramInfo\fP, \fIoptional\fP) \-\- \fBBlockLatencyHistogramInfo\fP\&.  (Since 4.0)
.IP \(bu 2
\fBwr_latency_histogram\fP (\fI\%BlockLatencyHistogramInfo\fP, \fIoptional\fP) \-\- \fBBlockLatencyHistogramInfo\fP\&.  (Since 4.0)
.IP \(bu 2
\fBzone_append_latency_histogram\fP (\fI\%BlockLatencyHistogramInfo\fP, \fIoptional\fP) \-\- \fBBlockLatencyHistogramInfo\fP\&.
(since 8.1)
.IP \(bu 2
\fBflush_latency_histogram\fP (\fI\%BlockLatencyHistogramInfo\fP, \fIoptional\fP) \-\- \fBBlockLatencyHistogramInfo\fP\&.  (Since 4.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockStatsSpecificFile  (Since: 4.2)
File driver statistics
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdiscard\-nb\-ok\fP (\fBint\fP) \-\- The number of successful discard operations
performed by the driver.
.IP \(bu 2
\fBdiscard\-nb\-failed\fP (\fBint\fP) \-\- The number of failed discard operations
performed by the driver.
.IP \(bu 2
\fBdiscard\-bytes\-ok\fP (\fBint\fP) \-\- The number of bytes discarded by the driver.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockStatsSpecificNvme  (Since: 5.2)
NVMe driver statistics
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcompletion\-errors\fP (\fBint\fP) \-\- The number of completion errors.
.IP \(bu 2
\fBaligned\-accesses\fP (\fBint\fP) \-\- The number of aligned accesses performed by the
driver.
.IP \(bu 2
\fBunaligned\-accesses\fP (\fBint\fP) \-\- The number of unaligned accesses performed by
the driver.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockStatsSpecific  (Since: 4.2)
Block driver specific statistics
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdriver\fP (\fI\%BlockdevDriver\fP) \-\- block driver name
.IP \(bu 2
When \fBdriver\fP is \fBfile\fP: The members of \fI\%BlockStatsSpecificFile\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBhost_device\fP: The members of \fI\%BlockStatsSpecificFile\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBnvme\fP: The members of \fI\%BlockStatsSpecificNvme\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockStats  (Since: 0.14)
Statistics of a virtual block device or a block backing device.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP, \fIoptional\fP) \-\- If the stats are for a virtual block device, the name
corresponding to the virtual block device.
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- The node name of the device.  (Since 2.3)
.IP \(bu 2
\fBqdev\fP (\fBstring\fP, \fIoptional\fP) \-\- The qdev ID, or if no ID is assigned, the QOM path of the
block device.  (since 3.0)
.IP \(bu 2
\fBstats\fP (\fI\%BlockDeviceStats\fP) \-\- A \fBBlockDeviceStats\fP for the device.
.IP \(bu 2
\fBdriver\-specific\fP (\fI\%BlockStatsSpecific\fP, \fIoptional\fP) \-\- Optional driver\-specific stats.  (Since 4.2)
.IP \(bu 2
\fBparent\fP (\fI\%BlockStats\fP, \fIoptional\fP) \-\- This describes the file block device if it has one.
Contains recursively the statistics of the underlying protocol
(e.g. the host file for a qcow2 image).  If there is no
underlying protocol, this field is omitted
.IP \(bu 2
\fBbacking\fP (\fI\%BlockStats\fP, \fIoptional\fP) \-\- This describes the backing block device if it has one.
(Since 2.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-blockstats  (Since: 0.14)
Query the \fBBlockStats\fP for all virtual block devices.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBquery\-nodes\fP (\fBboolean\fP, \fIoptional\fP) \-\- If true, the command will query all the block nodes
that have a node name, in a list which will include \(dqparent\(dq
information, but not \(dqbacking\(dq.  If false or omitted, the
behavior is as before \- query all the device backends,
recursively including their \(dqparent\(dq and \(dqbacking\(dq.  Filter
nodes that were created implicitly are skipped over in this
mode.  (Since 2.3)
.UNINDENT
.TP
.B Return
\fB[\fP\fI\%BlockStats\fP\fB]\fP \-\- A list of \fBBlockStats\fP for each virtual block devices.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-blockstats\(dq }
<\- {
      \(dqreturn\(dq:[
         {
            \(dqdevice\(dq:\(dqide0\-hd0\(dq,
            \(dqparent\(dq:{
               \(dqstats\(dq:{
                  \(dqwr_highest_offset\(dq:3686448128,
                  \(dqwr_bytes\(dq:9786368,
                  \(dqwr_operations\(dq:751,
                  \(dqrd_bytes\(dq:122567168,
                  \(dqrd_operations\(dq:36772
                  \(dqwr_total_times_ns\(dq:313253456
                  \(dqrd_total_times_ns\(dq:3465673657
                  \(dqflush_total_times_ns\(dq:49653
                  \(dqflush_operations\(dq:61,
                  \(dqrd_merged\(dq:0,
                  \(dqwr_merged\(dq:0,
                  \(dqidle_time_ns\(dq:2953431879,
                  \(dqaccount_invalid\(dq:true,
                  \(dqaccount_failed\(dq:false
               }
            },
            \(dqstats\(dq:{
               \(dqwr_highest_offset\(dq:2821110784,
               \(dqwr_bytes\(dq:9786368,
               \(dqwr_operations\(dq:692,
               \(dqrd_bytes\(dq:122739200,
               \(dqrd_operations\(dq:36604
               \(dqflush_operations\(dq:51,
               \(dqwr_total_times_ns\(dq:313253456
               \(dqrd_total_times_ns\(dq:3465673657
               \(dqflush_total_times_ns\(dq:49653,
               \(dqrd_merged\(dq:0,
               \(dqwr_merged\(dq:0,
               \(dqidle_time_ns\(dq:2953431879,
               \(dqaccount_invalid\(dq:true,
               \(dqaccount_failed\(dq:false
            },
            \(dqqdev\(dq: \(dq/machine/unattached/device[23]\(dq
         },
         {
            \(dqdevice\(dq:\(dqide1\-cd0\(dq,
            \(dqstats\(dq:{
               \(dqwr_highest_offset\(dq:0,
               \(dqwr_bytes\(dq:0,
               \(dqwr_operations\(dq:0,
               \(dqrd_bytes\(dq:0,
               \(dqrd_operations\(dq:0
               \(dqflush_operations\(dq:0,
               \(dqwr_total_times_ns\(dq:0
               \(dqrd_total_times_ns\(dq:0
               \(dqflush_total_times_ns\(dq:0,
               \(dqrd_merged\(dq:0,
               \(dqwr_merged\(dq:0,
               \(dqaccount_invalid\(dq:false,
               \(dqaccount_failed\(dq:false
            },
            \(dqqdev\(dq: \(dq/machine/unattached/device[24]\(dq
         },
         {
            \(dqdevice\(dq:\(dqfloppy0\(dq,
            \(dqstats\(dq:{
               \(dqwr_highest_offset\(dq:0,
               \(dqwr_bytes\(dq:0,
               \(dqwr_operations\(dq:0,
               \(dqrd_bytes\(dq:0,
               \(dqrd_operations\(dq:0
               \(dqflush_operations\(dq:0,
               \(dqwr_total_times_ns\(dq:0
               \(dqrd_total_times_ns\(dq:0
               \(dqflush_total_times_ns\(dq:0,
               \(dqrd_merged\(dq:0,
               \(dqwr_merged\(dq:0,
               \(dqaccount_invalid\(dq:false,
               \(dqaccount_failed\(dq:false
            },
            \(dqqdev\(dq: \(dq/machine/unattached/device[16]\(dq
         },
         {
            \(dqdevice\(dq:\(dqsd0\(dq,
            \(dqstats\(dq:{
               \(dqwr_highest_offset\(dq:0,
               \(dqwr_bytes\(dq:0,
               \(dqwr_operations\(dq:0,
               \(dqrd_bytes\(dq:0,
               \(dqrd_operations\(dq:0
               \(dqflush_operations\(dq:0,
               \(dqwr_total_times_ns\(dq:0
               \(dqrd_total_times_ns\(dq:0
               \(dqflush_total_times_ns\(dq:0,
               \(dqrd_merged\(dq:0,
               \(dqwr_merged\(dq:0,
               \(dqaccount_invalid\(dq:false,
               \(dqaccount_failed\(dq:false
            }
         }
      ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevOnError  (Since: 1.3)
An enumeration of possible behaviors for errors on I/O operations.
The exact meaning depends on whether the I/O was initiated by a
guest or by a block job
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBreport\fP \-\- for guest operations, report the error to the guest; for
jobs, cancel the job
.IP \(bu 2
\fBignore\fP \-\- ignore the error, only report a QMP event (BLOCK_IO_ERROR
or BLOCK_JOB_ERROR).  The backup, mirror and commit block jobs
retry the failing request later and may still complete
successfully.  The stream block job continues to stream and will
complete with an error.
.IP \(bu 2
\fBenospc\fP \-\- same as \fBstop\fP on ENOSPC, same as \fBreport\fP otherwise.
.IP \(bu 2
\fBstop\fP \-\- for guest operations, stop the virtual machine; for jobs,
pause the job
.IP \(bu 2
\fBauto\fP \-\- inherit the error handling policy of the backend (since: 2.7)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  MirrorSyncMode  (Since: 1.3)
An enumeration of possible behaviors for the initial synchronization
phase of storage mirroring.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBtop\fP \-\- copies data in the topmost image to the destination
.IP \(bu 2
\fBfull\fP \-\- copies data from all images to the destination
.IP \(bu 2
\fBnone\fP \-\- only copy data written from now on
.IP \(bu 2
\fBincremental\fP \-\- only copy data described by the dirty bitmap.
(since: 2.4)
.IP \(bu 2
\fBbitmap\fP \-\- only copy data described by the dirty bitmap.  (since: 4.2)
Behavior on completion is determined by the BitmapSyncMode.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BitmapSyncMode  (Since: 4.2)
An enumeration of possible behaviors for the synchronization of a
bitmap when used for data copy operations.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBon\-success\fP \-\- The bitmap is only synced when the operation is
successful.  This is the behavior always used for \(aqINCREMENTAL\(aq
backups.
.IP \(bu 2
\fBnever\fP \-\- The bitmap is never synchronized with the operation, and is
treated solely as a read\-only manifest of blocks to copy.
.IP \(bu 2
\fBalways\fP \-\- The bitmap is always synchronized with the operation,
regardless of whether or not the operation was successful.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  MirrorCopyMode  (Since: 3.0)
An enumeration whose values tell the mirror block job when to
trigger writes to the target.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBbackground\fP \-\- copy data in background only.
.IP \(bu 2
\fBwrite\-blocking\fP \-\- when data is written to the source, write it
(synchronously) to the target as well.  In addition, data is
copied in background just like in \fBbackground\fP mode.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockJobInfoMirror  (Since: 8.2)
Information specific to mirror block jobs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBactively\-synced\fP (\fBboolean\fP) \-\- Whether the source is actively synced to the
target, i.e. same data and new writes are done synchronously to
both.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockJobInfo  (Since: 1.1)
Information about a long\-running block device operation.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%JobType\fP) \-\- the job type (\(aqstream\(aq for image streaming)
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The job identifier.  Originally the device name but other
values are allowed since QEMU 2.7
.IP \(bu 2
\fBlen\fP (\fBint\fP) \-\- Estimated \fBoffset\fP value at the completion of the job.  This
value can arbitrarily change while the job is running, in both
directions.
.IP \(bu 2
\fBoffset\fP (\fBint\fP) \-\- Progress made until now.  The unit is arbitrary and the
value can only meaningfully be used for the ratio of \fBoffset\fP to
\fBlen\fP\&.  The value is monotonically increasing.
.IP \(bu 2
\fBbusy\fP (\fBboolean\fP) \-\- false if the job is known to be in a quiescent state, with no
pending I/O.  (Since 1.3)
.IP \(bu 2
\fBpaused\fP (\fBboolean\fP) \-\- whether the job is paused or, if \fBbusy\fP is true, will pause
itself as soon as possible.  (Since 1.3)
.IP \(bu 2
\fBspeed\fP (\fBint\fP) \-\- the rate limit, bytes per second
.IP \(bu 2
\fBio\-status\fP (\fI\%BlockDeviceIoStatus\fP) \-\- the status of the job (since 1.3)
.IP \(bu 2
\fBready\fP (\fBboolean\fP) \-\- true if the job may be completed (since 2.2)
.IP \(bu 2
\fBstatus\fP (\fI\%JobStatus\fP) \-\- Current job state/status (since 2.12)
.IP \(bu 2
\fBauto\-finalize\fP (\fBboolean\fP) \-\- Job will finalize itself when PENDING, moving to the
CONCLUDED state.  (since 2.12)
.IP \(bu 2
\fBauto\-dismiss\fP (\fBboolean\fP) \-\- Job will dismiss itself when CONCLUDED, moving to the
NULL state and disappearing from the query list.  (since 2.12)
.IP \(bu 2
\fBerror\fP (\fBstring\fP, \fIoptional\fP) \-\- Error information if the job did not complete successfully.
Not set if the job completed successfully.  (since 2.12.1)
.IP \(bu 2
When \fBtype\fP is \fBmirror\fP: The members of \fI\%BlockJobInfoMirror\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-block\-jobs  (Since: 1.1)
Return information about long\-running block device operations.
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%BlockJobInfo\fP\fB]\fP \-\- a list of \fBBlockJobInfo\fP for each active block job
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block_resize  (Since: 0.14)
Resize a block image while a guest is running.
.sp
Either \fBdevice\fP or \fBnode\-name\fP must be set but not both.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of the device to get the image resized
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- graph node name to get the image resized (Since 2.0)
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- new image size in bytes
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBdevice\fP is not a valid block device, DeviceNotFound
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock_resize\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqscratch\(dq, \(dqsize\(dq: 1073741824 } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  NewImageMode  (Since: 1.1)
An enumeration that tells QEMU how to set the backing file path in a
new image file.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBexisting\fP \-\- QEMU should look for an existing image file.
.IP \(bu 2
\fBabsolute\-paths\fP \-\- QEMU should create a new image with absolute paths
for the backing file.  If there is no backing file available,
the new image will not be backed either.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevSnapshotSync
Either \fBdevice\fP or \fBnode\-name\fP must be set but not both.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of the device to take a snapshot of.
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- graph node name to generate the snapshot from (Since
2.0)
.IP \(bu 2
\fBsnapshot\-file\fP (\fBstring\fP) \-\- the target of the new overlay image.  If the file
exists, or if it is a device, the overlay will be created in the
existing file/device.  Otherwise, a new file will be created.
.IP \(bu 2
\fBsnapshot\-node\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- the graph node name of the new image (Since
2.0)
.IP \(bu 2
\fBformat\fP (\fBstring\fP, \fIoptional\fP) \-\- the format of the overlay image, default is \(aqqcow2\(aq.
.IP \(bu 2
\fBmode\fP (\fI\%NewImageMode\fP, \fIoptional\fP) \-\- whether and how QEMU should create a new image, default is
\(aqabsolute\-paths\(aq.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevSnapshot  (Since: 2.5)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnode\fP (\fBstring\fP) \-\- device or node name that will have a snapshot taken.
.IP \(bu 2
\fBoverlay\fP (\fBstring\fP) \-\- reference to the existing block device that will become
the overlay of \fBnode\fP, as part of taking the snapshot.  It must
not have a current backing file (this can be achieved by passing
\(dqbacking\(dq: null to blockdev\-add).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BackupPerf  (Since: 6.0)
Optional parameters for backup.  These parameters don\(aqt affect
functionality, but may significantly affect performance.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBuse\-copy\-range\fP (\fBboolean\fP, \fIoptional\fP) \-\- Use copy offloading.  Default false.
.IP \(bu 2
\fBmax\-workers\fP (\fBint\fP, \fIoptional\fP) \-\- Maximum number of parallel requests for the sustained
background copying process.  Doesn\(aqt influence copy\-before\-write
operations.  Default 64.
.IP \(bu 2
\fBmax\-chunk\fP (\fBint\fP, \fIoptional\fP) \-\- Maximum request length for the sustained background
copying process.  Doesn\(aqt influence copy\-before\-write
operations.  0 means unlimited.  If max\-chunk is non\-zero then
it should not be less than job cluster size which is calculated
as maximum of target image cluster size and 64k.  Default 0.
.IP \(bu 2
\fBmin\-cluster\-size\fP (\fBint\fP, \fIoptional\fP) \-\- Minimum size of blocks used by copy\-before\-write
and background copy operations.  Has to be a power of 2.  No
effect if smaller than the maximum of the target\(aqs cluster size
and 64 KiB.  Default 0.  (Since 9.2)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BackupCommon  (Since: 4.2)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBjob\-id\fP (\fBstring\fP, \fIoptional\fP) \-\- identifier for the newly\-created block job.  If omitted,
the device name will be used.  (Since 2.7)
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- the device name or node\-name of a root node which should be
copied.
.IP \(bu 2
\fBsync\fP (\fI\%MirrorSyncMode\fP) \-\- what parts of the disk image should be copied to the
destination (all the disk, only the sectors allocated in the
topmost image, from a dirty bitmap, or only new I/O).
.IP \(bu 2
\fBspeed\fP (\fBint\fP, \fIoptional\fP) \-\- the maximum speed, in bytes per second.  The default is 0,
for unlimited.
.IP \(bu 2
\fBbitmap\fP (\fBstring\fP, \fIoptional\fP) \-\- The name of a dirty bitmap to use.  Must be present if sync
is \(dqbitmap\(dq or \(dqincremental\(dq.  Can be present if sync is \(dqfull\(dq
or \(dqtop\(dq.  Must not be present otherwise.
(Since 2.4 (drive\-backup), 3.1 (blockdev\-backup))
.IP \(bu 2
\fBbitmap\-mode\fP (\fI\%BitmapSyncMode\fP, \fIoptional\fP) \-\- Specifies the type of data the bitmap should contain
after the operation concludes.  Must be present if a bitmap was
provided, Must NOT be present otherwise.  (Since 4.2)
.IP \(bu 2
\fBcompress\fP (\fBboolean\fP, \fIoptional\fP) \-\- true to compress data, if the target format supports it.
(default: false) (since 2.8)
.IP \(bu 2
\fBon\-source\-error\fP (\fI\%BlockdevOnError\fP, \fIoptional\fP) \-\- the action to take on an error on the source,
default \(aqreport\(aq.  \(aqstop\(aq and \(aqenospc\(aq can only be used if the
block device supports io\-status (see BlockInfo).
.IP \(bu 2
\fBon\-target\-error\fP (\fI\%BlockdevOnError\fP, \fIoptional\fP) \-\- the action to take on an error on the target,
default \(aqreport\(aq (no limitations, since this applies to a
different block device than \fBdevice\fP).
.IP \(bu 2
\fBon\-cbw\-error\fP (\fI\%OnCbwError\fP, \fIoptional\fP) \-\- policy defining behavior on I/O errors in
copy\-before\-write jobs; defaults to break\-guest\-write.  (Since 10.1)
.IP \(bu 2
\fBauto\-finalize\fP (\fBboolean\fP, \fIoptional\fP) \-\- When false, this job will wait in a PENDING state
after it has finished its work, waiting for \fBblock\-job\-finalize\fP
before making any block graph changes.  When true, this job will
automatically perform its abort or commit actions.  Defaults to
true.  (Since 2.12)
.IP \(bu 2
\fBauto\-dismiss\fP (\fBboolean\fP, \fIoptional\fP) \-\- When false, this job will wait in a CONCLUDED state
after it has completely ceased all work, and awaits
\fBblock\-job\-dismiss\fP\&.  When true, this job will automatically
disappear from the query list without user intervention.
Defaults to true.  (Since 2.12)
.IP \(bu 2
\fBfilter\-node\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- the node name that should be assigned to the
filter driver that the backup job inserts into the graph above
node specified by \fBdrive\fP\&.  If this option is not given, a node
name is autogenerated.  (Since: 4.2)
.IP \(bu 2
\fBdiscard\-source\fP (\fBboolean\fP, \fIoptional\fP) \-\- Discard blocks on source which have already been
copied to the target.  (Since 9.1)
.IP \(bu 2
\fBx\-perf\fP (\fI\%BackupPerf\fP, \fIoptional\fP) \-\- Performance options.  (Since 6.0)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- Member \fBx\-perf\fP is experimental.
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
\fBon\-source\-error\fP and \fBon\-target\-error\fP only affect
background I/O.  If an error occurs during a guest write request,
the device\(aqs rerror/werror actions will be used.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DriveBackup  (Since: 1.6)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtarget\fP (\fBstring\fP) \-\- the target of the new image.  If the file exists, or if it
is a device, the existing file/device will be used as the new
destination.  If it does not exist, a new file will be created.
.IP \(bu 2
\fBformat\fP (\fBstring\fP, \fIoptional\fP) \-\- the format of the new destination, default is to probe if
\fBmode\fP is \(aqexisting\(aq, else the format of the source
.IP \(bu 2
\fBmode\fP (\fI\%NewImageMode\fP, \fIoptional\fP) \-\- whether and how QEMU should create a new image, default is
\(aqabsolute\-paths\(aq.
.IP \(bu 2
The members of \fI\%BackupCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevBackup  (Since: 2.3)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtarget\fP (\fBstring\fP) \-\- the device name or node\-name of the backup target node.
.IP \(bu 2
The members of \fI\%BackupCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-snapshot\-sync  (Since: 0.14)
Takes a synchronous snapshot of a block device.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockdevSnapshotSync\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBdevice\fP is not a valid block device, DeviceNotFound
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-snapshot\-sync\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqide\-hd0\(dq,
                    \(dqsnapshot\-file\(dq:
                    \(dq/some/place/my\-image\(dq,
                    \(dqformat\(dq: \(dqqcow2\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-snapshot  (Since: 2.5)
Takes a snapshot of a block device.
.sp
Take a snapshot, by installing \(aqnode\(aq as the backing image of
\(aqoverlay\(aq.  Additionally, if \(aqnode\(aq is associated with a block
device, the block device changes to using \(aqoverlay\(aq as its new
active image.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockdevSnapshot\fP\&.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBallow\-write\-only\-overlay\fP \-\- If present, the check whether this
operation is safe was relaxed so that it can be used to change
backing file of a destination of a blockdev\-mirror.  (since 5.0)
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-add\(dq,
     \(dqarguments\(dq: { \(dqdriver\(dq: \(dqqcow2\(dq,
                    \(dqnode\-name\(dq: \(dqnode1534\(dq,
                    \(dqfile\(dq: { \(dqdriver\(dq: \(dqfile\(dq,
                              \(dqfilename\(dq: \(dqhd1.qcow2\(dq },
                    \(dqbacking\(dq: null } }

<\- { \(dqreturn\(dq: {} }

\-> { \(dqexecute\(dq: \(dqblockdev\-snapshot\(dq,
     \(dqarguments\(dq: { \(dqnode\(dq: \(dqide\-hd0\(dq,
                    \(dqoverlay\(dq: \(dqnode1534\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  change\-backing\-file  (Since: 2.1)
Change the backing file in the image file metadata.  This does not
cause QEMU to reopen the image file to reparse the backing filename
(it may, however, perform a reopen to change permissions from r/o \->
r/w \-> r/o, if needed).  The new backing file string is written into
the image file metadata, and the QEMU internal strings are updated.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBimage\-node\-name\fP (\fBstring\fP) \-\- The name of the block driver state node of the
image to modify.  The \(dqdevice\(dq argument is used to verify
\(dqimage\-node\-name\(dq is in the chain described by \(dqdevice\(dq.
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The device name or node\-name of the root node that owns
image\-node\-name.
.IP \(bu 2
\fBbacking\-file\fP (\fBstring\fP) \-\- The string to write as the backing file.  This string
is not validated, so care should be taken when specifying the
string or the image chain may not be able to be reopened again.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \(dqdevice\(dq does not exist or cannot be determined,
DeviceNotFound
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-commit  (Since: 1.3)
Live commit of data from overlay image nodes into backing nodes \-
i.e., writes data between \(aqtop\(aq and \(aqbase\(aq into \(aqbase\(aq.
.sp
If top == base, that is an error.  If top has no overlays on top of
it, or if it is in use by a writer, the job will not be completed by
itself.  The user needs to complete the job with the
block\-job\-complete command after getting the ready event.  (Since
2.0)
.sp
If the base image is smaller than top, then the base image will be
resized to be the same size as top.  If top is smaller than the base
image, the base will not be truncated.  If you want the base image
size to match the size of the smaller top, you can safely truncate
it yourself once the commit operation successfully completes.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBjob\-id\fP (\fBstring\fP, \fIoptional\fP) \-\- identifier for the newly\-created block job.  If omitted,
the device name will be used.  (Since 2.7)
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- the device name or node\-name of a root node
.IP \(bu 2
\fBbase\-node\fP (\fBstring\fP, \fIoptional\fP) \-\- The node name of the backing image to write data into.
If not specified, this is the deepest backing image.
(since: 3.1)
.IP \(bu 2
\fBbase\fP (\fBstring\fP, \fIoptional\fP) \-\- Same as \fBbase\-node\fP, except that it is a file name rather than
a node name.  This must be the exact filename string that was
used to open the node; other strings, even if addressing the
same file, are not accepted
.IP \(bu 2
\fBtop\-node\fP (\fBstring\fP, \fIoptional\fP) \-\- The node name of the backing image within the image chain
which contains the topmost data to be committed down.  If not
specified, this is the active layer.  (since: 3.1)
.IP \(bu 2
\fBtop\fP (\fBstring\fP, \fIoptional\fP) \-\- Same as \fBtop\-node\fP, except that it is a file name rather than a
node name.  This must be the exact filename string that was used
to open the node; other strings, even if addressing the same
file, are not accepted
.IP \(bu 2
\fBbacking\-file\fP (\fBstring\fP, \fIoptional\fP) \-\- 
.sp
The backing file string to write into the overlay
image of \(aqtop\(aq.  If \(aqtop\(aq does not have an overlay image, or if
\(aqtop\(aq is in use by a writer, specifying a backing file string is
an error.
.sp
This filename is not validated.  If a pathname string is such
that it cannot be resolved by QEMU, that means that subsequent
QMP or HMP commands must use node\-names for the image in
question, as filename lookup methods will fail.
.sp
If not specified, QEMU will automatically determine the backing
file string to use, or error out if there is no obvious choice.
Care should be taken when specifying the string, to specify a
valid filename or protocol.  (Since 2.1)

.IP \(bu 2
\fBbacking\-mask\-protocol\fP (\fBboolean\fP, \fIoptional\fP) \-\- If true, replace any protocol mentioned in
the \(aqbacking file format\(aq with \(aqraw\(aq, rather than storing the
protocol name as the backing format.  Can be used even when no
image header will be updated (default false; since 9.0).
.IP \(bu 2
\fBspeed\fP (\fBint\fP, \fIoptional\fP) \-\- the maximum speed, in bytes per second
.IP \(bu 2
\fBon\-error\fP (\fI\%BlockdevOnError\fP, \fIoptional\fP) \-\- the action to take on an error.  \(aqignore\(aq means that the
request should be retried.  (default: report; Since: 5.0)
.IP \(bu 2
\fBfilter\-node\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- the node name that should be assigned to the
filter driver that the commit job inserts into the graph above
\fBtop\fP\&.  If this option is not given, a node name is
autogenerated.  (Since: 2.9)
.IP \(bu 2
\fBauto\-finalize\fP (\fBboolean\fP, \fIoptional\fP) \-\- When false, this job will wait in a PENDING state
after it has finished its work, waiting for \fBblock\-job\-finalize\fP
before making any block graph changes.  When true, this job will
automatically perform its abort or commit actions.  Defaults to
true.  (Since 3.1)
.IP \(bu 2
\fBauto\-dismiss\fP (\fBboolean\fP, \fIoptional\fP) \-\- When false, this job will wait in a CONCLUDED state
after it has completely ceased all work, and awaits
\fBblock\-job\-dismiss\fP\&.  When true, this job will automatically
disappear from the query list without user intervention.
Defaults to true.  (Since 3.1)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- Members \fBbase\fP and \fBtop\fP are deprecated.  Use \fBbase\-node\fP
and \fBtop\-node\fP instead.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBdevice\fP does not exist, DeviceNotFound
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock\-commit\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqvirtio0\(dq,
                    \(dqtop\(dq: \(dq/tmp/snap1.qcow2\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  drive\-backup  (Since: 1.6)
This command is deprecated.
.sp
Start a point\-in\-time copy of a block device to a new destination.
The status of ongoing drive\-backup operations can be checked with
query\-block\-jobs where the BlockJobInfo.type field has the value
\(aqbackup\(aq.  The operation can be stopped before it has completed
using the block\-job\-cancel command.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%DriveBackup\fP\&.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- This command is deprecated.  Use \fBblockdev\-backup\fP
instead.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBdevice\fP is not a valid block device, GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqdrive\-backup\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqdrive0\(dq,
                    \(dqsync\(dq: \(dqfull\(dq,
                    \(dqtarget\(dq: \(dqbackup.img\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-backup  (Since: 2.3)
Start a point\-in\-time copy of a block device to a new destination.
The status of ongoing blockdev\-backup operations can be checked with
query\-block\-jobs where the BlockJobInfo.type field has the value
\(aqbackup\(aq.  The operation can be stopped before it has completed
using the block\-job\-cancel command.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockdevBackup\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBdevice\fP is not a valid block device, DeviceNotFound
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-backup\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqsrc\-id\(dq,
                    \(dqsync\(dq: \(dqfull\(dq,
                    \(dqtarget\(dq: \(dqtgt\-id\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-named\-block\-nodes  (Since: 2.0)
Get the named block driver list
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBflat\fP (\fBboolean\fP, \fIoptional\fP) \-\- Omit the nested data about backing image (\(dqbacking\-image\(dq
key) if true.  Default is false (Since 5.0)
.UNINDENT
.TP
.B Return
\fB[\fP\fI\%BlockDeviceInfo\fP\fB]\fP \-\- the list of BlockDeviceInfo
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-named\-block\-nodes\(dq }
<\- { \(dqreturn\(dq: [ { \(dqro\(dq:false,
                   \(dqdrv\(dq:\(dqqcow2\(dq,
                   \(dqencrypted\(dq:false,
                   \(dqfile\(dq:\(dqdisks/test.qcow2\(dq,
                   \(dqnode\-name\(dq: \(dqmy\-node\(dq,
                   \(dqbacking_file_depth\(dq:1,
                   \(dqdetect_zeroes\(dq:\(dqoff\(dq,
                   \(dqbps\(dq:1000000,
                   \(dqbps_rd\(dq:0,
                   \(dqbps_wr\(dq:0,
                   \(dqiops\(dq:1000000,
                   \(dqiops_rd\(dq:0,
                   \(dqiops_wr\(dq:0,
                   \(dqbps_max\(dq: 8000000,
                   \(dqbps_rd_max\(dq: 0,
                   \(dqbps_wr_max\(dq: 0,
                   \(dqiops_max\(dq: 0,
                   \(dqiops_rd_max\(dq: 0,
                   \(dqiops_wr_max\(dq: 0,
                   \(dqiops_size\(dq: 0,
                   \(dqwrite_threshold\(dq: 0,
                   \(dqimage\(dq:{
                      \(dqfilename\(dq:\(dqdisks/test.qcow2\(dq,
                      \(dqformat\(dq:\(dqqcow2\(dq,
                      \(dqvirtual\-size\(dq:2048000,
                      \(dqbacking_file\(dq:\(dqbase.qcow2\(dq,
                      \(dqfull\-backing\-filename\(dq:\(dqdisks/base.qcow2\(dq,
                      \(dqbacking\-filename\-format\(dq:\(dqqcow2\(dq,
                      \(dqsnapshots\(dq:[
                         {
                            \(dqid\(dq: \(dq1\(dq,
                            \(dqname\(dq: \(dqsnapshot1\(dq,
                            \(dqvm\-state\-size\(dq: 0,
                            \(dqdate\-sec\(dq: 10000200,
                            \(dqdate\-nsec\(dq: 12,
                            \(dqvm\-clock\-sec\(dq: 206,
                            \(dqvm\-clock\-nsec\(dq: 30
                         }
                      ],
                      \(dqbacking\-image\(dq:{
                          \(dqfilename\(dq:\(dqdisks/base.qcow2\(dq,
                          \(dqformat\(dq:\(dqqcow2\(dq,
                          \(dqvirtual\-size\(dq:2048000
                      }
                   } } ] }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  XDbgBlockGraphNodeType  (Since: 4.0)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBblock\-backend\fP \-\- corresponds to BlockBackend
.IP \(bu 2
\fBblock\-job\fP \-\- corresponds to BlockJob
.IP \(bu 2
\fBblock\-driver\fP \-\- corresponds to BlockDriverState
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  XDbgBlockGraphNode  (Since: 4.0)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBint\fP) \-\- Block graph node identifier.  This \fBid\fP is generated only for
x\-debug\-query\-block\-graph and does not relate to any other
identifiers in Qemu.
.IP \(bu 2
\fBtype\fP (\fI\%XDbgBlockGraphNodeType\fP) \-\- Type of graph node.  Can be one of block\-backend, block\-job
or block\-driver\-state.
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- Human readable name of the node.  Corresponds to node\-name
for block\-driver\-state nodes; is not guaranteed to be unique in
the whole graph (with block\-jobs and block\-backends).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockPermission  (Since: 4.0)
Enum of base block permissions.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBconsistent\-read\fP \-\- A user that has the \(dqpermission\(dq of consistent
reads is guaranteed that their view of the contents of the block
device is complete and self\-consistent, representing the
contents of a disk at a specific point.  For most block devices
(including their backing files) this is true, but the property
cannot be maintained in a few situations like for intermediate
nodes of a commit block job.
.IP \(bu 2
\fBwrite\fP \-\- This permission is required to change the visible disk
contents.
.IP \(bu 2
\fBwrite\-unchanged\fP \-\- This permission (which is weaker than
BLK_PERM_WRITE) is both enough and required for writes to the
block node when the caller promises that the visible disk
content doesn\(aqt change.  As the BLK_PERM_WRITE permission is
strictly stronger, either is sufficient to perform an unchanging
write.
.IP \(bu 2
\fBresize\fP \-\- This permission is required to change the size of a block
node.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  XDbgBlockGraphEdge  (Since: 4.0)
Block Graph edge description for x\-debug\-query\-block\-graph.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBint\fP) \-\- parent id
.IP \(bu 2
\fBchild\fP (\fBint\fP) \-\- child id
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- name of the relation (examples are \(aqfile\(aq and \(aqbacking\(aq)
.IP \(bu 2
\fBperm\fP (\fB[\fP\fI\%BlockPermission\fP\fB]\fP) \-\- granted permissions for the parent operating on the child
.IP \(bu 2
\fBshared\-perm\fP (\fB[\fP\fI\%BlockPermission\fP\fB]\fP) \-\- permissions that can still be granted to other users
of the child while it is still attached to this parent
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  XDbgBlockGraph  (Since: 4.0)
Block Graph \- list of nodes and list of edges.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnodes\fP (\fB[\fP\fI\%XDbgBlockGraphNode\fP\fB]\fP) \-\- Not documented
.IP \(bu 2
\fBedges\fP (\fB[\fP\fI\%XDbgBlockGraphEdge\fP\fB]\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-debug\-query\-block\-graph  (Since: 4.0)
This command is unstable/experimental.
.sp
Get the block graph.
.INDENT 7.0
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is meant for debugging.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  drive\-mirror  (Since: 1.3)
Start mirroring a block device\(aqs writes to a new destination.
target specifies the target of the new image.  If the file exists,
or if it is a device, it will be used as the new destination for
writes.  If it does not exist, a new file will be created.  \fBformat\fP
specifies the format of the mirror image, default is to probe if
mode=\(aqexisting\(aq, else the format of the source.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%DriveMirror\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBdevice\fP is not a valid block device, GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqdrive\-mirror\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqide\-hd0\(dq,
                    \(dqtarget\(dq: \(dq/some/place/my\-image\(dq,
                    \(dqsync\(dq: \(dqfull\(dq,
                    \(dqformat\(dq: \(dqqcow2\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DriveMirror  (Since: 1.3)
A set of parameters describing drive mirror setup.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBjob\-id\fP (\fBstring\fP, \fIoptional\fP) \-\- identifier for the newly\-created block job.  If omitted,
the device name will be used.  (Since 2.7)
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- the device name or node\-name of a root node whose writes
should be mirrored.
.IP \(bu 2
\fBtarget\fP (\fBstring\fP) \-\- the target of the new image.  If the file exists, or if it
is a device, the existing file/device will be used as the new
destination.  If it does not exist, a new file will be created.
.IP \(bu 2
\fBformat\fP (\fBstring\fP, \fIoptional\fP) \-\- the format of the new destination, default is to probe if
\fBmode\fP is \(aqexisting\(aq, else the format of the source
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- the new block driver state node name in the graph (Since
2.1)
.IP \(bu 2
\fBreplaces\fP (\fBstring\fP, \fIoptional\fP) \-\- with sync=full graph node name to be replaced by the new
image when a whole image copy is done.  This can be used to
repair broken Quorum files.  By default, \fBdevice\fP is replaced,
although implicitly created filters on it are kept.  (Since 2.1)
.IP \(bu 2
\fBmode\fP (\fI\%NewImageMode\fP, \fIoptional\fP) \-\- whether and how QEMU should create a new image, default is
\(aqabsolute\-paths\(aq.
.IP \(bu 2
\fBspeed\fP (\fBint\fP, \fIoptional\fP) \-\- the maximum speed, in bytes per second
.IP \(bu 2
\fBsync\fP (\fI\%MirrorSyncMode\fP) \-\- what parts of the disk image should be copied to the
destination (all the disk, only the sectors allocated in the
topmost image, or only new I/O).
.IP \(bu 2
\fBgranularity\fP (\fBint\fP, \fIoptional\fP) \-\- granularity of the dirty bitmap, default is 64K if the
image format doesn\(aqt have clusters, 4K if the clusters are
smaller than that, else the cluster size.  Must be a power of 2
between 512 and 64M (since 1.4).
.IP \(bu 2
\fBbuf\-size\fP (\fBint\fP, \fIoptional\fP) \-\- maximum amount of data in flight from source to target
(since 1.4).
.IP \(bu 2
\fBon\-source\-error\fP (\fI\%BlockdevOnError\fP, \fIoptional\fP) \-\- the action to take on an error on the source,
default \(aqreport\(aq.  \(aqstop\(aq and \(aqenospc\(aq can only be used if the
block device supports io\-status (see BlockInfo).
.IP \(bu 2
\fBon\-target\-error\fP (\fI\%BlockdevOnError\fP, \fIoptional\fP) \-\- the action to take on an error on the target,
default \(aqreport\(aq (no limitations, since this applies to a
different block device than \fBdevice\fP).
.IP \(bu 2
\fBunmap\fP (\fBboolean\fP, \fIoptional\fP) \-\- Whether to try to unmap target sectors where source has only
zero.  If true, and target unallocated sectors will read as
zero, target image sectors will be unmapped; otherwise, zeroes
will be written.  Both will result in identical contents.
Default is true.  (Since 2.4)
.IP \(bu 2
\fBcopy\-mode\fP (\fI\%MirrorCopyMode\fP, \fIoptional\fP) \-\- when to copy data to the destination; defaults to
\(aqbackground\(aq (Since: 3.0)
.IP \(bu 2
\fBauto\-finalize\fP (\fBboolean\fP, \fIoptional\fP) \-\- When false, this job will wait in a PENDING state
after it has finished its work, waiting for \fBblock\-job\-finalize\fP
before making any block graph changes.  When true, this job will
automatically perform its abort or commit actions.  Defaults to
true.  (Since 3.1)
.IP \(bu 2
\fBauto\-dismiss\fP (\fBboolean\fP, \fIoptional\fP) \-\- When false, this job will wait in a CONCLUDED state
after it has completely ceased all work, and awaits
\fBblock\-job\-dismiss\fP\&.  When true, this job will automatically
disappear from the query list without user intervention.
Defaults to true.  (Since 3.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockDirtyBitmap  (Since: 2.4)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnode\fP (\fBstring\fP) \-\- name of device/node which the bitmap is tracking
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- name of the dirty bitmap
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockDirtyBitmapAdd  (Since: 2.4)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnode\fP (\fBstring\fP) \-\- name of device/node which the bitmap is tracking
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- name of the dirty bitmap (must be less than 1024 bytes)
.IP \(bu 2
\fBgranularity\fP (\fBint\fP, \fIoptional\fP) \-\- the bitmap granularity, default is 64k for
block\-dirty\-bitmap\-add
.IP \(bu 2
\fBpersistent\fP (\fBboolean\fP, \fIoptional\fP) \-\- the bitmap is persistent, i.e. it will be saved to the
corresponding block device image file on its close.  For now
only Qcow2 disks support persistent bitmaps.  Default is false
for block\-dirty\-bitmap\-add.  (Since: 2.10)
.IP \(bu 2
\fBdisabled\fP (\fBboolean\fP, \fIoptional\fP) \-\- the bitmap is created in the disabled state, which means
that it will not track drive changes.  The bitmap may be enabled
with block\-dirty\-bitmap\-enable.  Default is false.  (Since: 4.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Alternate  BlockDirtyBitmapOrStr  (Since: 4.1)
.INDENT 7.0
.TP
.B Alternatives
.INDENT 7.0
.IP \(bu 2
\fBlocal\fP (\fBstring\fP) \-\- name of the bitmap, attached to the same node as target
bitmap.
.IP \(bu 2
\fBexternal\fP (\fI\%BlockDirtyBitmap\fP) \-\- bitmap with specified node
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockDirtyBitmapMerge  (Since: 4.0)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnode\fP (\fBstring\fP) \-\- name of device/node which the \fBtarget\fP bitmap is tracking
.IP \(bu 2
\fBtarget\fP (\fBstring\fP) \-\- name of the destination dirty bitmap
.IP \(bu 2
\fBbitmaps\fP (\fB[\fP\fI\%BlockDirtyBitmapOrStr\fP\fB]\fP) \-\- name(s) of the source dirty bitmap(s) at \fBnode\fP and/or
fully specified BlockDirtyBitmap elements.  The latter are
supported since 4.1.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-dirty\-bitmap\-add  (Since: 2.4)
Create a dirty bitmap with a name on the node, and start tracking
the writes.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockDirtyBitmapAdd\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBnode\fP is not a valid block device or node, DeviceNotFound
.IP \(bu 2
If \fBname\fP is already taken, GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock\-dirty\-bitmap\-add\(dq,
     \(dqarguments\(dq: { \(dqnode\(dq: \(dqdrive0\(dq, \(dqname\(dq: \(dqbitmap0\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-dirty\-bitmap\-remove  (Since: 2.4)
Stop write tracking and remove the dirty bitmap that was created
with block\-dirty\-bitmap\-add.  If the bitmap is persistent, remove it
from its storage too.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockDirtyBitmap\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBnode\fP is not a valid block device or node, DeviceNotFound
.IP \(bu 2
If \fBname\fP is not found, GenericError
.IP \(bu 2
if \fBname\fP is frozen by an operation, GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock\-dirty\-bitmap\-remove\(dq,
     \(dqarguments\(dq: { \(dqnode\(dq: \(dqdrive0\(dq, \(dqname\(dq: \(dqbitmap0\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-dirty\-bitmap\-clear  (Since: 2.4)
Clear (reset) a dirty bitmap on the device, so that an incremental
backup from this point in time forward will only backup clusters
modified after this clear operation.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockDirtyBitmap\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBnode\fP is not a valid block device, DeviceNotFound
.IP \(bu 2
If \fBname\fP is not found, GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock\-dirty\-bitmap\-clear\(dq,
     \(dqarguments\(dq: { \(dqnode\(dq: \(dqdrive0\(dq, \(dqname\(dq: \(dqbitmap0\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-dirty\-bitmap\-enable  (Since: 4.0)
Enables a dirty bitmap so that it will begin tracking disk changes.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockDirtyBitmap\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBnode\fP is not a valid block device, DeviceNotFound
.IP \(bu 2
If \fBname\fP is not found, GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock\-dirty\-bitmap\-enable\(dq,
     \(dqarguments\(dq: { \(dqnode\(dq: \(dqdrive0\(dq, \(dqname\(dq: \(dqbitmap0\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-dirty\-bitmap\-disable  (Since: 4.0)
Disables a dirty bitmap so that it will stop tracking disk changes.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockDirtyBitmap\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBnode\fP is not a valid block device, DeviceNotFound
.IP \(bu 2
If \fBname\fP is not found, GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock\-dirty\-bitmap\-disable\(dq,
     \(dqarguments\(dq: { \(dqnode\(dq: \(dqdrive0\(dq, \(dqname\(dq: \(dqbitmap0\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-dirty\-bitmap\-merge  (Since: 4.0)
Merge dirty bitmaps listed in \fBbitmaps\fP to the \fBtarget\fP dirty bitmap.
Dirty bitmaps in \fBbitmaps\fP will be unchanged, except if it also
appears as the \fBtarget\fP bitmap.  Any bits already set in \fBtarget\fP will
still be set after the merge, i.e., this operation does not clear
the target.  On error, \fBtarget\fP is unchanged.
.sp
The resulting bitmap will count as dirty any clusters that were
dirty in any of the source bitmaps.  This can be used to achieve
backup checkpoints, or in simpler usages, to copy bitmaps.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockDirtyBitmapMerge\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBnode\fP is not a valid block device, DeviceNotFound
.IP \(bu 2
If any bitmap in \fBbitmaps\fP or \fBtarget\fP is not found,
GenericError
.IP \(bu 2
If any of the bitmaps have different sizes or granularities,
GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock\-dirty\-bitmap\-merge\(dq,
     \(dqarguments\(dq: { \(dqnode\(dq: \(dqdrive0\(dq, \(dqtarget\(dq: \(dqbitmap0\(dq,
                    \(dqbitmaps\(dq: [\(dqbitmap1\(dq] } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockDirtyBitmapSha256  (Since: 2.10)
SHA256 hash of dirty bitmap data
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsha256\fP (\fBstring\fP) \-\- ASCII representation of SHA256 bitmap hash
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-debug\-block\-dirty\-bitmap\-sha256  (Since: 2.10)
This command is unstable/experimental.
.sp
Get bitmap SHA256.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockDirtyBitmap\fP\&.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is meant for debugging.
.UNINDENT
.TP
.B Return
\fI\%BlockDirtyBitmapSha256\fP \-\- BlockDirtyBitmapSha256
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBnode\fP is not a valid block device, DeviceNotFound
.IP \(bu 2
If \fBname\fP is not found or if hashing has failed, GenericError
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-mirror  (Since: 2.6)
Start mirroring a block device\(aqs writes to a new destination.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBjob\-id\fP (\fBstring\fP, \fIoptional\fP) \-\- identifier for the newly\-created block job.  If omitted,
the device name will be used.  (Since 2.7)
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The device name or node\-name of a root node whose writes
should be mirrored.
.IP \(bu 2
\fBtarget\fP (\fBstring\fP) \-\- the id or node\-name of the block device to mirror to.  This
mustn\(aqt be attached to guest.
.IP \(bu 2
\fBreplaces\fP (\fBstring\fP, \fIoptional\fP) \-\- with sync=full graph node name to be replaced by the new
image when a whole image copy is done.  This can be used to
repair broken Quorum files.  By default, \fBdevice\fP is replaced,
although implicitly created filters on it are kept.
.IP \(bu 2
\fBspeed\fP (\fBint\fP, \fIoptional\fP) \-\- the maximum speed, in bytes per second
.IP \(bu 2
\fBsync\fP (\fI\%MirrorSyncMode\fP) \-\- what parts of the disk image should be copied to the
destination (all the disk, only the sectors allocated in the
topmost image, or only new I/O).
.IP \(bu 2
\fBgranularity\fP (\fBint\fP, \fIoptional\fP) \-\- granularity of the dirty bitmap, default is 64K if the
image format doesn\(aqt have clusters, 4K if the clusters are
smaller than that, else the cluster size.  Must be a power of 2
between 512 and 64M
.IP \(bu 2
\fBbuf\-size\fP (\fBint\fP, \fIoptional\fP) \-\- maximum amount of data in flight from source to target
.IP \(bu 2
\fBon\-source\-error\fP (\fI\%BlockdevOnError\fP, \fIoptional\fP) \-\- the action to take on an error on the source,
default \(aqreport\(aq.  \(aqstop\(aq and \(aqenospc\(aq can only be used if the
block device supports io\-status (see BlockInfo).
.IP \(bu 2
\fBon\-target\-error\fP (\fI\%BlockdevOnError\fP, \fIoptional\fP) \-\- the action to take on an error on the target,
default \(aqreport\(aq (no limitations, since this applies to a
different block device than \fBdevice\fP).
.IP \(bu 2
\fBfilter\-node\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- the node name that should be assigned to the
filter driver that the mirror job inserts into the graph above
\fBdevice\fP\&.  If this option is not given, a node name is
autogenerated.  (Since: 2.9)
.IP \(bu 2
\fBcopy\-mode\fP (\fI\%MirrorCopyMode\fP, \fIoptional\fP) \-\- when to copy data to the destination; defaults to
\(aqbackground\(aq (Since: 3.0)
.IP \(bu 2
\fBauto\-finalize\fP (\fBboolean\fP, \fIoptional\fP) \-\- When false, this job will wait in a PENDING state
after it has finished its work, waiting for \fBblock\-job\-finalize\fP
before making any block graph changes.  When true, this job will
automatically perform its abort or commit actions.  Defaults to
true.  (Since 3.1)
.IP \(bu 2
\fBauto\-dismiss\fP (\fBboolean\fP, \fIoptional\fP) \-\- When false, this job will wait in a CONCLUDED state
after it has completely ceased all work, and awaits
\fBblock\-job\-dismiss\fP\&.  When true, this job will automatically
disappear from the query list without user intervention.
Defaults to true.  (Since 3.1)
.IP \(bu 2
\fBtarget\-is\-zero\fP (\fBboolean\fP, \fIoptional\fP) \-\- Assume the destination reads as all zeroes before
the mirror started.  Setting this to true can speed up the
mirror.  Setting this to true when the destination is not
actually all zero can corrupt the destination.  (Since 10.1)
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-mirror\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqide\-hd0\(dq,
                    \(dqtarget\(dq: \(dqtarget0\(dq,
                    \(dqsync\(dq: \(dqfull\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockIOThrottle  (Since: 1.1)
A set of parameters describing block throttling.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP, \fIoptional\fP) \-\- Block device name
.IP \(bu 2
\fBid\fP (\fBstring\fP, \fIoptional\fP) \-\- The name or QOM path of the guest device (since: 2.8)
.IP \(bu 2
\fBbps\fP (\fBint\fP) \-\- total throughput limit in bytes per second
.IP \(bu 2
\fBbps_rd\fP (\fBint\fP) \-\- read throughput limit in bytes per second
.IP \(bu 2
\fBbps_wr\fP (\fBint\fP) \-\- write throughput limit in bytes per second
.IP \(bu 2
\fBiops\fP (\fBint\fP) \-\- total I/O operations per second
.IP \(bu 2
\fBiops_rd\fP (\fBint\fP) \-\- read I/O operations per second
.IP \(bu 2
\fBiops_wr\fP (\fBint\fP) \-\- write I/O operations per second
.IP \(bu 2
\fBbps_max\fP (\fBint\fP, \fIoptional\fP) \-\- total throughput limit during bursts, in bytes (Since 1.7)
.IP \(bu 2
\fBbps_rd_max\fP (\fBint\fP, \fIoptional\fP) \-\- read throughput limit during bursts, in bytes (Since
1.7)
.IP \(bu 2
\fBbps_wr_max\fP (\fBint\fP, \fIoptional\fP) \-\- write throughput limit during bursts, in bytes (Since
1.7)
.IP \(bu 2
\fBiops_max\fP (\fBint\fP, \fIoptional\fP) \-\- total I/O operations per second during bursts, in bytes
(Since 1.7)
.IP \(bu 2
\fBiops_rd_max\fP (\fBint\fP, \fIoptional\fP) \-\- read I/O operations per second during bursts, in bytes
(Since 1.7)
.IP \(bu 2
\fBiops_wr_max\fP (\fBint\fP, \fIoptional\fP) \-\- write I/O operations per second during bursts, in
bytes (Since 1.7)
.IP \(bu 2
\fBbps_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBbps_max\fP burst period, in
seconds.  It must only be set if \fBbps_max\fP is set as well.
Defaults to 1.  (Since 2.6)
.IP \(bu 2
\fBbps_rd_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBbps_rd_max\fP burst period,
in seconds.  It must only be set if \fBbps_rd_max\fP is set as well.
Defaults to 1.  (Since 2.6)
.IP \(bu 2
\fBbps_wr_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBbps_wr_max\fP burst period,
in seconds.  It must only be set if \fBbps_wr_max\fP is set as well.
Defaults to 1.  (Since 2.6)
.IP \(bu 2
\fBiops_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBiops\fP burst period, in
seconds.  It must only be set if \fBiops_max\fP is set as well.
Defaults to 1.  (Since 2.6)
.IP \(bu 2
\fBiops_rd_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBiops_rd_max\fP burst
period, in seconds.  It must only be set if \fBiops_rd_max\fP is set
as well.  Defaults to 1.  (Since 2.6)
.IP \(bu 2
\fBiops_wr_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBiops_wr_max\fP burst
period, in seconds.  It must only be set if \fBiops_wr_max\fP is set
as well.  Defaults to 1.  (Since 2.6)
.IP \(bu 2
\fBiops_size\fP (\fBint\fP, \fIoptional\fP) \-\- an I/O size in bytes (Since 1.7)
.IP \(bu 2
\fBgroup\fP (\fBstring\fP, \fIoptional\fP) \-\- throttle group name (Since 2.4)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- Member \fBdevice\fP is deprecated.  Use \fBid\fP instead.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ThrottleLimits  (Since: 2.11)
Limit parameters for throttling.  Since some limit combinations are
illegal, limits should always be set in one transaction.  All fields
are optional.  When setting limits, if a field is missing the
current value is not changed.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBiops\-total\fP (\fBint\fP, \fIoptional\fP) \-\- limit total I/O operations per second
.IP \(bu 2
\fBiops\-total\-max\fP (\fBint\fP, \fIoptional\fP) \-\- I/O operations burst
.IP \(bu 2
\fBiops\-total\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- length of the iops\-total\-max burst period,
in seconds It must only be set if \fBiops\-total\-max\fP is set as
well.
.IP \(bu 2
\fBiops\-read\fP (\fBint\fP, \fIoptional\fP) \-\- limit read operations per second
.IP \(bu 2
\fBiops\-read\-max\fP (\fBint\fP, \fIoptional\fP) \-\- I/O operations read burst
.IP \(bu 2
\fBiops\-read\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- length of the iops\-read\-max burst period, in
seconds It must only be set if \fBiops\-read\-max\fP is set as well.
.IP \(bu 2
\fBiops\-write\fP (\fBint\fP, \fIoptional\fP) \-\- limit write operations per second
.IP \(bu 2
\fBiops\-write\-max\fP (\fBint\fP, \fIoptional\fP) \-\- I/O operations write burst
.IP \(bu 2
\fBiops\-write\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- length of the iops\-write\-max burst period,
in seconds It must only be set if \fBiops\-write\-max\fP is set as
well.
.IP \(bu 2
\fBbps\-total\fP (\fBint\fP, \fIoptional\fP) \-\- limit total bytes per second
.IP \(bu 2
\fBbps\-total\-max\fP (\fBint\fP, \fIoptional\fP) \-\- total bytes burst
.IP \(bu 2
\fBbps\-total\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- length of the bps\-total\-max burst period, in
seconds.  It must only be set if \fBbps\-total\-max\fP is set as well.
.IP \(bu 2
\fBbps\-read\fP (\fBint\fP, \fIoptional\fP) \-\- limit read bytes per second
.IP \(bu 2
\fBbps\-read\-max\fP (\fBint\fP, \fIoptional\fP) \-\- total bytes read burst
.IP \(bu 2
\fBbps\-read\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- length of the bps\-read\-max burst period, in
seconds It must only be set if \fBbps\-read\-max\fP is set as well.
.IP \(bu 2
\fBbps\-write\fP (\fBint\fP, \fIoptional\fP) \-\- limit write bytes per second
.IP \(bu 2
\fBbps\-write\-max\fP (\fBint\fP, \fIoptional\fP) \-\- total bytes write burst
.IP \(bu 2
\fBbps\-write\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- length of the bps\-write\-max burst period, in
seconds It must only be set if \fBbps\-write\-max\fP is set as well.
.IP \(bu 2
\fBiops\-size\fP (\fBint\fP, \fIoptional\fP) \-\- when limiting by iops max size of an I/O in bytes
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ThrottleGroupProperties  (Since: 2.11)
Properties for throttle\-group objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBlimits\fP (\fI\%ThrottleLimits\fP, \fIoptional\fP) \-\- limits to apply for this throttle group
.IP \(bu 2
\fBx\-iops\-total\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-iops\-total\-max\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-iops\-total\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-iops\-read\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-iops\-read\-max\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-iops\-read\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-iops\-write\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-iops\-write\-max\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-iops\-write\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-bps\-total\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-bps\-total\-max\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-bps\-total\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-bps\-read\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-bps\-read\-max\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-bps\-read\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-bps\-write\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-bps\-write\-max\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-bps\-write\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-iops\-size\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- All members starting with x\- are aliases for the same key
without x\- in the \fBlimits\fP object.  This is not a stable
interface and may be removed or changed incompatibly in the
future.  Use \fBlimits\fP for a supported stable interface.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-stream  (Since: 1.1)
Copy data from a backing file into a block device.
.sp
The block streaming operation is performed in the background until
the entire backing file has been copied.  This command returns
immediately once streaming has started.  The status of ongoing block
streaming operations can be checked with query\-block\-jobs.  The
operation can be stopped before it has completed using the
block\-job\-cancel command.
.sp
The node that receives the data is called the top image, can be
located in any part of the chain (but always above the base image;
see below) and can be specified using its device or node name.
Earlier qemu versions only allowed \(aqdevice\(aq to name the top level
node; presence of the \(aqbase\-node\(aq parameter during introspection can
be used as a witness of the enhanced semantics of \(aqdevice\(aq.
.sp
If a base file is specified then sectors are not copied from that
base file and its backing chain.  This can be used to stream a
subset of the backing file chain instead of flattening the entire
image.  When streaming completes the image file will have the base
file as its backing file, unless that node was changed while the job
was running.  In that case, base\(aqs parent\(aqs backing (or filtered,
whichever exists) child (i.e., base at the beginning of the job)
will be the new backing file.
.sp
On successful completion the image file is updated to drop the
backing file and the BLOCK_JOB_COMPLETED event is emitted.
.sp
In case \fBdevice\fP is a filter node, block\-stream modifies the first
non\-filter overlay node below it to point to the new backing node
instead of modifying \fBdevice\fP itself.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBjob\-id\fP (\fBstring\fP, \fIoptional\fP) \-\- identifier for the newly\-created block job.  If omitted,
the device name will be used.  (Since 2.7)
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- the device or node name of the top image
.IP \(bu 2
\fBbase\fP (\fBstring\fP, \fIoptional\fP) \-\- the common backing file name.  It cannot be set if \fBbase\-node\fP
or \fBbottom\fP is also set.
.IP \(bu 2
\fBbase\-node\fP (\fBstring\fP, \fIoptional\fP) \-\- the node name of the backing file.  It cannot be set if
\fBbase\fP or \fBbottom\fP is also set.  (Since 2.8)
.IP \(bu 2
\fBbottom\fP (\fBstring\fP, \fIoptional\fP) \-\- the last node in the chain that should be streamed into
top.  It cannot be set if \fBbase\fP or \fBbase\-node\fP is also set.  It
cannot be filter node.  (Since 6.0)
.IP \(bu 2
\fBbacking\-file\fP (\fBstring\fP, \fIoptional\fP) \-\- 
.sp
The backing file string to write into the top image.
This filename is not validated.
.sp
If a pathname string is such that it cannot be resolved by QEMU,
that means that subsequent QMP or HMP commands must use
node\-names for the image in question, as filename lookup methods
will fail.
.sp
If not specified, QEMU will automatically determine the backing
file string to use, or error out if there is no obvious choice.
Care should be taken when specifying the string, to specify a
valid filename or protocol.  (Since 2.1)

.IP \(bu 2
\fBbacking\-mask\-protocol\fP (\fBboolean\fP, \fIoptional\fP) \-\- If true, replace any protocol mentioned in
the \(aqbacking file format\(aq with \(aqraw\(aq, rather than storing the
protocol name as the backing format.  Can be used even when no
image header will be updated (default false; since 9.0).
.IP \(bu 2
\fBspeed\fP (\fBint\fP, \fIoptional\fP) \-\- the maximum speed, in bytes per second
.IP \(bu 2
\fBon\-error\fP (\fI\%BlockdevOnError\fP, \fIoptional\fP) \-\- the action to take on an error (default report).  \(aqstop\(aq
and \(aqenospc\(aq can only be used if the block device supports
io\-status (see BlockInfo).  (Since 1.3)
.IP \(bu 2
\fBfilter\-node\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- the node name that should be assigned to the
filter driver that the stream job inserts into the graph above
\fBdevice\fP\&.  If this option is not given, a node name is
autogenerated.  (Since: 6.0)
.IP \(bu 2
\fBauto\-finalize\fP (\fBboolean\fP, \fIoptional\fP) \-\- When false, this job will wait in a PENDING state
after it has finished its work, waiting for \fBblock\-job\-finalize\fP
before making any block graph changes.  When true, this job will
automatically perform its abort or commit actions.  Defaults to
true.  (Since 3.1)
.IP \(bu 2
\fBauto\-dismiss\fP (\fBboolean\fP, \fIoptional\fP) \-\- When false, this job will wait in a CONCLUDED state
after it has completely ceased all work, and awaits
\fBblock\-job\-dismiss\fP\&.  When true, this job will automatically
disappear from the query list without user intervention.
Defaults to true.  (Since 3.1)
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBdevice\fP does not exist, DeviceNotFound.
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock\-stream\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqvirtio0\(dq,
                    \(dqbase\(dq: \(dq/tmp/master.qcow2\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-job\-set\-speed  (Since: 1.1)
Set maximum speed for a background block operation.
.sp
This command can only be issued when there is an active block job.
.sp
Throttling can be disabled by setting the speed to 0.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The job identifier.  This used to be a device name (hence
the name of the parameter), but since QEMU 2.7 it can have other
values.
.IP \(bu 2
\fBspeed\fP (\fBint\fP) \-\- the maximum speed, in bytes per second, or 0 for unlimited.
Defaults to 0.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If no background operation is active on this device,
DeviceNotActive
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-job\-cancel  (Since: 1.1)
Stop an active background block operation.
.sp
This command returns immediately after marking the active background
block operation for cancellation.  It is an error to call this
command if no operation is in progress.
.sp
The operation will cancel as soon as possible and then emit the
BLOCK_JOB_CANCELLED event.  Before that happens the job is still
visible when enumerated using query\-block\-jobs.
.sp
Note that if you issue \(aqblock\-job\-cancel\(aq after \(aqdrive\-mirror\(aq has
indicated (via the event BLOCK_JOB_READY) that the source and
destination are synchronized, then the event triggered by this
command changes to BLOCK_JOB_COMPLETED, to indicate that the
mirroring has ended and the destination now has a point\-in\-time copy
tied to the time of the cancellation.
.sp
For streaming, the image file retains its backing file unless the
streaming operation happens to complete just as it is being
cancelled.  A new streaming operation can be started at a later time
to finish copying all data from the backing file.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The job identifier.  This used to be a device name (hence
the name of the parameter), but since QEMU 2.7 it can have other
values.
.IP \(bu 2
\fBforce\fP (\fBboolean\fP, \fIoptional\fP) \-\- If true, and the job has already emitted the event
BLOCK_JOB_READY, abandon the job immediately (even if it is
paused) instead of waiting for the destination to complete its
final synchronization (since 1.3)
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If no background operation is active on this device,
DeviceNotActive
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-job\-pause  (Since: 1.3)
This command is deprecated.
.sp
Pause an active background block operation.
.sp
This command returns immediately after marking the active job for
pausing.  Pausing an already paused job is an error.
.sp
The job will pause as soon as possible, which means transitioning
into the PAUSED state if it was RUNNING, or into STANDBY if it was
READY.  The corresponding JOB_STATUS_CHANGE event will be emitted.
.sp
Cancelling a paused job automatically resumes it.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The job identifier.  This used to be a device name (hence
the name of the parameter), but since QEMU 2.7 it can have other
values.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- This command is deprecated.  Use \fBjob\-pause\fP
instead.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If no background operation is active on this device,
DeviceNotActive
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-job\-resume  (Since: 1.3)
This command is deprecated.
.sp
Resume an active background block operation.
.sp
This command returns immediately after resuming a paused job.
Resuming an already running job is an error.
.sp
This command also clears the error status of the job.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The job identifier.  This used to be a device name (hence
the name of the parameter), but since QEMU 2.7 it can have other
values.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- This command is deprecated.  Use \fBjob\-resume\fP
instead.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If no background operation is active on this device,
DeviceNotActive
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-job\-complete  (Since: 1.3)
This command is deprecated.
.sp
Manually trigger completion of an active job in the READY or STANDBY
state.  Completing the job in any other state is an error.
.sp
This is supported only for drive mirroring, where it also switches
the device to write to the target path only. Note that drive
mirroring includes drive\-mirror, blockdev\-mirror and block\-commit
job (only in case of \(dqactive commit\(dq, when the node being commited
is used by the guest). The ability to complete is signaled with a
BLOCK_JOB_READY event.
.sp
This command completes an active background block operation
synchronously.  The ordering of this command\(aqs return with the
BLOCK_JOB_COMPLETED event is not defined.  Note that if an I/O error
occurs during the processing of this command: 1) the command itself
will fail; 2) the error will be processed according to the
rerror/werror arguments that were specified when starting the
operation.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The job identifier.  This used to be a device name (hence
the name of the parameter), but since QEMU 2.7 it can have other
values.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- This command is deprecated.  Use \fBjob\-complete\fP
instead.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If no background operation is active on this device,
DeviceNotActive
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-job\-dismiss  (Since: 2.12)
This command is deprecated.
.sp
Deletes a job that is in the CONCLUDED state.  This command only
needs to be run explicitly for jobs that don\(aqt have automatic
dismiss enabled. In turn, automatic dismiss may be enabled only
for jobs that have \fBauto\-dismiss\fP option, which are drive\-backup,
blockdev\-backup, drive\-mirror, blockdev\-mirror, block\-commit and
block\-stream. \fBauto\-dismiss\fP is enabled by default for these
jobs.
.sp
This command will refuse to operate on any job that has not yet
reached its terminal state, JOB_STATUS_CONCLUDED.  For jobs that
make use of the BLOCK_JOB_READY event, block\-job\-cancel or
block\-job\-complete will still need to be used as appropriate.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The job identifier.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- This command is deprecated.  Use \fBjob\-dismiss\fP
instead.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-job\-finalize  (Since: 2.12)
This command is deprecated.
.sp
Instructs all jobs in a transaction (or a single job if it is not
part of any transaction) to finalize any graph changes and do any
necessary cleanup.  This command requires that all involved jobs are
in the PENDING state.
.sp
For jobs in a transaction, instructing one job to finalize will
force ALL jobs in the transaction to finalize, so it is only
necessary to instruct a single member job to finalize.
.sp
The command is applicable only to jobs which have \fBauto\-finalize\fP option
and only when this option is set to false.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The job identifier.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- This command is deprecated.  Use \fBjob\-finalize\fP
instead.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockJobChangeOptionsMirror  (Since: 8.2)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcopy\-mode\fP (\fI\%MirrorCopyMode\fP) \-\- Switch to this copy mode.  Currently, only the switch
from \(aqbackground\(aq to \(aqwrite\-blocking\(aq is implemented.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockJobChangeOptions  (Since: 8.2)
Block job options that can be changed after job creation.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The job identifier
.IP \(bu 2
\fBtype\fP (\fI\%JobType\fP) \-\- The job type
.IP \(bu 2
When \fBtype\fP is \fBmirror\fP: The members of \fI\%BlockJobChangeOptionsMirror\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-job\-change  (Since: 8.2)
Change the block job\(aqs options.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockJobChangeOptions\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevDiscardOptions  (Since: 2.9)
Determines how to handle discard requests.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBignore\fP \-\- Ignore the request
.IP \(bu 2
\fBunmap\fP \-\- Forward as an unmap request
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevDetectZeroesOptions  (Since: 2.1)
Describes the operation mode for the automatic conversion of plain
zero writes by the OS to driver specific optimized zero write
commands.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBoff\fP \-\- Disabled (default)
.IP \(bu 2
\fBon\fP \-\- Enabled
.IP \(bu 2
\fBunmap\fP \-\- Enabled and even try to unmap blocks if possible.  This
requires also that \fBBlockdevDiscardOptions\fP is set to unmap for
this device.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevAioOptions  (Since: 2.9)
Selects the AIO backend to handle I/O requests
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBthreads\fP \-\- Use qemu\(aqs thread pool
.IP \(bu 2
\fBnative\fP \-\- Use native AIO backend (only Linux and Windows)
.IP \(bu 2
\fBio_uring\fP \-\- Use linux io_uring (since 5.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCacheOptions  (Since: 2.9)
Includes cache\-related options for block devices
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdirect\fP (\fBboolean\fP, \fIoptional\fP) \-\- enables use of O_DIRECT (bypass the host page cache;
default: false)
.IP \(bu 2
\fBno\-flush\fP (\fBboolean\fP, \fIoptional\fP) \-\- ignore any flush requests for the device (default: false)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevDriver  (Since: 2.9)
Drivers that are supported in block device operations.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBthrottle\fP \-\- Since 2.11
.IP \(bu 2
\fBnvme\fP \-\- Since 2.12
.IP \(bu 2
\fBcopy\-on\-read\fP \-\- Since 3.0
.IP \(bu 2
\fBblklogwrites\fP \-\- Since 3.0
.IP \(bu 2
\fBblkreplay\fP \-\- Since 4.2
.IP \(bu 2
\fBcompress\fP \-\- Since 5.0
.IP \(bu 2
\fBcopy\-before\-write\fP \-\- Since 6.2
.IP \(bu 2
\fBsnapshot\-access\fP \-\- Since 7.0
.IP \(bu 2
\fBblkdebug\fP \-\- Not documented
.IP \(bu 2
\fBblkverify\fP \-\- Not documented
.IP \(bu 2
\fBbochs\fP \-\- Not documented
.IP \(bu 2
\fBcloop\fP \-\- Not documented
.IP \(bu 2
\fBdmg\fP \-\- Not documented
.IP \(bu 2
\fBfile\fP \-\- Not documented
.IP \(bu 2
\fBftp\fP \-\- Not documented
.IP \(bu 2
\fBftps\fP \-\- Not documented
.IP \(bu 2
\fBgluster\fP \-\- Not documented
.IP \(bu 2
\fBhost_cdrom\fP \-\- Not documented
.IP \(bu 2
\fBhost_device\fP \-\- Not documented
.IP \(bu 2
\fBhttp\fP \-\- Not documented
.IP \(bu 2
\fBhttps\fP \-\- Not documented
.IP \(bu 2
\fBio_uring\fP \-\- Not documented
.IP \(bu 2
\fBiscsi\fP \-\- Not documented
.IP \(bu 2
\fBluks\fP \-\- Not documented
.IP \(bu 2
\fBnbd\fP \-\- Not documented
.IP \(bu 2
\fBnfs\fP \-\- Not documented
.IP \(bu 2
\fBnull\-aio\fP \-\- Not documented
.IP \(bu 2
\fBnull\-co\fP \-\- Not documented
.IP \(bu 2
\fBnvme\-io_uring\fP \-\- Not documented
.IP \(bu 2
\fBparallels\fP \-\- Not documented
.IP \(bu 2
\fBpreallocate\fP \-\- Not documented
.IP \(bu 2
\fBqcow\fP \-\- Not documented
.IP \(bu 2
\fBqcow2\fP \-\- Not documented
.IP \(bu 2
\fBqed\fP \-\- Not documented
.IP \(bu 2
\fBquorum\fP \-\- Not documented
.IP \(bu 2
\fBraw\fP \-\- Not documented
.IP \(bu 2
\fBrbd\fP \-\- Not documented
.IP \(bu 2
\fBreplication\fP \-\- Not documented
.IP \(bu 2
\fBssh\fP \-\- Not documented
.IP \(bu 2
\fBvdi\fP \-\- Not documented
.IP \(bu 2
\fBvhdx\fP \-\- Not documented
.IP \(bu 2
\fBvirtio\-blk\-vfio\-pci\fP \-\- Not documented
.IP \(bu 2
\fBvirtio\-blk\-vhost\-user\fP \-\- Not documented
.IP \(bu 2
\fBvirtio\-blk\-vhost\-vdpa\fP \-\- Not documented
.IP \(bu 2
\fBvmdk\fP \-\- Not documented
.IP \(bu 2
\fBvpc\fP \-\- Not documented
.IP \(bu 2
\fBvvfat\fP \-\- Not documented
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- Member \fBgluster\fP is deprecated because GlusterFS
development ceased.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsFile  (Since: 2.9)
Driver specific block device options for the file backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- path to the image file
.IP \(bu 2
\fBpr\-manager\fP (\fBstring\fP, \fIoptional\fP) \-\- the id for the object that will handle persistent
reservations for this device (default: none, forward the
commands via SG_IO; since 2.11)
.IP \(bu 2
\fBaio\fP (\fI\%BlockdevAioOptions\fP, \fIoptional\fP) \-\- AIO backend (default: threads) (since: 2.8)
.IP \(bu 2
\fBaio\-max\-batch\fP (\fBint\fP, \fIoptional\fP) \-\- maximum number of requests to batch together into a
single submission in the AIO backend.  The smallest value
between this and the aio\-max\-batch value of the IOThread object
is chosen.  0 means that the AIO backend will handle it
automatically.  (default: 0, since 6.2)
.IP \(bu 2
\fBlocking\fP (\fI\%OnOffAuto\fP, \fIoptional\fP) \-\- whether to enable file locking.  If set to \(aqauto\(aq, only
enable when Open File Descriptor (OFD) locking API is available
(default: auto, since 2.10)
.IP \(bu 2
\fBdrop\-cache\fP (\fBboolean\fP, \fIoptional\fP) \-\- invalidate page cache during live migration.  This
prevents stale data on the migration destination with
cache.direct=off.  Currently only supported on Linux hosts.
(default: on, since: 4.0)
.IP \(bu 2
\fBx\-check\-cache\-dropped\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether to check that page cache was dropped
on live migration.  May cause noticeable delays if the image
file is large, do not use in production.  (default: off)
(since: 3.0)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdynamic\-auto\-read\-only\fP \-\- If present, enabled auto\-read\-only means
that the driver will open the image read\-only at first,
dynamically reopen the image file read\-write when the first
writer is attached to the node and reopen read\-only when the
last writer is detached.  This allows giving QEMU write
permissions only on demand when an operation actually needs
write access.
.IP \(bu 2
\fBunstable\fP \-\- Member x\-check\-cache\-dropped is meant for debugging.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsNull  (Since: 2.9)
Driver specific block device options for the null backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsize\fP (\fBint\fP, \fIoptional\fP) \-\- size of the device in bytes.
.IP \(bu 2
\fBlatency\-ns\fP (\fBint\fP, \fIoptional\fP) \-\- emulated latency (in nanoseconds) in processing
requests.  Default to zero which completes requests immediately.
(Since 2.4)
.IP \(bu 2
\fBread\-zeroes\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, reads from the device produce zeroes; if
false, the buffer is left unchanged.
(default: false; since: 4.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsNVMe  (Since: 2.12)
Driver specific block device options for the NVMe backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- PCI controller address of the NVMe device in format
hhhh:bb:ss.f (host:bus:slot.function)
.IP \(bu 2
\fBnamespace\fP (\fBint\fP) \-\- namespace number of the device, starting from 1.
.UNINDENT
.UNINDENT
.sp
Note that the PCI \fBdevice\fP must have been unbound from any host
kernel driver before instructing QEMU to add the blockdev.
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsVVFAT  (Since: 2.9)
Driver specific block device options for the vvfat protocol.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdir\fP (\fBstring\fP) \-\- directory to be exported as FAT image
.IP \(bu 2
\fBfat\-type\fP (\fBint\fP, \fIoptional\fP) \-\- FAT type: 12, 16 or 32
.IP \(bu 2
\fBfloppy\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether to export a floppy image (true) or partitioned hard
disk (false; default)
.IP \(bu 2
\fBlabel\fP (\fBstring\fP, \fIoptional\fP) \-\- set the volume label, limited to 11 bytes.  FAT16 and FAT32
traditionally have some restrictions on labels, which are
ignored by most operating systems.  Defaults to \(dqQEMU VVFAT\(dq.
(since 2.4)
.IP \(bu 2
\fBrw\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether to allow write operations (default: false)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsGenericFormat  (Since: 2.9)
Driver specific block device options for image format that have no
option besides their data source.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP) \-\- reference to or definition of the data source block device
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsLUKS  (Since: 2.9)
Driver specific block device options for LUKS.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBkey\-secret\fP (\fBstring\fP, \fIoptional\fP) \-\- the ID of a QCryptoSecret object providing the
decryption key (since 2.6).  Mandatory except when doing a
metadata\-only probe of the image.
.IP \(bu 2
\fBheader\fP (\fI\%BlockdevRef\fP, \fIoptional\fP) \-\- block device holding a detached LUKS header.  (since 9.0)
.IP \(bu 2
The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsGenericCOWFormat  (Since: 2.9)
Driver specific block device options for image format that have no
option besides their data source and an optional backing file.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBbacking\fP (\fI\%BlockdevRefOrNull\fP, \fIoptional\fP) \-\- reference to or definition of the backing file block
device, null disables the backing file entirely.  Defaults to
the backing file stored the image file.
.IP \(bu 2
The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  Qcow2OverlapCheckMode  (Since: 2.9)
General overlap check modes.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnone\fP \-\- Do not perform any checks
.IP \(bu 2
\fBconstant\fP \-\- Perform only checks which can be done in constant time
and without reading anything from disk
.IP \(bu 2
\fBcached\fP \-\- Perform only checks which can be done without reading
anything from disk
.IP \(bu 2
\fBall\fP \-\- Perform all available overlap checks
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  Qcow2OverlapCheckFlags  (Since: 2.9)
Structure of flags for each metadata structure.  Setting a field to
\(aqtrue\(aq makes QEMU guard that Qcow2 format structure against
unintended overwriting.  See Qcow2 format specification for detailed
information on these structures.  The default value is chosen
according to the template given.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtemplate\fP (\fI\%Qcow2OverlapCheckMode\fP, \fIoptional\fP) \-\- Specifies a template mode which can be adjusted using the
other flags, defaults to \(aqcached\(aq
.IP \(bu 2
\fBmain\-header\fP (\fBboolean\fP, \fIoptional\fP) \-\- Qcow2 format header
.IP \(bu 2
\fBactive\-l1\fP (\fBboolean\fP, \fIoptional\fP) \-\- Qcow2 active L1 table
.IP \(bu 2
\fBactive\-l2\fP (\fBboolean\fP, \fIoptional\fP) \-\- Qcow2 active L2 table
.IP \(bu 2
\fBrefcount\-table\fP (\fBboolean\fP, \fIoptional\fP) \-\- Qcow2 refcount table
.IP \(bu 2
\fBrefcount\-block\fP (\fBboolean\fP, \fIoptional\fP) \-\- Qcow2 refcount blocks
.IP \(bu 2
\fBsnapshot\-table\fP (\fBboolean\fP, \fIoptional\fP) \-\- Qcow2 snapshot table
.IP \(bu 2
\fBinactive\-l1\fP (\fBboolean\fP, \fIoptional\fP) \-\- Qcow2 inactive L1 tables
.IP \(bu 2
\fBinactive\-l2\fP (\fBboolean\fP, \fIoptional\fP) \-\- Qcow2 inactive L2 tables
.IP \(bu 2
\fBbitmap\-directory\fP (\fBboolean\fP, \fIoptional\fP) \-\- Qcow2 bitmap directory (since 3.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Alternate  Qcow2OverlapChecks  (Since: 2.9)
Specifies which metadata structures should be guarded against
unintended overwriting.
.INDENT 7.0
.TP
.B Alternatives
.INDENT 7.0
.IP \(bu 2
\fBflags\fP (\fI\%Qcow2OverlapCheckFlags\fP) \-\- set of flags for separate specification of each metadata
structure type
.IP \(bu 2
\fBmode\fP (\fI\%Qcow2OverlapCheckMode\fP) \-\- named mode which chooses a specific set of flags
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevQcowEncryptionFormat  (Since: 2.10)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBaes\fP \-\- AES\-CBC with plain64 initialization vectors
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevQcowEncryption  (Since: 2.10)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBformat\fP (\fI\%BlockdevQcowEncryptionFormat\fP) \-\- encryption format
.IP \(bu 2
When \fBformat\fP is \fBaes\fP: The members of \fI\%QCryptoBlockOptionsQCow\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsQcow  (Since: 2.10)
Driver specific block device options for qcow.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBencrypt\fP (\fI\%BlockdevQcowEncryption\fP, \fIoptional\fP) \-\- Image decryption options.  Mandatory for encrypted images,
except when doing a metadata\-only probe of the image.
.IP \(bu 2
The members of \fI\%BlockdevOptionsGenericCOWFormat\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevQcow2EncryptionFormat  (Since: 2.10)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBaes\fP \-\- AES\-CBC with plain64 initialization vectors
.IP \(bu 2
\fBluks\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevQcow2Encryption  (Since: 2.10)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBformat\fP (\fI\%BlockdevQcow2EncryptionFormat\fP) \-\- encryption format
.IP \(bu 2
When \fBformat\fP is \fBaes\fP: The members of \fI\%QCryptoBlockOptionsQCow\fP\&.
.IP \(bu 2
When \fBformat\fP is \fBluks\fP: The members of \fI\%QCryptoBlockOptionsLUKS\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsPreallocate  (Since: 6.0)
Filter driver intended to be inserted between format and protocol
node and do preallocation in protocol node on write.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBprealloc\-align\fP (\fBint\fP, \fIoptional\fP) \-\- on preallocation, align file length to this number,
default 1048576 (1M)
.IP \(bu 2
\fBprealloc\-size\fP (\fBint\fP, \fIoptional\fP) \-\- how much to preallocate, default 134217728 (128M)
.IP \(bu 2
The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsQcow2  (Since: 2.9)
Driver specific block device options for qcow2.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBlazy\-refcounts\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether to enable the lazy refcounts feature
(default is taken from the image file)
.IP \(bu 2
\fBpass\-discard\-request\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether discard requests to the qcow2 device
should be forwarded to the data source
.IP \(bu 2
\fBpass\-discard\-snapshot\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether discard requests for the data source
should be issued when a snapshot operation (e.g. deleting a
snapshot) frees clusters in the qcow2 file
.IP \(bu 2
\fBpass\-discard\-other\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether discard requests for the data source
should be issued on other occasions where a cluster gets freed
.IP \(bu 2
\fBdiscard\-no\-unref\fP (\fBboolean\fP, \fIoptional\fP) \-\- when enabled, data clusters will remain
preallocated when they are no longer used, e.g. because they are
discarded or converted to zero clusters.  As usual, whether the
old data is discarded or kept on the protocol level (i.e. in the
image file) depends on the setting of the pass\-discard\-request
option.  Keeping the clusters preallocated prevents qcow2
fragmentation that would otherwise be caused by freeing and
re\-allocating them later.  Besides potential performance
degradation, such fragmentation can lead to increased allocation
of clusters past the end of the image file, resulting in image
files whose file length can grow much larger than their guest
disk size would suggest.  If image file length is of concern
(e.g. when storing qcow2 images directly on block devices), you
should consider enabling this option.  (since 8.1)
.IP \(bu 2
\fBoverlap\-check\fP (\fI\%Qcow2OverlapChecks\fP, \fIoptional\fP) \-\- which overlap checks to perform for writes to the
image, defaults to \(aqcached\(aq (since 2.2)
.IP \(bu 2
\fBcache\-size\fP (\fBint\fP, \fIoptional\fP) \-\- the maximum total size of the L2 table and refcount
block caches in bytes (since 2.2)
.IP \(bu 2
\fBl2\-cache\-size\fP (\fBint\fP, \fIoptional\fP) \-\- the maximum size of the L2 table cache in bytes
(since 2.2)
.IP \(bu 2
\fBl2\-cache\-entry\-size\fP (\fBint\fP, \fIoptional\fP) \-\- the size of each entry in the L2 cache in
bytes.  It must be a power of two between 512 and the cluster
size.  The default value is the cluster size (since 2.12)
.IP \(bu 2
\fBrefcount\-cache\-size\fP (\fBint\fP, \fIoptional\fP) \-\- the maximum size of the refcount block cache
in bytes (since 2.2)
.IP \(bu 2
\fBcache\-clean\-interval\fP (\fBint\fP, \fIoptional\fP) \-\- clean unused entries in the L2 and refcount
caches.  The interval is in seconds.  The default value is 600
on supporting platforms, and 0 on other platforms.  0 disables
this feature.  (since 2.5)
.IP \(bu 2
\fBencrypt\fP (\fI\%BlockdevQcow2Encryption\fP, \fIoptional\fP) \-\- Image decryption options.  Mandatory for encrypted images,
except when doing a metadata\-only probe of the image.  (since
2.10)
.IP \(bu 2
\fBdata\-file\fP (\fI\%BlockdevRef\fP, \fIoptional\fP) \-\- reference to or definition of the external data file.
This may only be specified for images that require an external
data file.  If it is not specified for such an image, the data
file name is loaded from the image file.  (since 4.0)
.IP \(bu 2
The members of \fI\%BlockdevOptionsGenericCOWFormat\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  SshHostKeyCheckMode  (Since: 2.12)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnone\fP \-\- Don\(aqt check the host key at all
.IP \(bu 2
\fBhash\fP \-\- Compare the host key with a given hash
.IP \(bu 2
\fBknown_hosts\fP \-\- Check the host key against the known_hosts file
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  SshHostKeyCheckHashType  (Since: 2.12)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBmd5\fP \-\- The given hash is an md5 hash
.IP \(bu 2
\fBsha1\fP \-\- The given hash is an sha1 hash
.IP \(bu 2
\fBsha256\fP \-\- The given hash is an sha256 hash
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SshHostKeyHash  (Since: 2.12)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%SshHostKeyCheckHashType\fP) \-\- The hash algorithm used for the hash
.IP \(bu 2
\fBhash\fP (\fBstring\fP) \-\- The expected hash value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SshHostKeyCheck  (Since: 2.12)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmode\fP (\fI\%SshHostKeyCheckMode\fP) \-\- How to check the host key
.IP \(bu 2
When \fBmode\fP is \fBhash\fP: The members of \fI\%SshHostKeyHash\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsSsh  (Since: 2.9)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBserver\fP (\fI\%InetSocketAddress\fP) \-\- host address
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- path to the image on the host
.IP \(bu 2
\fBuser\fP (\fBstring\fP, \fIoptional\fP) \-\- user as which to connect, defaults to current local user name
.IP \(bu 2
\fBhost\-key\-check\fP (\fI\%SshHostKeyCheck\fP, \fIoptional\fP) \-\- Defines how and what to check the host key against
(default: known_hosts)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlkdebugEvent  (Since: 2.9)
Trigger events supported by blkdebug.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBl1_shrink_write_table\fP \-\- write zeros to the l1 table to shrink image.
(since 2.11)
.IP \(bu 2
\fBl1_shrink_free_l2_clusters\fP \-\- discard the l2 tables.  (since 2.11)
.IP \(bu 2
\fBcor_write\fP \-\- a write due to copy\-on\-read (since 2.11)
.IP \(bu 2
\fBcluster_alloc_space\fP \-\- an allocation of file space for a cluster
(since 4.1)
.IP \(bu 2
\fBnone\fP \-\- triggers once at creation of the blkdebug node (since 4.1)
.IP \(bu 2
\fBl1_update\fP \-\- Not documented
.IP \(bu 2
\fBl1_grow_alloc_table\fP \-\- Not documented
.IP \(bu 2
\fBl1_grow_write_table\fP \-\- Not documented
.IP \(bu 2
\fBl1_grow_activate_table\fP \-\- Not documented
.IP \(bu 2
\fBl2_load\fP \-\- Not documented
.IP \(bu 2
\fBl2_update\fP \-\- Not documented
.IP \(bu 2
\fBl2_update_compressed\fP \-\- Not documented
.IP \(bu 2
\fBl2_alloc_cow_read\fP \-\- Not documented
.IP \(bu 2
\fBl2_alloc_write\fP \-\- Not documented
.IP \(bu 2
\fBread_aio\fP \-\- Not documented
.IP \(bu 2
\fBread_backing_aio\fP \-\- Not documented
.IP \(bu 2
\fBread_compressed\fP \-\- Not documented
.IP \(bu 2
\fBwrite_aio\fP \-\- Not documented
.IP \(bu 2
\fBwrite_compressed\fP \-\- Not documented
.IP \(bu 2
\fBvmstate_load\fP \-\- Not documented
.IP \(bu 2
\fBvmstate_save\fP \-\- Not documented
.IP \(bu 2
\fBcow_read\fP \-\- Not documented
.IP \(bu 2
\fBcow_write\fP \-\- Not documented
.IP \(bu 2
\fBreftable_load\fP \-\- Not documented
.IP \(bu 2
\fBreftable_grow\fP \-\- Not documented
.IP \(bu 2
\fBreftable_update\fP \-\- Not documented
.IP \(bu 2
\fBrefblock_load\fP \-\- Not documented
.IP \(bu 2
\fBrefblock_update\fP \-\- Not documented
.IP \(bu 2
\fBrefblock_update_part\fP \-\- Not documented
.IP \(bu 2
\fBrefblock_alloc\fP \-\- Not documented
.IP \(bu 2
\fBrefblock_alloc_hookup\fP \-\- Not documented
.IP \(bu 2
\fBrefblock_alloc_write\fP \-\- Not documented
.IP \(bu 2
\fBrefblock_alloc_write_blocks\fP \-\- Not documented
.IP \(bu 2
\fBrefblock_alloc_write_table\fP \-\- Not documented
.IP \(bu 2
\fBrefblock_alloc_switch_table\fP \-\- Not documented
.IP \(bu 2
\fBcluster_alloc\fP \-\- Not documented
.IP \(bu 2
\fBcluster_alloc_bytes\fP \-\- Not documented
.IP \(bu 2
\fBcluster_free\fP \-\- Not documented
.IP \(bu 2
\fBflush_to_os\fP \-\- Not documented
.IP \(bu 2
\fBflush_to_disk\fP \-\- Not documented
.IP \(bu 2
\fBpwritev_rmw_head\fP \-\- Not documented
.IP \(bu 2
\fBpwritev_rmw_after_head\fP \-\- Not documented
.IP \(bu 2
\fBpwritev_rmw_tail\fP \-\- Not documented
.IP \(bu 2
\fBpwritev_rmw_after_tail\fP \-\- Not documented
.IP \(bu 2
\fBpwritev\fP \-\- Not documented
.IP \(bu 2
\fBpwritev_zero\fP \-\- Not documented
.IP \(bu 2
\fBpwritev_done\fP \-\- Not documented
.IP \(bu 2
\fBempty_image_prepare\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlkdebugIOType  (Since: 4.1)
Kinds of I/O that blkdebug can inject errors in.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBread\fP \-\- \&.bdrv_co_preadv()
.IP \(bu 2
\fBwrite\fP \-\- \&.bdrv_co_pwritev()
.IP \(bu 2
\fBwrite\-zeroes\fP \-\- \&.bdrv_co_pwrite_zeroes()
.IP \(bu 2
\fBdiscard\fP \-\- \&.bdrv_co_pdiscard()
.IP \(bu 2
\fBflush\fP \-\- \&.bdrv_co_flush_to_disk()
.IP \(bu 2
\fBblock\-status\fP \-\- \&.bdrv_co_block_status()
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlkdebugInjectErrorOptions  (Since: 2.9)
Describes a single error injection for blkdebug.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBevent\fP (\fI\%BlkdebugEvent\fP) \-\- trigger event
.IP \(bu 2
\fBstate\fP (\fBint\fP, \fIoptional\fP) \-\- the state identifier blkdebug needs to be in to actually
trigger the event; defaults to \(dqany\(dq
.IP \(bu 2
\fBiotype\fP (\fI\%BlkdebugIOType\fP, \fIoptional\fP) \-\- the type of I/O operations on which this error should be
injected; defaults to \(dqall read, write, write\-zeroes, discard,
and flush operations\(dq (since: 4.1)
.IP \(bu 2
\fBerrno\fP (\fBint\fP, \fIoptional\fP) \-\- error identifier (errno) to be returned; defaults to EIO
.IP \(bu 2
\fBsector\fP (\fBint\fP, \fIoptional\fP) \-\- specifies the sector index which has to be affected in
order to actually trigger the event; defaults to \(dqany sector\(dq
.IP \(bu 2
\fBonce\fP (\fBboolean\fP, \fIoptional\fP) \-\- disables further events after this one has been triggered;
defaults to false
.IP \(bu 2
\fBimmediately\fP (\fBboolean\fP, \fIoptional\fP) \-\- fail immediately; defaults to false
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlkdebugSetStateOptions  (Since: 2.9)
Describes a single state\-change event for blkdebug.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBevent\fP (\fI\%BlkdebugEvent\fP) \-\- trigger event
.IP \(bu 2
\fBstate\fP (\fBint\fP, \fIoptional\fP) \-\- the current state identifier blkdebug needs to be in;
defaults to \(dqany\(dq
.IP \(bu 2
\fBnew_state\fP (\fBint\fP) \-\- the state identifier blkdebug is supposed to assume if
this event is triggered
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsBlkdebug  (Since: 2.9)
Driver specific block device options for blkdebug.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBimage\fP (\fI\%BlockdevRef\fP) \-\- underlying raw block device (or image file)
.IP \(bu 2
\fBconfig\fP (\fBstring\fP, \fIoptional\fP) \-\- filename of the configuration file
.IP \(bu 2
\fBalign\fP (\fBint\fP, \fIoptional\fP) \-\- required alignment for requests in bytes, must be positive
power of 2, or 0 for default
.IP \(bu 2
\fBmax\-transfer\fP (\fBint\fP, \fIoptional\fP) \-\- maximum size for I/O transfers in bytes, must be
positive multiple of \fBalign\fP and of the underlying file\(aqs request
alignment (but need not be a power of 2), or 0 for default
(since 2.10)
.IP \(bu 2
\fBopt\-write\-zero\fP (\fBint\fP, \fIoptional\fP) \-\- preferred alignment for write zero requests in
bytes, must be positive multiple of \fBalign\fP and of the underlying
file\(aqs request alignment (but need not be a power of 2), or 0
for default (since 2.10)
.IP \(bu 2
\fBmax\-write\-zero\fP (\fBint\fP, \fIoptional\fP) \-\- maximum size for write zero requests in bytes, must
be positive multiple of \fBalign\fP, of \fBopt\-write\-zero\fP, and of the
underlying file\(aqs request alignment (but need not be a power of
2), or 0 for default (since 2.10)
.IP \(bu 2
\fBopt\-discard\fP (\fBint\fP, \fIoptional\fP) \-\- preferred alignment for discard requests in bytes,
must be positive multiple of \fBalign\fP and of the underlying file\(aqs
request alignment (but need not be a power of 2), or 0 for
default (since 2.10)
.IP \(bu 2
\fBmax\-discard\fP (\fBint\fP, \fIoptional\fP) \-\- maximum size for discard requests in bytes, must be
positive multiple of \fBalign\fP, of \fBopt\-discard\fP, and of the
underlying file\(aqs request alignment (but need not be a power of
2), or 0 for default (since 2.10)
.IP \(bu 2
\fBinject\-error\fP (\fB[\fP\fI\%BlkdebugInjectErrorOptions\fP\fB]\fP, \fIoptional\fP) \-\- array of error injection descriptions
.IP \(bu 2
\fBset\-state\fP (\fB[\fP\fI\%BlkdebugSetStateOptions\fP\fB]\fP, \fIoptional\fP) \-\- array of state\-change descriptions
.IP \(bu 2
\fBtake\-child\-perms\fP (\fB[\fP\fI\%BlockPermission\fP\fB]\fP, \fIoptional\fP) \-\- Permissions to take on \fBimage\fP in addition to what
is necessary anyway (which depends on how the blkdebug node is
used).  Defaults to none.  (since 5.0)
.IP \(bu 2
\fBunshare\-child\-perms\fP (\fB[\fP\fI\%BlockPermission\fP\fB]\fP, \fIoptional\fP) \-\- Permissions not to share on \fBimage\fP in addition
to what cannot be shared anyway (which depends on how the
blkdebug node is used).  Defaults to none.  (since 5.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsBlklogwrites  (Since: 3.0)
Driver specific block device options for blklogwrites.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP) \-\- block device
.IP \(bu 2
\fBlog\fP (\fI\%BlockdevRef\fP) \-\- block device used to log writes to \fBfile\fP
.IP \(bu 2
\fBlog\-sector\-size\fP (\fBint\fP, \fIoptional\fP) \-\- sector size used in logging writes to \fBfile\fP,
determines granularity of offsets and sizes of writes
(default: 512)
.IP \(bu 2
\fBlog\-append\fP (\fBboolean\fP, \fIoptional\fP) \-\- append to an existing log (default: false)
.IP \(bu 2
\fBlog\-super\-update\-interval\fP (\fBint\fP, \fIoptional\fP) \-\- interval of write requests after which
the log super block is updated to disk (default: 4096)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsBlkverify  (Since: 2.9)
Driver specific block device options for blkverify.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtest\fP (\fI\%BlockdevRef\fP) \-\- block device to be tested
.IP \(bu 2
\fBraw\fP (\fI\%BlockdevRef\fP) \-\- raw image used for verification
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsBlkreplay  (Since: 4.2)
Driver specific block device options for blkreplay.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBimage\fP (\fI\%BlockdevRef\fP) \-\- disk image which should be controlled with blkreplay
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QuorumReadPattern  (Since: 2.9)
An enumeration of quorum read patterns.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBquorum\fP \-\- read all the children and do a quorum vote on reads
.IP \(bu 2
\fBfifo\fP \-\- read only from the first child that has not failed
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsQuorum  (Since: 2.9)
Driver specific block device options for Quorum
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBblkverify\fP (\fBboolean\fP, \fIoptional\fP) \-\- true if the driver must print content mismatch set to
false by default
.IP \(bu 2
\fBchildren\fP (\fB[\fP\fI\%BlockdevRef\fP\fB]\fP) \-\- the children block devices to use
.IP \(bu 2
\fBvote\-threshold\fP (\fBint\fP) \-\- the vote limit under which a read will fail
.IP \(bu 2
\fBrewrite\-corrupted\fP (\fBboolean\fP, \fIoptional\fP) \-\- rewrite corrupted data when quorum is reached
(Since 2.1)
.IP \(bu 2
\fBread\-pattern\fP (\fI\%QuorumReadPattern\fP, \fIoptional\fP) \-\- choose read pattern and set to quorum by default
(Since 2.2)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsGluster  (Since: 2.9)
Driver specific block device options for Gluster
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBvolume\fP (\fBstring\fP) \-\- name of gluster volume where VM image resides
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- absolute path to image file in gluster volume
.IP \(bu 2
\fBserver\fP (\fB[\fP\fI\%SocketAddress\fP\fB]\fP) \-\- gluster servers description
.IP \(bu 2
\fBdebug\fP (\fBint\fP, \fIoptional\fP) \-\- libgfapi log level (default \(aq4\(aq which is Error) (Since 2.8)
.IP \(bu 2
\fBlogfile\fP (\fBstring\fP, \fIoptional\fP) \-\- libgfapi log file (default /dev/stderr) (Since 2.8)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsIoUring  (Since: 7.2)
\fIAvailability\fP: \fBCONFIG_BLKIO\fP
.sp
Driver specific block device options for the io_uring backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- path to the image file
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsNvmeIoUring  (Since: 7.2)
\fIAvailability\fP: \fBCONFIG_BLKIO\fP
.sp
Driver specific block device options for the nvme\-io_uring backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- path to the NVMe namespace\(aqs character device (e.g.
/dev/ng0n1).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsVirtioBlkVfioPci  (Since: 7.2)
\fIAvailability\fP: \fBCONFIG_BLKIO\fP
.sp
Driver specific block device options for the virtio\-blk\-vfio\-pci
backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- path to the PCI device\(aqs sysfs directory (e.g.
/sys/bus/pci/devices/0000:00:01.0).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsVirtioBlkVhostUser  (Since: 7.2)
\fIAvailability\fP: \fBCONFIG_BLKIO\fP
.sp
Driver specific block device options for the virtio\-blk\-vhost\-user
backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- path to the vhost\-user UNIX domain socket.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsVirtioBlkVhostVdpa  (Since: 7.2)
\fIAvailability\fP: \fBCONFIG_BLKIO\fP
.sp
Driver specific block device options for the virtio\-blk\-vhost\-vdpa
backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- path to the vhost\-vdpa character device.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBfdset\fP \-\- Member \fBpath\fP supports the special \(dq/dev/fdset/N\(dq path
(since 8.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  IscsiTransport  (Since: 2.9)
An enumeration of libiscsi transport types
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBtcp\fP \-\- Not documented
.IP \(bu 2
\fBiser\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  IscsiHeaderDigest  (Since: 2.9)
An enumeration of header digests supported by libiscsi
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBcrc32c\fP \-\- Not documented
.IP \(bu 2
\fBnone\fP \-\- Not documented
.IP \(bu 2
\fBcrc32c\-none\fP \-\- Not documented
.IP \(bu 2
\fBnone\-crc32c\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsIscsi  (Since: 2.9)
Driver specific block device options for iscsi
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtransport\fP (\fI\%IscsiTransport\fP) \-\- The iscsi transport type
.IP \(bu 2
\fBportal\fP (\fBstring\fP) \-\- The address of the iscsi portal
.IP \(bu 2
\fBtarget\fP (\fBstring\fP) \-\- The target iqn name
.IP \(bu 2
\fBlun\fP (\fBint\fP, \fIoptional\fP) \-\- LUN to connect to.  Defaults to 0.
.IP \(bu 2
\fBuser\fP (\fBstring\fP, \fIoptional\fP) \-\- User name to log in with.  If omitted, no CHAP authentication
is performed.
.IP \(bu 2
\fBpassword\-secret\fP (\fBstring\fP, \fIoptional\fP) \-\- The ID of a QCryptoSecret object providing the
password for the login.  This option is required if \fBuser\fP is
specified.
.IP \(bu 2
\fBinitiator\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- The iqn name we want to identify to the target as.
If this option is not specified, an initiator name is generated
automatically.
.IP \(bu 2
\fBheader\-digest\fP (\fI\%IscsiHeaderDigest\fP, \fIoptional\fP) \-\- The desired header digest.  Defaults to none\-crc32c.
.IP \(bu 2
\fBtimeout\fP (\fBint\fP, \fIoptional\fP) \-\- Timeout in seconds after which a request will timeout.  0
means no timeout and is the default.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  RbdAuthMode  (Since: 3.0)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBcephx\fP \-\- Not documented
.IP \(bu 2
\fBnone\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  RbdImageEncryptionFormat  (Since: 6.1)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBluks\-any\fP \-\- Used for opening either luks or luks2 (Since 8.0)
.IP \(bu 2
\fBluks\fP \-\- Not documented
.IP \(bu 2
\fBluks2\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RbdEncryptionOptionsLUKSBase  (Since: 6.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBkey\-secret\fP (\fBstring\fP) \-\- ID of a QCryptoSecret object providing a passphrase for
unlocking the encryption
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RbdEncryptionCreateOptionsLUKSBase  (Since: 6.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcipher\-alg\fP (\fI\%QCryptoCipherAlgo\fP, \fIoptional\fP) \-\- The encryption algorithm
.IP \(bu 2
The members of \fI\%RbdEncryptionOptionsLUKSBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RbdEncryptionOptionsLUKS  (Since: 6.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%RbdEncryptionOptionsLUKSBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RbdEncryptionOptionsLUKS2  (Since: 6.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%RbdEncryptionOptionsLUKSBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RbdEncryptionOptionsLUKSAny  (Since: 8.0)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%RbdEncryptionOptionsLUKSBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RbdEncryptionCreateOptionsLUKS  (Since: 6.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%RbdEncryptionCreateOptionsLUKSBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RbdEncryptionCreateOptionsLUKS2  (Since: 6.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%RbdEncryptionCreateOptionsLUKSBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RbdEncryptionOptions  (Since: 6.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBformat\fP (\fI\%RbdImageEncryptionFormat\fP) \-\- Encryption format.
.IP \(bu 2
\fBparent\fP (\fI\%RbdEncryptionOptions\fP, \fIoptional\fP) \-\- Parent image encryption options (for cloned images).  Can
be left unspecified if this cloned image is encrypted using the
same format and secret as its parent image (i.e. not explicitly
formatted) or if its parent image is not encrypted.  (Since 8.0)
.IP \(bu 2
When \fBformat\fP is \fBluks\fP: The members of \fI\%RbdEncryptionOptionsLUKS\fP\&.
.IP \(bu 2
When \fBformat\fP is \fBluks2\fP: The members of \fI\%RbdEncryptionOptionsLUKS2\fP\&.
.IP \(bu 2
When \fBformat\fP is \fBluks\-any\fP: The members of \fI\%RbdEncryptionOptionsLUKSAny\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RbdEncryptionCreateOptions  (Since: 6.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBformat\fP (\fI\%RbdImageEncryptionFormat\fP) \-\- Encryption format.
.IP \(bu 2
When \fBformat\fP is \fBluks\fP: The members of \fI\%RbdEncryptionCreateOptionsLUKS\fP\&.
.IP \(bu 2
When \fBformat\fP is \fBluks2\fP: The members of \fI\%RbdEncryptionCreateOptionsLUKS2\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsRbd  (Since: 2.9)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpool\fP (\fBstring\fP) \-\- Ceph pool name.
.IP \(bu 2
\fBnamespace\fP (\fBstring\fP, \fIoptional\fP) \-\- Rados namespace name in the Ceph pool.  (Since 5.0)
.IP \(bu 2
\fBimage\fP (\fBstring\fP) \-\- Image name in the Ceph pool.
.IP \(bu 2
\fBconf\fP (\fBstring\fP, \fIoptional\fP) \-\- path to Ceph configuration file.  Values in the configuration
file will be overridden by options specified via QAPI.
.IP \(bu 2
\fBsnapshot\fP (\fBstring\fP, \fIoptional\fP) \-\- Ceph snapshot name.
.IP \(bu 2
\fBencrypt\fP (\fI\%RbdEncryptionOptions\fP, \fIoptional\fP) \-\- Image encryption options.  (Since 6.1)
.IP \(bu 2
\fBuser\fP (\fBstring\fP, \fIoptional\fP) \-\- Ceph id name.
.IP \(bu 2
\fBauth\-client\-required\fP (\fB[\fP\fI\%RbdAuthMode\fP\fB]\fP, \fIoptional\fP) \-\- Acceptable authentication modes.  This maps
to Ceph configuration option \(dqauth_client_required\(dq.  (Since
3.0)
.IP \(bu 2
\fBkey\-secret\fP (\fBstring\fP, \fIoptional\fP) \-\- ID of a QCryptoSecret object providing a key for cephx
authentication.  This maps to Ceph configuration option \(dqkey\(dq.
(Since 3.0)
.IP \(bu 2
\fBserver\fP (\fB[\fP\fI\%InetSocketAddressBase\fP\fB]\fP, \fIoptional\fP) \-\- Monitor host address and port.  This maps to the \(dqmon_host\(dq
Ceph option.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  ReplicationMode  (Since: 2.9)
\fIAvailability\fP: \fBCONFIG_REPLICATION\fP
.sp
An enumeration of replication modes.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBprimary\fP \-\- Primary mode, the vm\(aqs state will be sent to secondary
QEMU.
.IP \(bu 2
\fBsecondary\fP \-\- Secondary mode, receive the vm\(aqs state from primary
QEMU.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsReplication  (Since: 2.9)
\fIAvailability\fP: \fBCONFIG_REPLICATION\fP
.sp
Driver specific block device options for replication
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmode\fP (\fI\%ReplicationMode\fP) \-\- the replication mode
.IP \(bu 2
\fBtop\-id\fP (\fBstring\fP, \fIoptional\fP) \-\- In secondary mode, node name or device ID of the root node
who owns the replication node chain.  Must not be given in
primary mode.
.IP \(bu 2
The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  NFSTransport  (Since: 2.9)
An enumeration of NFS transport types
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBinet\fP \-\- TCP transport
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NFSServer  (Since: 2.9)
Captures the address of the socket
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%NFSTransport\fP) \-\- transport type used for NFS (only TCP supported)
.IP \(bu 2
\fBhost\fP (\fBstring\fP) \-\- host address for NFS server
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsNfs  (Since: 2.9)
Driver specific block device option for NFS
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBserver\fP (\fI\%NFSServer\fP) \-\- host address
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- path of the image on the host
.IP \(bu 2
\fBuser\fP (\fBint\fP, \fIoptional\fP) \-\- UID value to use when talking to the server (defaults to
65534 on Windows and getuid() on unix)
.IP \(bu 2
\fBgroup\fP (\fBint\fP, \fIoptional\fP) \-\- GID value to use when talking to the server (defaults to
65534 on Windows and getgid() in unix)
.IP \(bu 2
\fBtcp\-syn\-count\fP (\fBint\fP, \fIoptional\fP) \-\- number of SYNs during the session establishment
(defaults to libnfs default)
.IP \(bu 2
\fBreadahead\-size\fP (\fBint\fP, \fIoptional\fP) \-\- set the readahead size in bytes (defaults to libnfs
default)
.IP \(bu 2
\fBpage\-cache\-size\fP (\fBint\fP, \fIoptional\fP) \-\- set the pagecache size in bytes (defaults to
libnfs default)
.IP \(bu 2
\fBdebug\fP (\fBint\fP, \fIoptional\fP) \-\- set the NFS debug level (max 2) (defaults to libnfs default)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsCurlBase  (Since: 2.9)
Driver specific block device options shared by all protocols
supported by the curl backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBurl\fP (\fBstring\fP) \-\- URL of the image file
.IP \(bu 2
\fBreadahead\fP (\fBint\fP, \fIoptional\fP) \-\- Size of the read\-ahead cache; must be a multiple of 512
(defaults to 256 kB)
.IP \(bu 2
\fBtimeout\fP (\fBint\fP, \fIoptional\fP) \-\- Timeout for connections, in seconds (defaults to 5)
.IP \(bu 2
\fBusername\fP (\fBstring\fP, \fIoptional\fP) \-\- Username for authentication (defaults to none)
.IP \(bu 2
\fBpassword\-secret\fP (\fBstring\fP, \fIoptional\fP) \-\- ID of a QCryptoSecret object providing a password
for authentication (defaults to no password)
.IP \(bu 2
\fBproxy\-username\fP (\fBstring\fP, \fIoptional\fP) \-\- Username for proxy authentication (defaults to
none)
.IP \(bu 2
\fBproxy\-password\-secret\fP (\fBstring\fP, \fIoptional\fP) \-\- ID of a QCryptoSecret object providing a
password for proxy authentication (defaults to no password)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsCurlHttp  (Since: 2.9)
Driver specific block device options for HTTP connections over the
curl backend.  URLs must start with \(dq\fI\%http://\fP\(dq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcookie\fP (\fBstring\fP, \fIoptional\fP) \-\- List of cookies to set; format is \(dqname1=content1;
name2=content2;\(dq as explained by CURLOPT_COOKIE(3).  Defaults to
no cookies.
.IP \(bu 2
\fBcookie\-secret\fP (\fBstring\fP, \fIoptional\fP) \-\- ID of a QCryptoSecret object providing the cookie
data in a secure way.  See \fBcookie\fP for the format.  (since 2.10)
.IP \(bu 2
The members of \fI\%BlockdevOptionsCurlBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsCurlHttps  (Since: 2.9)
Driver specific block device options for HTTPS connections over the
curl backend.  URLs must start with \(dq\fI\%https://\fP\(dq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcookie\fP (\fBstring\fP, \fIoptional\fP) \-\- List of cookies to set; format is \(dqname1=content1;
name2=content2;\(dq as explained by CURLOPT_COOKIE(3).  Defaults to
no cookies.
.IP \(bu 2
\fBsslverify\fP (\fBboolean\fP, \fIoptional\fP) \-\- Whether to verify the SSL certificate\(aqs validity
(defaults to true)
.IP \(bu 2
\fBcookie\-secret\fP (\fBstring\fP, \fIoptional\fP) \-\- ID of a QCryptoSecret object providing the cookie
data in a secure way.  See \fBcookie\fP for the format.  (since 2.10)
.IP \(bu 2
The members of \fI\%BlockdevOptionsCurlBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsCurlFtp  (Since: 2.9)
Driver specific block device options for FTP connections over the
curl backend.  URLs must start with \(dq\fI\%ftp://\fP\(dq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockdevOptionsCurlBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsCurlFtps  (Since: 2.9)
Driver specific block device options for FTPS connections over the
curl backend.  URLs must start with \(dqftps://\(dq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsslverify\fP (\fBboolean\fP, \fIoptional\fP) \-\- Whether to verify the SSL certificate\(aqs validity
(defaults to true)
.IP \(bu 2
The members of \fI\%BlockdevOptionsCurlBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsNbd  (Since: 2.9)
Driver specific block device options for NBD.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBserver\fP (\fI\%SocketAddress\fP) \-\- NBD server address
.IP \(bu 2
\fBexport\fP (\fBstring\fP, \fIoptional\fP) \-\- export name
.IP \(bu 2
\fBtls\-creds\fP (\fBstring\fP, \fIoptional\fP) \-\- TLS credentials ID
.IP \(bu 2
\fBtls\-hostname\fP (\fBstring\fP, \fIoptional\fP) \-\- TLS hostname override for certificate validation
(Since 7.0)
.IP \(bu 2
\fBx\-dirty\-bitmap\fP (\fBstring\fP, \fIoptional\fP) \-\- A metadata context name such as
\(dqqemu:dirty\-bitmap:NAME\(dq or \(dqqemu:allocation\-depth\(dq to query in
place of the traditional \(dqbase:allocation\(dq block status (see
NBD_OPT_LIST_META_CONTEXT in the NBD protocol; and yes, naming
this option x\-context would have made more sense) (since 3.0)
.IP \(bu 2
\fBreconnect\-delay\fP (\fBint\fP, \fIoptional\fP) \-\- On an unexpected disconnect, the nbd client tries
to connect again until succeeding or encountering a serious
error.  During the first \fBreconnect\-delay\fP seconds, all requests
are paused and will be rerun on a successful reconnect.  After
that time, any delayed requests and all future requests before a
successful reconnect will immediately fail.  Default 0 (Since
4.2)
.IP \(bu 2
\fBopen\-timeout\fP (\fBint\fP, \fIoptional\fP) \-\- In seconds.  If zero, the nbd driver tries the
connection only once, and fails to open if the connection fails.
If non\-zero, the nbd driver will repeat connection attempts
until successful or until \fBopen\-timeout\fP seconds have elapsed.
Default 0 (Since 7.0)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- Member \fBx\-dirty\-bitmap\fP is experimental.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsRaw  (Since: 2.9)
Driver specific block device options for the raw driver.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBoffset\fP (\fBint\fP, \fIoptional\fP) \-\- position where the block device starts
.IP \(bu 2
\fBsize\fP (\fBint\fP, \fIoptional\fP) \-\- the assumed size of the device
.IP \(bu 2
The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsThrottle  (Since: 2.11)
Driver specific block device options for the throttle driver
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBthrottle\-group\fP (\fBstring\fP) \-\- the name of the throttle\-group object to use.  It
must already exist.
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP) \-\- reference to or definition of the data source block device
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsCor  (Since: 6.0)
Driver specific block device options for the copy\-on\-read driver.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBbottom\fP (\fBstring\fP, \fIoptional\fP) \-\- The name of a non\-filter node (allocation\-bearing layer)
that limits the COR operations in the backing chain (inclusive),
so that no data below this node will be copied by this filter.
If option is absent, the limit is not applied, so that data from
all backing layers may be copied.
.IP \(bu 2
The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  OnCbwError  (Since: 7.1)
An enumeration of possible behaviors for copy\-before\-write operation
failures.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBbreak\-guest\-write\fP \-\- report the error to the guest.  This way, the
guest will not be able to overwrite areas that cannot be backed
up, so the backup process remains valid.
.IP \(bu 2
\fBbreak\-snapshot\fP \-\- continue guest write.  Doing so will make the
provided snapshot state invalid and any backup or export process
based on it will finally fail.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsCbw  (Since: 6.2)
Driver specific block device options for the copy\-before\-write
driver, which does so called copy\-before\-write operations: when data
is written to the filter, the filter first reads corresponding
blocks from its file child and copies them to \fBtarget\fP child.  After
successfully copying, the write request is propagated to file child.
If copying fails, the original write request is failed too and no
data is written to file child.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtarget\fP (\fI\%BlockdevRef\fP) \-\- The target for copy\-before\-write operations.
.IP \(bu 2
\fBbitmap\fP (\fI\%BlockDirtyBitmap\fP, \fIoptional\fP) \-\- If specified, copy\-before\-write filter will do
copy\-before\-write operations only for dirty regions of the
bitmap.  Bitmap size must be equal to length of file and target
child of the filter.  Note also, that bitmap is used only to
initialize internal bitmap of the process, so further
modifications (or removing) of specified bitmap doesn\(aqt
influence the filter.  (Since 7.0)
.IP \(bu 2
\fBon\-cbw\-error\fP (\fI\%OnCbwError\fP, \fIoptional\fP) \-\- Behavior on failure of copy\-before\-write operation.
Default is \fBbreak\-guest\-write\fP\&.  (Since 7.1)
.IP \(bu 2
\fBcbw\-timeout\fP (\fBint\fP, \fIoptional\fP) \-\- Zero means no limit.  Non\-zero sets the timeout in
seconds for copy\-before\-write operation.  When a timeout occurs,
the respective copy\-before\-write operation will fail, and the
\fBon\-cbw\-error\fP parameter will decide how this failure is handled.
Default 0.  (Since 7.1)
.IP \(bu 2
\fBmin\-cluster\-size\fP (\fBint\fP, \fIoptional\fP) \-\- Minimum size of blocks used by copy\-before\-write
operations.  Has to be a power of 2.  No effect if smaller than
the maximum of the target\(aqs cluster size and 64 KiB.  Default 0.
(Since 9.2)
.IP \(bu 2
The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptions  (Since: 2.9)
Options for creating a block device.  Many options are available for
all block devices, independent of the block driver:
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdriver\fP (\fI\%BlockdevDriver\fP) \-\- block driver name
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- the node name of the new node (Since 2.0).  This option
is required on the top level of blockdev\-add.  Valid node names
start with an alphabetic character and may contain only
alphanumeric characters, \(aq\-\(aq, \(aq.\(aq and \(aq_\(aq.  Their maximum length
is 31 characters.
.IP \(bu 2
\fBdiscard\fP (\fI\%BlockdevDiscardOptions\fP, \fIoptional\fP) \-\- discard\-related options (default: ignore)
.IP \(bu 2
\fBcache\fP (\fI\%BlockdevCacheOptions\fP, \fIoptional\fP) \-\- cache\-related options
.IP \(bu 2
\fBactive\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether the block node should be activated (default: true).
Having inactive block nodes is useful primarily for migration because it
allows opening an image on the destination while the source is still
holding locks for it. (Since 10.0)
.IP \(bu 2
\fBread\-only\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether the block device should be read\-only (default:
false).  Note that some block drivers support only read\-only
access, either generally or in certain configurations.  In this
case, the default value does not work and the option must be
specified explicitly.
.IP \(bu 2
\fBauto\-read\-only\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true and \fBread\-only\fP is false, QEMU may
automatically decide not to open the image read\-write as
requested, but fall back to read\-only instead (and switch
between the modes later), e.g. depending on whether the image
file is writable or whether a writing user is attached to the
node (default: false, since 3.1)
.IP \(bu 2
\fBdetect\-zeroes\fP (\fI\%BlockdevDetectZeroesOptions\fP, \fIoptional\fP) \-\- detect and optimize zero writes (Since 2.1)
(default: off)
.IP \(bu 2
\fBforce\-share\fP (\fBboolean\fP, \fIoptional\fP) \-\- force share all permission on added nodes.  Requires
read\-only=true.  (Since 2.10)
.IP \(bu 2
When \fBdriver\fP is \fBblkdebug\fP: The members of \fI\%BlockdevOptionsBlkdebug\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBblklogwrites\fP: The members of \fI\%BlockdevOptionsBlklogwrites\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBblkverify\fP: The members of \fI\%BlockdevOptionsBlkverify\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBblkreplay\fP: The members of \fI\%BlockdevOptionsBlkreplay\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBbochs\fP: The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBcloop\fP: The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBcompress\fP: The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBcopy\-before\-write\fP: The members of \fI\%BlockdevOptionsCbw\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBcopy\-on\-read\fP: The members of \fI\%BlockdevOptionsCor\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBdmg\fP: The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBfile\fP: The members of \fI\%BlockdevOptionsFile\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBftp\fP: The members of \fI\%BlockdevOptionsCurlFtp\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBftps\fP: The members of \fI\%BlockdevOptionsCurlFtps\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBgluster\fP: The members of \fI\%BlockdevOptionsGluster\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBhost_cdrom\fP: The members of \fI\%BlockdevOptionsFile\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBhost_device\fP: The members of \fI\%BlockdevOptionsFile\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBhttp\fP: The members of \fI\%BlockdevOptionsCurlHttp\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBhttps\fP: The members of \fI\%BlockdevOptionsCurlHttps\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBio_uring\fP: The members of \fI\%BlockdevOptionsIoUring\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBiscsi\fP: The members of \fI\%BlockdevOptionsIscsi\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBluks\fP: The members of \fI\%BlockdevOptionsLUKS\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBnbd\fP: The members of \fI\%BlockdevOptionsNbd\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBnfs\fP: The members of \fI\%BlockdevOptionsNfs\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBnull\-aio\fP: The members of \fI\%BlockdevOptionsNull\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBnull\-co\fP: The members of \fI\%BlockdevOptionsNull\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBnvme\fP: The members of \fI\%BlockdevOptionsNVMe\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBnvme\-io_uring\fP: The members of \fI\%BlockdevOptionsNvmeIoUring\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBparallels\fP: The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBpreallocate\fP: The members of \fI\%BlockdevOptionsPreallocate\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBqcow2\fP: The members of \fI\%BlockdevOptionsQcow2\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBqcow\fP: The members of \fI\%BlockdevOptionsQcow\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBqed\fP: The members of \fI\%BlockdevOptionsGenericCOWFormat\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBquorum\fP: The members of \fI\%BlockdevOptionsQuorum\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBraw\fP: The members of \fI\%BlockdevOptionsRaw\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBrbd\fP: The members of \fI\%BlockdevOptionsRbd\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBreplication\fP: The members of \fI\%BlockdevOptionsReplication\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBsnapshot\-access\fP: The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBssh\fP: The members of \fI\%BlockdevOptionsSsh\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBthrottle\fP: The members of \fI\%BlockdevOptionsThrottle\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvdi\fP: The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvhdx\fP: The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvirtio\-blk\-vfio\-pci\fP: The members of \fI\%BlockdevOptionsVirtioBlkVfioPci\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvirtio\-blk\-vhost\-user\fP: The members of \fI\%BlockdevOptionsVirtioBlkVhostUser\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvirtio\-blk\-vhost\-vdpa\fP: The members of \fI\%BlockdevOptionsVirtioBlkVhostVdpa\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvmdk\fP: The members of \fI\%BlockdevOptionsGenericCOWFormat\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvpc\fP: The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvvfat\fP: The members of \fI\%BlockdevOptionsVVFAT\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Alternate  BlockdevRef  (Since: 2.9)
Reference to a block device.
.INDENT 7.0
.TP
.B Alternatives
.INDENT 7.0
.IP \(bu 2
\fBdefinition\fP (\fI\%BlockdevOptions\fP) \-\- defines a new block device inline
.IP \(bu 2
\fBreference\fP (\fBstring\fP) \-\- references the ID of an existing block device
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Alternate  BlockdevRefOrNull  (Since: 2.9)
Reference to a block device.
.INDENT 7.0
.TP
.B Alternatives
.INDENT 7.0
.IP \(bu 2
\fBdefinition\fP (\fI\%BlockdevOptions\fP) \-\- defines a new block device inline
.IP \(bu 2
\fBreference\fP (\fBstring\fP) \-\- references the ID of an existing block device.  An empty
string means that no block device should be referenced.
Deprecated; use null instead.
.IP \(bu 2
\fBnull\fP (\fBnull\fP) \-\- No block device should be referenced (since 2.10)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-add  (Since: 2.9)
Creates a new block device.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockdevOptions\fP\&.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-add\(dq,
     \(dqarguments\(dq: {
          \(dqdriver\(dq: \(dqqcow2\(dq,
          \(dqnode\-name\(dq: \(dqtest1\(dq,
          \(dqfile\(dq: {
              \(dqdriver\(dq: \(dqfile\(dq,
              \(dqfilename\(dq: \(dqtest.qcow2\(dq
           }
      }
    }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-add\(dq,
     \(dqarguments\(dq: {
          \(dqdriver\(dq: \(dqqcow2\(dq,
          \(dqnode\-name\(dq: \(dqnode0\(dq,
          \(dqdiscard\(dq: \(dqunmap\(dq,
          \(dqcache\(dq: {
             \(dqdirect\(dq: true
           },
           \(dqfile\(dq: {
             \(dqdriver\(dq: \(dqfile\(dq,
             \(dqfilename\(dq: \(dq/tmp/test.qcow2\(dq
           },
           \(dqbacking\(dq: {
              \(dqdriver\(dq: \(dqraw\(dq,
              \(dqfile\(dq: {
                 \(dqdriver\(dq: \(dqfile\(dq,
                 \(dqfilename\(dq: \(dq/dev/fdset/4\(dq
               }
           }
       }
     }

<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-reopen  (Since: 6.1)
Reopens one or more block devices using the given set of options.
Any option not specified will be reset to its default value
regardless of its previous status.  If an option cannot be changed
or a particular driver does not support reopening then the command
will return an error.  All devices in the list are reopened in one
transaction, so if one of them fails then the whole transaction is
cancelled.
.sp
The command receives a list of block devices to reopen.  For each
one of them, the top\-level \fBnode\-name\fP option (from BlockdevOptions)
must be specified and is used to select the block device to be
reopened.  Other \fBnode\-name\fP options must be either omitted or set to
the current name of the appropriate node.  This command won\(aqt change
any node name and any attempt to do it will result in an error.
.sp
In the case of options that refer to child nodes, the behavior of
this command depends on the value:
.INDENT 7.0
.INDENT 3.5
.INDENT 0.0
.IP 1. 3
A set of options (BlockdevOptions): the child is reopened with
the specified set of options.
.IP 2. 3
A reference to the current child: the child is reopened using
its existing set of options.
.IP 3. 3
A reference to a different node: the current child is replaced
with the specified one.
.IP 4. 3
NULL: the current child (if any) is detached.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Options (1) and (2) are supported in all cases.  Option (3) is
supported for \fBfile\fP and \fBbacking\fP, and option (4) for \fBbacking\fP only.
.sp
Unlike with blockdev\-add, the \fBbacking\fP option must always be present
unless the node being reopened does not have a backing file and its
image does not have a default backing file name as part of its
metadata.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fB[\fP\fI\%BlockdevOptions\fP\fB]\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-del  (Since: 2.9)
Deletes a block device that has been added using blockdev\-add.  The
command will fail if the node is attached to a device or is
otherwise being used.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP) \-\- Name of the graph node to delete.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-add\(dq,
     \(dqarguments\(dq: {
          \(dqdriver\(dq: \(dqqcow2\(dq,
          \(dqnode\-name\(dq: \(dqnode0\(dq,
          \(dqfile\(dq: {
              \(dqdriver\(dq: \(dqfile\(dq,
              \(dqfilename\(dq: \(dqtest.qcow2\(dq
          }
     }
   }
<\- { \(dqreturn\(dq: {} }

\-> { \(dqexecute\(dq: \(dqblockdev\-del\(dq,
     \(dqarguments\(dq: { \(dqnode\-name\(dq: \(dqnode0\(dq }
   }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-set\-active  (Since: 10.0)
Activate or inactivate a block device. Use this to manage the handover of
block devices on migration with qemu\-storage\-daemon.
.sp
Activating a node automatically activates all of its child nodes first.
Inactivating a node automatically inactivates any of its child nodes that are
not in use by a still active node.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- Name of the graph node to activate or inactivate. By default, all
nodes are affected by the operation.
.IP \(bu 2
\fBactive\fP (\fBboolean\fP) \-\- true if the nodes should be active when the command returns success,
false if they should be inactive.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-set\-active\(dq,
     \(dqarguments\(dq: {
          \(dqnode\-name\(dq: \(dqnode0\(dq,
          \(dqactive\(dq: false
     }
   }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsFile  (Since: 2.12)
Driver specific image creation options for file.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- Filename for the new image file
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBpreallocation\fP (\fI\%PreallocMode\fP, \fIoptional\fP) \-\- Preallocation mode for the new image (default: off;
allowed values: off, falloc (if CONFIG_POSIX_FALLOCATE), full
(if CONFIG_POSIX))
.IP \(bu 2
\fBnocow\fP (\fBboolean\fP, \fIoptional\fP) \-\- Turn off copy\-on\-write (valid only on btrfs; default: off)
.IP \(bu 2
\fBextent\-size\-hint\fP (\fBint\fP, \fIoptional\fP) \-\- Extent size hint to add to the image file; 0 for
not adding an extent size hint (default: 1 MB, since 5.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsGluster  (Since: 2.12)
Driver specific image creation options for gluster.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBlocation\fP (\fI\%BlockdevOptionsGluster\fP) \-\- Where to store the new image file
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBpreallocation\fP (\fI\%PreallocMode\fP, \fIoptional\fP) \-\- Preallocation mode for the new image (default: off;
allowed values: off, falloc (if CONFIG_GLUSTERFS_FALLOCATE),
full (if CONFIG_GLUSTERFS_ZEROFILL))
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsLUKS  (Since: 2.12)
Driver specific image creation options for LUKS.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP, \fIoptional\fP) \-\- Node to create the image format on, mandatory except when
\(aqpreallocation\(aq is not requested
.IP \(bu 2
\fBheader\fP (\fI\%BlockdevRef\fP, \fIoptional\fP) \-\- Block device holding a detached LUKS header.  (since 9.0)
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBpreallocation\fP (\fI\%PreallocMode\fP, \fIoptional\fP) \-\- Preallocation mode for the new image (since: 4.2)
(default: off; allowed values: off, metadata, falloc, full)
.IP \(bu 2
The members of \fI\%QCryptoBlockCreateOptionsLUKS\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsNfs  (Since: 2.12)
Driver specific image creation options for NFS.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBlocation\fP (\fI\%BlockdevOptionsNfs\fP) \-\- Where to store the new image file
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsParallels  (Since: 2.12)
Driver specific image creation options for parallels.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP) \-\- Node to create the image format on
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBcluster\-size\fP (\fBint\fP, \fIoptional\fP) \-\- Cluster size in bytes (default: 1 MB)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsQcow  (Since: 2.12)
Driver specific image creation options for qcow.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP) \-\- Node to create the image format on
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBbacking\-file\fP (\fBstring\fP, \fIoptional\fP) \-\- File name of the backing file if a backing file
should be used
.IP \(bu 2
\fBencrypt\fP (\fI\%QCryptoBlockCreateOptions\fP, \fIoptional\fP) \-\- Encryption options if the image should be encrypted
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevQcow2Version  (Since: 2.12)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBv2\fP \-\- The original QCOW2 format as introduced in qemu 0.10 (version
2)
.IP \(bu 2
\fBv3\fP \-\- The extended QCOW2 format as introduced in qemu 1.1 (version 3)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  Qcow2CompressionType  (Since: 5.1)
Compression type used in qcow2 image file
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBzlib\fP \-\- zlib compression, see <\fI\%http://zlib.net/\fP>
.IP \(bu 2
\fBzstd\fP \-\- zstd compression, see <\fI\%http://github.com/facebook/zstd\fP>
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsQcow2  (Since: 2.12)
Driver specific image creation options for qcow2.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP) \-\- Node to create the image format on
.IP \(bu 2
\fBdata\-file\fP (\fI\%BlockdevRef\fP, \fIoptional\fP) \-\- Node to use as an external data file in which all guest
data is stored so that only metadata remains in the qcow2 file
(since: 4.0)
.IP \(bu 2
\fBdata\-file\-raw\fP (\fBboolean\fP, \fIoptional\fP) \-\- True if the external data file must stay valid as a
standalone (read\-only) raw image without looking at qcow2
metadata (default: false; since: 4.0)
.IP \(bu 2
\fBextended\-l2\fP (\fBboolean\fP, \fIoptional\fP) \-\- True to make the image have extended L2 entries
(default: false; since 5.2)
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBversion\fP (\fI\%BlockdevQcow2Version\fP, \fIoptional\fP) \-\- Compatibility level (default: v3)
.IP \(bu 2
\fBbacking\-file\fP (\fBstring\fP, \fIoptional\fP) \-\- File name of the backing file if a backing file
should be used
.IP \(bu 2
\fBbacking\-fmt\fP (\fI\%BlockdevDriver\fP, \fIoptional\fP) \-\- Name of the block driver to use for the backing file
.IP \(bu 2
\fBencrypt\fP (\fI\%QCryptoBlockCreateOptions\fP, \fIoptional\fP) \-\- Encryption options if the image should be encrypted
.IP \(bu 2
\fBcluster\-size\fP (\fBint\fP, \fIoptional\fP) \-\- qcow2 cluster size in bytes (default: 65536)
.IP \(bu 2
\fBpreallocation\fP (\fI\%PreallocMode\fP, \fIoptional\fP) \-\- Preallocation mode for the new image (default: off;
allowed values: off, falloc, full, metadata)
.IP \(bu 2
\fBlazy\-refcounts\fP (\fBboolean\fP, \fIoptional\fP) \-\- True if refcounts may be updated lazily
(default: off)
.IP \(bu 2
\fBrefcount\-bits\fP (\fBint\fP, \fIoptional\fP) \-\- Width of reference counts in bits (default: 16)
.IP \(bu 2
\fBcompression\-type\fP (\fI\%Qcow2CompressionType\fP, \fIoptional\fP) \-\- The image cluster compression method
(default: zlib, since 5.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsQed  (Since: 2.12)
Driver specific image creation options for qed.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP) \-\- Node to create the image format on
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBbacking\-file\fP (\fBstring\fP, \fIoptional\fP) \-\- File name of the backing file if a backing file
should be used
.IP \(bu 2
\fBbacking\-fmt\fP (\fI\%BlockdevDriver\fP, \fIoptional\fP) \-\- Name of the block driver to use for the backing file
.IP \(bu 2
\fBcluster\-size\fP (\fBint\fP, \fIoptional\fP) \-\- Cluster size in bytes (default: 65536)
.IP \(bu 2
\fBtable\-size\fP (\fBint\fP, \fIoptional\fP) \-\- L1/L2 table size (in clusters)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsRbd  (Since: 2.12)
Driver specific image creation options for rbd/Ceph.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBlocation\fP (\fI\%BlockdevOptionsRbd\fP) \-\- Where to store the new image file.  This location cannot
point to a snapshot.
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBcluster\-size\fP (\fBint\fP, \fIoptional\fP) \-\- RBD object size
.IP \(bu 2
\fBencrypt\fP (\fI\%RbdEncryptionCreateOptions\fP, \fIoptional\fP) \-\- Image encryption options.  (Since 6.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevVmdkSubformat  (Since: 4.0)
Subformat options for VMDK images
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBmonolithicSparse\fP \-\- Single file image with sparse cluster allocation
.IP \(bu 2
\fBmonolithicFlat\fP \-\- Single flat data image and a descriptor file
.IP \(bu 2
\fBtwoGbMaxExtentSparse\fP \-\- Data is split into 2GB (per virtual LBA)
sparse extent files, in addition to a descriptor file
.IP \(bu 2
\fBtwoGbMaxExtentFlat\fP \-\- Data is split into 2GB (per virtual LBA) flat
extent files, in addition to a descriptor file
.IP \(bu 2
\fBstreamOptimized\fP \-\- Single file image sparse cluster allocation,
optimized for streaming over network.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevVmdkAdapterType  (Since: 4.0)
Adapter type info for VMDK images
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBide\fP \-\- Not documented
.IP \(bu 2
\fBbuslogic\fP \-\- Not documented
.IP \(bu 2
\fBlsilogic\fP \-\- Not documented
.IP \(bu 2
\fBlegacyESX\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsVmdk  (Since: 4.0)
Driver specific image creation options for VMDK.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP) \-\- Where to store the new image file.  This refers to the image
file for monolithcSparse and streamOptimized format, or the
descriptor file for other formats.
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBextents\fP (\fB[\fP\fI\%BlockdevRef\fP\fB]\fP, \fIoptional\fP) \-\- Where to store the data extents.  Required for
monolithcFlat, twoGbMaxExtentSparse and twoGbMaxExtentFlat
formats.  For monolithicFlat, only one entry is required; for
twoGbMaxExtent* formats, the number of entries required is
calculated as extent_number = virtual_size / 2GB.  Providing
more extents than will be used is an error.
.IP \(bu 2
\fBsubformat\fP (\fI\%BlockdevVmdkSubformat\fP, \fIoptional\fP) \-\- The subformat of the VMDK image.  Default:
\(dqmonolithicSparse\(dq.
.IP \(bu 2
\fBbacking\-file\fP (\fBstring\fP, \fIoptional\fP) \-\- The path of backing file.  Default: no backing file
is used.
.IP \(bu 2
\fBadapter\-type\fP (\fI\%BlockdevVmdkAdapterType\fP, \fIoptional\fP) \-\- The adapter type used to fill in the descriptor.
Default: ide.
.IP \(bu 2
\fBhwversion\fP (\fBstring\fP, \fIoptional\fP) \-\- Hardware version.  The meaningful options are \(dq4\(dq or
\(dq6\(dq.  Default: \(dq4\(dq.
.IP \(bu 2
\fBtoolsversion\fP (\fBstring\fP, \fIoptional\fP) \-\- VMware guest tools version.  Default: \(dq2147483647\(dq
(Since 6.2)
.IP \(bu 2
\fBzeroed\-grain\fP (\fBboolean\fP, \fIoptional\fP) \-\- Whether to enable zeroed\-grain feature for sparse
subformats.  Default: false.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsSsh  (Since: 2.12)
Driver specific image creation options for SSH.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBlocation\fP (\fI\%BlockdevOptionsSsh\fP) \-\- Where to store the new image file
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsVdi  (Since: 2.12)
Driver specific image creation options for VDI.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP) \-\- Node to create the image format on
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBpreallocation\fP (\fI\%PreallocMode\fP, \fIoptional\fP) \-\- Preallocation mode for the new image (default: off;
allowed values: off, metadata)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevVhdxSubformat  (Since: 2.12)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBdynamic\fP \-\- Growing image file
.IP \(bu 2
\fBfixed\fP \-\- Preallocated fixed\-size image file
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsVhdx  (Since: 2.12)
Driver specific image creation options for vhdx.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP) \-\- Node to create the image format on
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBlog\-size\fP (\fBint\fP, \fIoptional\fP) \-\- Log size in bytes, must be a multiple of 1 MB (default: 1
MB)
.IP \(bu 2
\fBblock\-size\fP (\fBint\fP, \fIoptional\fP) \-\- Block size in bytes, must be a multiple of 1 MB and not
larger than 256 MB (default: automatically choose a block size
depending on the image size)
.IP \(bu 2
\fBsubformat\fP (\fI\%BlockdevVhdxSubformat\fP, \fIoptional\fP) \-\- vhdx subformat (default: dynamic)
.IP \(bu 2
\fBblock\-state\-zero\fP (\fBboolean\fP, \fIoptional\fP) \-\- Force use of payload blocks of type \(aqZERO\(aq.
Non\-standard, but default.  Do not set to \(aqoff\(aq when using
\(aqqemu\-img convert\(aq with subformat=dynamic.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevVpcSubformat  (Since: 2.12)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBdynamic\fP \-\- Growing image file
.IP \(bu 2
\fBfixed\fP \-\- Preallocated fixed\-size image file
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsVpc  (Since: 2.12)
Driver specific image creation options for vpc (VHD).
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP) \-\- Node to create the image format on
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBsubformat\fP (\fI\%BlockdevVpcSubformat\fP, \fIoptional\fP) \-\- vhdx subformat (default: dynamic)
.IP \(bu 2
\fBforce\-size\fP (\fBboolean\fP, \fIoptional\fP) \-\- Force use of the exact byte size instead of rounding to
the next size that can be represented in CHS geometry
(default: false)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptions  (Since: 2.12)
Options for creating an image format on a given node.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdriver\fP (\fI\%BlockdevDriver\fP) \-\- block driver to create the image format
.IP \(bu 2
When \fBdriver\fP is \fBfile\fP: The members of \fI\%BlockdevCreateOptionsFile\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBgluster\fP: The members of \fI\%BlockdevCreateOptionsGluster\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBluks\fP: The members of \fI\%BlockdevCreateOptionsLUKS\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBnfs\fP: The members of \fI\%BlockdevCreateOptionsNfs\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBparallels\fP: The members of \fI\%BlockdevCreateOptionsParallels\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBqcow\fP: The members of \fI\%BlockdevCreateOptionsQcow\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBqcow2\fP: The members of \fI\%BlockdevCreateOptionsQcow2\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBqed\fP: The members of \fI\%BlockdevCreateOptionsQed\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBrbd\fP: The members of \fI\%BlockdevCreateOptionsRbd\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBssh\fP: The members of \fI\%BlockdevCreateOptionsSsh\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvdi\fP: The members of \fI\%BlockdevCreateOptionsVdi\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvhdx\fP: The members of \fI\%BlockdevCreateOptionsVhdx\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvmdk\fP: The members of \fI\%BlockdevCreateOptionsVmdk\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvpc\fP: The members of \fI\%BlockdevCreateOptionsVpc\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-create  (Since: 3.0)
Starts a job to create an image format on a given node.  The job is
automatically finalized, but a manual job\-dismiss is required.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBjob\-id\fP (\fBstring\fP) \-\- Identifier for the newly created job.
.IP \(bu 2
\fBoptions\fP (\fI\%BlockdevCreateOptions\fP) \-\- Options for the image creation.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevAmendOptionsLUKS  (Since: 5.1)
Driver specific image amend options for LUKS.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%QCryptoBlockAmendOptionsLUKS\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevAmendOptionsQcow2  (Since: 5.1)
Driver specific image amend options for qcow2.  For now, only
encryption options can be amended
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBencrypt\fP (\fI\%QCryptoBlockAmendOptions\fP, \fIoptional\fP) \-\- Encryption options to be amended
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevAmendOptions  (Since: 5.1)
Options for amending an image format
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdriver\fP (\fI\%BlockdevDriver\fP) \-\- Block driver of the node to amend.
.IP \(bu 2
When \fBdriver\fP is \fBluks\fP: The members of \fI\%BlockdevAmendOptionsLUKS\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBqcow2\fP: The members of \fI\%BlockdevAmendOptionsQcow2\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-blockdev\-amend  (Since: 5.1)
This command is unstable/experimental.
.sp
Starts a job to amend format specific options of an existing open
block device The job is automatically finalized, but a manual
job\-dismiss is required.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBjob\-id\fP (\fBstring\fP) \-\- Identifier for the newly created job.
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP) \-\- Name of the block node to work on
.IP \(bu 2
\fBoptions\fP (\fI\%BlockdevAmendOptions\fP) \-\- Options (driver specific)
.IP \(bu 2
\fBforce\fP (\fBboolean\fP, \fIoptional\fP) \-\- Allow unsafe operations, format specific For luks that
allows erase of the last active keyslot (permanent loss of
data), and replacement of an active keyslot (possible loss of
data if IO error happens)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is experimental.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockErrorAction  (Since: 2.1)
An enumeration of action that has been taken when a DISK I/O occurs
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBignore\fP \-\- error has been ignored
.IP \(bu 2
\fBreport\fP \-\- error has been reported to the device
.IP \(bu 2
\fBstop\fP \-\- error caused VM to be stopped
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  BLOCK_IMAGE_CORRUPTED  (Since: 1.7)
Emitted when a disk image is being marked corrupt.  The image can be
identified by its device or node name.  The \(aqdevice\(aq field is always
present for compatibility reasons, but it can be empty (\(dq\(dq) if the
image does not have a device name associated.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- device name.  This is always present for compatibility
reasons, but it can be empty (\(dq\(dq) if the image does not have a
device name associated.
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- node name (Since: 2.4)
.IP \(bu 2
\fBmsg\fP (\fBstring\fP) \-\- informative message for human consumption, such as the kind of
corruption being detected.  It should not be parsed by machine
as it is not guaranteed to be stable
.IP \(bu 2
\fBoffset\fP (\fBint\fP, \fIoptional\fP) \-\- if the corruption resulted from an image access, this is
the host\(aqs access offset into the image
.IP \(bu 2
\fBsize\fP (\fBint\fP, \fIoptional\fP) \-\- if the corruption resulted from an image access, this is the
access size
.IP \(bu 2
\fBfatal\fP (\fBboolean\fP) \-\- if set, the image is marked corrupt and therefore unusable
after this event and must be repaired (Since 2.2; before, every
BLOCK_IMAGE_CORRUPTED event was fatal)
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
If action is \(dqstop\(dq, a STOP event will eventually follow
the BLOCK_IO_ERROR event.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqBLOCK_IMAGE_CORRUPTED\(dq,
     \(dqdata\(dq: { \(dqdevice\(dq: \(dq\(dq, \(dqnode\-name\(dq: \(dqdrive\(dq, \(dqfatal\(dq: false,
               \(dqmsg\(dq: \(dqL2 table offset 0x2a2a2a00 unaligned (L1 index: 0)\(dq },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1648243240, \(dqmicroseconds\(dq: 906060 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  BLOCK_IO_ERROR  (Since: 0.13)
Emitted when a disk I/O error occurs
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBqom\-path\fP (\fBstring\fP) \-\- path to the device object in the QOM tree (since 9.2)
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- device name.  This is always present for compatibility
reasons, but it can be empty (\(dq\(dq) if the image does not have a
device name associated.
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- node name.  Note that errors may be reported for the
root node that is directly attached to a guest device rather
than for the node where the error occurred.  The node name is
not present if the drive is empty.  (Since: 2.8)
.IP \(bu 2
\fBoperation\fP (\fI\%IoOperationType\fP) \-\- I/O operation
.IP \(bu 2
\fBaction\fP (\fI\%BlockErrorAction\fP) \-\- action that has been taken
.IP \(bu 2
\fBnospace\fP (\fBboolean\fP, \fIoptional\fP) \-\- true if I/O error was caused due to a no\-space condition.
This key is only present if query\-block\(aqs io\-status is present,
please see query\-block documentation for more information
(since: 2.2)
.IP \(bu 2
\fBreason\fP (\fBstring\fP) \-\- human readable string describing the error cause.  (This
field is a debugging aid for humans, it should not be parsed by
applications) (since: 2.2)
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
If action is \(dqstop\(dq, a STOP event will eventually follow
the BLOCK_IO_ERROR event.
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
This event is rate\-limited.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqBLOCK_IO_ERROR\(dq,
     \(dqdata\(dq: { \(dqqom\-path\(dq: \(dq/machine/unattached/device[0]\(dq,
               \(dqdevice\(dq: \(dqide0\-hd1\(dq,
               \(dqnode\-name\(dq: \(dq#block212\(dq,
               \(dqoperation\(dq: \(dqwrite\(dq,
               \(dqaction\(dq: \(dqstop\(dq,
               \(dqreason\(dq: \(dqNo space left on device\(dq },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1265044230, \(dqmicroseconds\(dq: 450486 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  BLOCK_JOB_COMPLETED  (Since: 1.1)
Emitted when a block job has completed
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%JobType\fP) \-\- job type
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The job identifier.  Originally the device name but other
values are allowed since QEMU 2.7
.IP \(bu 2
\fBlen\fP (\fBint\fP) \-\- maximum progress value
.IP \(bu 2
\fBoffset\fP (\fBint\fP) \-\- current progress value.  On success this is equal to len.
On failure this is less than len
.IP \(bu 2
\fBspeed\fP (\fBint\fP) \-\- rate limit, bytes per second
.IP \(bu 2
\fBerror\fP (\fBstring\fP, \fIoptional\fP) \-\- error message.  Only present on failure.  This field
contains a human\-readable error message.  There are no semantics
other than that streaming has failed and clients should not try
to interpret the error string
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqBLOCK_JOB_COMPLETED\(dq,
     \(dqdata\(dq: { \(dqtype\(dq: \(dqstream\(dq, \(dqdevice\(dq: \(dqvirtio\-disk0\(dq,
               \(dqlen\(dq: 10737418240, \(dqoffset\(dq: 10737418240,
               \(dqspeed\(dq: 0 },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1267061043, \(dqmicroseconds\(dq: 959568 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  BLOCK_JOB_CANCELLED  (Since: 1.1)
Emitted when a block job has been cancelled
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%JobType\fP) \-\- job type
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The job identifier.  Originally the device name but other
values are allowed since QEMU 2.7
.IP \(bu 2
\fBlen\fP (\fBint\fP) \-\- maximum progress value
.IP \(bu 2
\fBoffset\fP (\fBint\fP) \-\- current progress value.  On success this is equal to len.
On failure this is less than len
.IP \(bu 2
\fBspeed\fP (\fBint\fP) \-\- rate limit, bytes per second
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqBLOCK_JOB_CANCELLED\(dq,
     \(dqdata\(dq: { \(dqtype\(dq: \(dqstream\(dq, \(dqdevice\(dq: \(dqvirtio\-disk0\(dq,
               \(dqlen\(dq: 10737418240, \(dqoffset\(dq: 134217728,
               \(dqspeed\(dq: 0 },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1267061043, \(dqmicroseconds\(dq: 959568 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  BLOCK_JOB_ERROR  (Since: 1.3)
Emitted when a block job encounters an error
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The job identifier.  Originally the device name but other
values are allowed since QEMU 2.7
.IP \(bu 2
\fBoperation\fP (\fI\%IoOperationType\fP) \-\- I/O operation
.IP \(bu 2
\fBaction\fP (\fI\%BlockErrorAction\fP) \-\- action that has been taken
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqBLOCK_JOB_ERROR\(dq,
     \(dqdata\(dq: { \(dqdevice\(dq: \(dqide0\-hd1\(dq,
               \(dqoperation\(dq: \(dqwrite\(dq,
               \(dqaction\(dq: \(dqstop\(dq },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1265044230, \(dqmicroseconds\(dq: 450486 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  BLOCK_JOB_READY  (Since: 1.3)
Emitted when a block job is ready to complete
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%JobType\fP) \-\- job type
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The job identifier.  Originally the device name but other
values are allowed since QEMU 2.7
.IP \(bu 2
\fBlen\fP (\fBint\fP) \-\- maximum progress value
.IP \(bu 2
\fBoffset\fP (\fBint\fP) \-\- current progress value.  On success this is equal to len.
On failure this is less than len
.IP \(bu 2
\fBspeed\fP (\fBint\fP) \-\- rate limit, bytes per second
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
The \(dqready to complete\(dq status is always reset by a
\fBBLOCK_JOB_ERROR\fP event.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqBLOCK_JOB_READY\(dq,
     \(dqdata\(dq: { \(dqdevice\(dq: \(dqdrive0\(dq, \(dqtype\(dq: \(dqmirror\(dq, \(dqspeed\(dq: 0,
               \(dqlen\(dq: 2097152, \(dqoffset\(dq: 2097152 },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1265044230, \(dqmicroseconds\(dq: 450486 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  BLOCK_JOB_PENDING  (Since: 2.12)
Emitted when a block job is awaiting explicit authorization to
finalize graph changes via \fBblock\-job\-finalize\fP\&.  If this job is part
of a transaction, it will not emit this event until the transaction
has converged first.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%JobType\fP) \-\- job type
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The job identifier.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqBLOCK_JOB_PENDING\(dq,
     \(dqdata\(dq: { \(dqtype\(dq: \(dqmirror\(dq, \(dqid\(dq: \(dqbackup_1\(dq },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1265044230, \(dqmicroseconds\(dq: 450486 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  PreallocMode  (Since: 2.2)
Preallocation mode of QEMU image file
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBoff\fP \-\- no preallocation
.IP \(bu 2
\fBmetadata\fP \-\- preallocate only for metadata
.IP \(bu 2
\fBfalloc\fP \-\- like \fBfull\fP preallocation but allocate disk space by
posix_fallocate() rather than writing data.
.IP \(bu 2
\fBfull\fP \-\- preallocate all data by writing it to the device to ensure
disk space is really available.  This data may or may not be
zero, depending on the image format and storage.  \fBfull\fP
preallocation also sets up metadata correctly.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  BLOCK_WRITE_THRESHOLD  (Since: 2.3)
Emitted when writes on block device reaches or exceeds the
configured write threshold.  For thin\-provisioned devices, this
means the device should be extended to avoid pausing for disk
exhaustion.  The event is one shot.  Once triggered, it needs to be
re\-registered with another block\-set\-write\-threshold command.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP) \-\- graph node name on which the threshold was exceeded.
.IP \(bu 2
\fBamount\-exceeded\fP (\fBint\fP) \-\- amount of data which exceeded the threshold, in
bytes.
.IP \(bu 2
\fBwrite\-threshold\fP (\fBint\fP) \-\- last configured threshold, in bytes.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-set\-write\-threshold  (Since: 2.3)
Change the write threshold for a block drive.  An event will be
delivered if a write to this block drive crosses the configured
threshold.  The threshold is an offset, thus must be non\-negative.
Default is no write threshold.  Setting the threshold to zero
disables it.
.sp
This is useful to transparently resize thin\-provisioned drives
without the guest OS noticing.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP) \-\- graph node name on which the threshold must be set.
.IP \(bu 2
\fBwrite\-threshold\fP (\fBint\fP) \-\- configured threshold for the block device, bytes.
Use 0 to disable the threshold.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock\-set\-write\-threshold\(dq,
     \(dqarguments\(dq: { \(dqnode\-name\(dq: \(dqmydev\(dq,
                    \(dqwrite\-threshold\(dq: 17179869184 } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-blockdev\-change  (Since: 2.7)
This command is unstable/experimental.
.sp
Dynamically reconfigure the block driver state graph.
.sp
Currently only supports adding and deleting quorum children.  A
child will be added at the end of the list of children.  Its
contents \fImust\fP be consistent with the other childrens\(aq contents.
Deleting a child that is not last in the list of children is
problematic, because it \(dqrenumbers\(dq the children following it.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBstring\fP) \-\- the id or name of the parent node.
.IP \(bu 2
\fBchild\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of a child to be deleted.  Mutually exclusive with
\fBnode\fP\&.
.IP \(bu 2
\fBnode\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of the node to be added.  Mutually exclusive with
\fBchild\fP\&.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is experimental.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Add a new node to a quorum"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqblockdev\-add\(dq,
      \(dqarguments\(dq: {
          \(dqdriver\(dq: \(dqraw\(dq,
          \(dqnode\-name\(dq: \(dqnew_node\(dq,
          \(dqfile\(dq: { \(dqdriver\(dq: \(dqfile\(dq,
                    \(dqfilename\(dq: \(dqtest.raw\(dq } } }
 <\- { \(dqreturn\(dq: {} }
 \-> { \(dqexecute\(dq: \(dqx\-blockdev\-change\(dq,
      \(dqarguments\(dq: { \(dqparent\(dq: \(dqdisk1\(dq,
                     \(dqnode\(dq: \(dqnew_node\(dq } }
 <\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Delete a quorum\(aqs node"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqx\-blockdev\-change\(dq,
      \(dqarguments\(dq: { \(dqparent\(dq: \(dqdisk1\(dq,
                     \(dqchild\(dq: \(dqchildren.1\(dq } }
 <\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-blockdev\-set\-iothread  (Since: 2.12)
This command is unstable/experimental.
.sp
Move \fBnode\fP and its children into the \fBiothread\fP\&.  If \fBiothread\fP is
null then move \fBnode\fP and its children into the main loop.
.sp
The node must not be attached to a BlockBackend.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP) \-\- the name of the block driver node
.IP \(bu 2
\fBiothread\fP (\fI\%StrOrNull\fP) \-\- the name of the IOThread object or null for the main loop
.IP \(bu 2
\fBforce\fP (\fBboolean\fP, \fIoptional\fP) \-\- true if the node and its children should be moved when a
BlockBackend is already attached
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is experimental and intended for test cases
that need control over IOThreads only.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Move a node into an IOThread"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqx\-blockdev\-set\-iothread\(dq,
      \(dqarguments\(dq: { \(dqnode\-name\(dq: \(dqdisk1\(dq,
                     \(dqiothread\(dq: \(dqiothread0\(dq } }
 <\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Move a node into the main loop"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqx\-blockdev\-set\-iothread\(dq,
      \(dqarguments\(dq: { \(dqnode\-name\(dq: \(dqdisk1\(dq,
                     \(dqiothread\(dq: null } }
 <\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QuorumOpType  (Since: 2.6)
An enumeration of the quorum operation types
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBread\fP \-\- read operation
.IP \(bu 2
\fBwrite\fP \-\- write operation
.IP \(bu 2
\fBflush\fP \-\- flush operation
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  QUORUM_FAILURE  (Since: 2.0)
Emitted by the Quorum block driver if it fails to establish a quorum
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBreference\fP (\fBstring\fP) \-\- device name if defined else node name
.IP \(bu 2
\fBsector\-num\fP (\fBint\fP) \-\- number of the first sector of the failed read operation
.IP \(bu 2
\fBsectors\-count\fP (\fBint\fP) \-\- failed read operation sector count
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
This event is rate\-limited.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqQUORUM_FAILURE\(dq,
     \(dqdata\(dq: { \(dqreference\(dq: \(dqusr1\(dq, \(dqsector\-num\(dq: 345435, \(dqsectors\-count\(dq: 5 },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1344522075, \(dqmicroseconds\(dq: 745528 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  QUORUM_REPORT_BAD  (Since: 2.0)
Emitted to report a corruption of a Quorum file
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%QuorumOpType\fP) \-\- quorum operation type (Since 2.6)
.IP \(bu 2
\fBerror\fP (\fBstring\fP, \fIoptional\fP) \-\- error message.  Only present on failure.  This field
contains a human\-readable error message.  There are no semantics
other than that the block layer reported an error and clients
should not try to interpret the error string.
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP) \-\- the graph node name of the block driver state
.IP \(bu 2
\fBsector\-num\fP (\fBint\fP) \-\- number of the first sector of the failed read operation
.IP \(bu 2
\fBsectors\-count\fP (\fBint\fP) \-\- failed read operation sector count
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
This event is rate\-limited.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Read operation"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 <\- { \(dqevent\(dq: \(dqQUORUM_REPORT_BAD\(dq,
      \(dqdata\(dq: { \(dqnode\-name\(dq: \(dqnode0\(dq, \(dqsector\-num\(dq: 345435, \(dqsectors\-count\(dq: 5,
                \(dqtype\(dq: \(dqread\(dq },
      \(dqtimestamp\(dq: { \(dqseconds\(dq: 1344522075, \(dqmicroseconds\(dq: 745528 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Flush operation"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 <\- { \(dqevent\(dq: \(dqQUORUM_REPORT_BAD\(dq,
      \(dqdata\(dq: { \(dqnode\-name\(dq: \(dqnode0\(dq, \(dqsector\-num\(dq: 0, \(dqsectors\-count\(dq: 2097120,
                \(dqtype\(dq: \(dqflush\(dq, \(dqerror\(dq: \(dqBroken pipe\(dq },
      \(dqtimestamp\(dq: { \(dqseconds\(dq: 1456406829, \(dqmicroseconds\(dq: 291763 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevSnapshotInternal  (Since: 1.7)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- the device name or node\-name of a root node to generate the
snapshot from
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the name of the internal snapshot to be created
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-snapshot\-internal\-sync  (Since: 1.7)
Synchronously take an internal snapshot of a block device, when the
format of the image used supports it.  If the name is an empty
string, or a snapshot with name already exists, the operation will
fail.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockdevSnapshotInternal\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBdevice\fP is not a valid block device, GenericError
.IP \(bu 2
If any snapshot matching \fBname\fP exists, or \fBname\fP is empty,
GenericError
.IP \(bu 2
If the format of the image used does not support it,
GenericError
.UNINDENT

.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
Only some image formats such as qcow2 and rbd support
internal snapshots.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-snapshot\-internal\-sync\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqide\-hd0\(dq,
                    \(dqname\(dq: \(dqsnapshot0\(dq }
   }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-snapshot\-delete\-internal\-sync  (Since: 1.7)
Synchronously delete an internal snapshot of a block device, when
the format of the image used support it.  The snapshot is identified
by name or id or both.  One of the name or id is required.  Return
SnapshotInfo for the successfully deleted snapshot.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- the device name or node\-name of a root node to delete the
snapshot from
.IP \(bu 2
\fBid\fP (\fBstring\fP, \fIoptional\fP) \-\- optional the snapshot\(aqs ID to be deleted
.IP \(bu 2
\fBname\fP (\fBstring\fP, \fIoptional\fP) \-\- optional the snapshot\(aqs name to be deleted
.UNINDENT
.TP
.B Return
\fI\%SnapshotInfo\fP \-\- SnapshotInfo
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBdevice\fP is not a valid block device, GenericError
.IP \(bu 2
If snapshot not found, GenericError
.IP \(bu 2
If the format of the image used does not support it,
GenericError
.IP \(bu 2
If \fBid\fP and \fBname\fP are both not specified, GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-snapshot\-delete\-internal\-sync\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqide\-hd0\(dq,
                    \(dqname\(dq: \(dqsnapshot0\(dq }
   }
<\- { \(dqreturn\(dq: {
                   \(dqid\(dq: \(dq1\(dq,
                   \(dqname\(dq: \(dqsnapshot0\(dq,
                   \(dqvm\-state\-size\(dq: 0,
                   \(dqdate\-sec\(dq: 1000012,
                   \(dqdate\-nsec\(dq: 10,
                   \(dqvm\-clock\-sec\(dq: 100,
                   \(dqvm\-clock\-nsec\(dq: 20,
                   \(dqicount\(dq: 220414
     }
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DummyBlockCoreForceArrays  (Since: 8.0)
Not used by QMP; hack to let us use BlockGraphInfoList internally
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBunused\-block\-graph\-info\fP (\fB[\fP\fI\%BlockGraphInfo\fP\fB]\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.SS Block device exports
.INDENT 0.0
.TP
.B Object  NbdServerOptionsBase
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBhandshake\-max\-seconds\fP (\fBint\fP, \fIoptional\fP) \-\- Time limit, in seconds, at which a client
that has not completed the negotiation handshake will be
disconnected, or 0 for no limit (since 10.0; default: 10).
.IP \(bu 2
\fBtls\-creds\fP (\fBstring\fP, \fIoptional\fP) \-\- ID of the TLS credentials object (since 2.6).
.IP \(bu 2
\fBtls\-authz\fP (\fBstring\fP, \fIoptional\fP) \-\- ID of the QAuthZ authorization object used to validate
the client\(aqs x509 distinguished name.  This object is is only
resolved at time of use, so can be deleted and recreated on the
fly while the NBD server is active.  If missing, it will default
to denying access (since 4.0).
.IP \(bu 2
\fBmax\-connections\fP (\fBint\fP, \fIoptional\fP) \-\- The maximum number of connections to allow at the
same time, 0 for unlimited.  Setting this to 1 also stops the
server from advertising multiple client support (since 5.2;
default: 100).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NbdServerOptions
Keep this type consistent with the NbdServerOptionsLegacy type.  The
only intended difference is using SocketAddress instead of
SocketAddressLegacy.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBaddr\fP (\fI\%SocketAddress\fP) \-\- Address on which to listen (since 4.2).
.IP \(bu 2
The members of \fI\%NbdServerOptionsBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NbdServerOptionsLegacy
Keep this type consistent with the NbdServerOptions type.  The only
intended difference is using SocketAddressLegacy instead of
SocketAddress.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBaddr\fP (\fI\%SocketAddressLegacy\fP) \-\- Address on which to listen (since 1.3).
.IP \(bu 2
The members of \fI\%NbdServerOptionsBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  nbd\-server\-start  (Since: 1.3)
Start an NBD server listening on the given host and port.  Block
devices can then be exported using \fBnbd\-server\-add\fP\&.  The NBD server
will present them as named exports; for example, another QEMU
instance could refer to them as \(dqnbd:HOST:PORT:exportname=NAME\(dq.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%NbdServerOptionsLegacy\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
if the server is already running
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockExportOptionsNbdBase  (Since: 5.0)
An NBD block export (common options shared between nbd\-server\-add
and the NBD branch of block\-export\-add).
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP, \fIoptional\fP) \-\- Export name.  If unspecified, the \fBdevice\fP parameter is used
as the export name.  (Since 2.12)
.IP \(bu 2
\fBdescription\fP (\fBstring\fP, \fIoptional\fP) \-\- Free\-form description of the export, up to 4096 bytes.
(Since 5.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockExportOptionsNbd  (Since: 5.2)
An NBD block export (distinct options used in the NBD branch of
block\-export\-add).
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBbitmaps\fP (\fB[\fP\fI\%BlockDirtyBitmapOrStr\fP\fB]\fP, \fIoptional\fP) \-\- Also export each of the named dirty bitmaps reachable from
\fBdevice\fP, so the NBD client can use NBD_OPT_SET_META_CONTEXT with
the metadata context name \(dqqemu:dirty\-bitmap:BITMAP\(dq to inspect
each bitmap.  Since 7.1 bitmap may be specified by node/name
pair.
.IP \(bu 2
\fBallocation\-depth\fP (\fBboolean\fP, \fIoptional\fP) \-\- Also export the allocation depth map for \fBdevice\fP,
so the NBD client can use NBD_OPT_SET_META_CONTEXT with the
metadata context name \(dqqemu:allocation\-depth\(dq to inspect
allocation details.  (since 5.2)
.IP \(bu 2
The members of \fI\%BlockExportOptionsNbdBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockExportOptionsVhostUserBlk  (Since: 5.2)
A vhost\-user\-blk block export.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBaddr\fP (\fI\%SocketAddress\fP) \-\- The vhost\-user socket on which to listen.  Both \(aqunix\(aq and
\(aqfd\(aq SocketAddress types are supported.  Passed fds must be UNIX
domain sockets.
.IP \(bu 2
\fBlogical\-block\-size\fP (\fBint\fP, \fIoptional\fP) \-\- Logical block size in bytes.  Defaults to 512
bytes.
.IP \(bu 2
\fBnum\-queues\fP (\fBint\fP, \fIoptional\fP) \-\- Number of request virtqueues.  Must be greater than 0.
Defaults to 1.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  FuseExportAllowOther  (Since: 6.1)
Possible allow_other modes for FUSE exports.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBoff\fP \-\- Do not pass allow_other as a mount option.
.IP \(bu 2
\fBon\fP \-\- Pass allow_other as a mount option.
.IP \(bu 2
\fBauto\fP \-\- Try mounting with allow_other first, and if that fails, retry
without allow_other.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockExportOptionsFuse  (Since: 6.0)
\fIAvailability\fP: \fBCONFIG_FUSE\fP
.sp
Options for exporting a block graph node on some (file) mountpoint
as a raw image.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmountpoint\fP (\fBstring\fP) \-\- Path on which to export the block device via FUSE.
This must point to an existing regular file.
.IP \(bu 2
\fBgrowable\fP (\fBboolean\fP, \fIoptional\fP) \-\- Whether writes beyond the EOF should grow the block node
accordingly.  (default: false)
.IP \(bu 2
\fBallow\-other\fP (\fI\%FuseExportAllowOther\fP, \fIoptional\fP) \-\- If this is off, only qemu\(aqs user is allowed access to
this export.  That cannot be changed even with chmod or chown.
Enabling this option will allow other users access to the export
with the FUSE mount option \(dqallow_other\(dq.  Note that using
allow_other as a non\-root user requires user_allow_other to be
enabled in the global fuse.conf configuration file.  In auto
mode (the default), the FUSE export driver will first attempt to
mount the export with allow_other, and if that fails, try again
without.  (since 6.1; default: auto)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockExportOptionsVduseBlk  (Since: 7.1)
A vduse\-blk block export.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the name of VDUSE device (must be unique across the host).
.IP \(bu 2
\fBnum\-queues\fP (\fBint\fP, \fIoptional\fP) \-\- the number of virtqueues.  Defaults to 1.
.IP \(bu 2
\fBqueue\-size\fP (\fBint\fP, \fIoptional\fP) \-\- the size of virtqueue.  Defaults to 256.
.IP \(bu 2
\fBlogical\-block\-size\fP (\fBint\fP, \fIoptional\fP) \-\- Logical block size in bytes.  Range [512,
PAGE_SIZE] and must be power of 2.  Defaults to 512 bytes.
.IP \(bu 2
\fBserial\fP (\fBstring\fP, \fIoptional\fP) \-\- the serial number of virtio block device.  Defaults to
empty string.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NbdServerAddOptions  (Since: 5.0)
An NBD block export, per legacy nbd\-server\-add command.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The device name or node name of the node to be exported
.IP \(bu 2
\fBwritable\fP (\fBboolean\fP, \fIoptional\fP) \-\- Whether clients should be able to write to the device via
the NBD connection (default false).
.IP \(bu 2
\fBbitmap\fP (\fBstring\fP, \fIoptional\fP) \-\- Also export a single dirty bitmap reachable from \fBdevice\fP,
so the NBD client can use NBD_OPT_SET_META_CONTEXT with the
metadata context name \(dqqemu:dirty\-bitmap:BITMAP\(dq to inspect the
bitmap (since 4.0).
.IP \(bu 2
The members of \fI\%BlockExportOptionsNbdBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  nbd\-server\-add  (Since: 1.3)
This command is deprecated.
.sp
Export a block node to QEMU\(aqs embedded NBD server.
.sp
The export name will be used as the id for the resulting block
export.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%NbdServerAddOptions\fP\&.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- This command is deprecated.  Use \fBblock\-export\-add\fP
instead.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
if the server is not running
.IP \(bu 2
if an export with the same name already exists
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockExportRemoveMode  (Since: 2.12)
Mode for removing a block export.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBsafe\fP \-\- Remove export if there are no existing connections, fail
otherwise.
.IP \(bu 2
\fBhard\fP \-\- Drop all connections immediately and remove export.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  nbd\-server\-remove  (Since: 2.12)
This command is deprecated.
.sp
Remove NBD export by name.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- Block export id.
.IP \(bu 2
\fBmode\fP (\fI\%BlockExportRemoveMode\fP, \fIoptional\fP) \-\- Mode of command operation.  See \fBBlockExportRemoveMode\fP
description.  Default is \(aqsafe\(aq.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- This command is deprecated.  Use \fBblock\-export\-del\fP
instead.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
if the server is not running
.IP \(bu 2
if export is not found
.IP \(bu 2
if mode is \(aqsafe\(aq and there are existing connections
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  nbd\-server\-stop  (Since: 1.3)
Stop QEMU\(aqs embedded NBD server, and unregister all devices
previously added via \fBnbd\-server\-add\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockExportType  (Since: 4.2)
An enumeration of block export types
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnbd\fP \-\- NBD export
.IP \(bu 2
\fBvhost\-user\-blk\fP \-\- vhost\-user\-blk export (since 5.2)
.IP \(bu 2
\fBfuse\fP \-\- FUSE export (since: 6.0)
.IP \(bu 2
\fBvduse\-blk\fP \-\- vduse\-blk export (since 7.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockExportOptions  (Since: 4.2)
Describes a block export, i.e. how single node should be exported on
an external interface.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%BlockExportType\fP) \-\- Block export type
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- A unique identifier for the block export (across all export
types)
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP) \-\- The node name of the block node to be exported
(since: 5.2)
.IP \(bu 2
\fBwritable\fP (\fBboolean\fP, \fIoptional\fP) \-\- True if clients should be able to write to the export
(default false)
.IP \(bu 2
\fBwritethrough\fP (\fBboolean\fP, \fIoptional\fP) \-\- If true, caches are flushed after every write request
to the export before completion is signalled.  (since: 5.2;
default: false)
.IP \(bu 2
\fBiothread\fP (\fBstring\fP, \fIoptional\fP) \-\- The name of the iothread object where the export will
run.  The default is to use the thread currently associated with
the block node.  (since: 5.2)
.IP \(bu 2
\fBfixed\-iothread\fP (\fBboolean\fP, \fIoptional\fP) \-\- True prevents the block node from being moved to
another thread while the export is active.  If true and
\fBiothread\fP is given, export creation fails if the block node
cannot be moved to the iothread.  The default is false.
(since: 5.2)
.IP \(bu 2
\fBallow\-inactive\fP (\fBboolean\fP, \fIoptional\fP) \-\- If true, the export allows the exported node to be inactive.
If it is created for an inactive block node, the node remains inactive. If
the export type doesn\(aqt support running on an inactive node, an error is
returned. If false, inactive block nodes are automatically activated before
creating the export and trying to inactivate them later fails.
(since: 10.0; default: false)
.IP \(bu 2
When \fBtype\fP is \fBnbd\fP: The members of \fI\%BlockExportOptionsNbd\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBvhost\-user\-blk\fP: The members of \fI\%BlockExportOptionsVhostUserBlk\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBfuse\fP: The members of \fI\%BlockExportOptionsFuse\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBvduse\-blk\fP: The members of \fI\%BlockExportOptionsVduseBlk\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-export\-add  (Since: 5.2)
Creates a new block export.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockExportOptions\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-export\-del  (Since: 5.2)
Request to remove a block export.  This drops the user\(aqs reference
to the export, but the export may still stay around after this
command returns until the shutdown of the export has completed.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- Block export id.
.IP \(bu 2
\fBmode\fP (\fI\%BlockExportRemoveMode\fP, \fIoptional\fP) \-\- Mode of command operation.  See \fBBlockExportRemoveMode\fP
description.  Default is \(aqsafe\(aq.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
if the export is not found
.IP \(bu 2
if \fBmode\fP is \(aqsafe\(aq and the export is still in use (e.g. by
existing client connections)
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  BLOCK_EXPORT_DELETED  (Since: 5.2)
Emitted when a block export is removed and its id can be reused.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- Block export id.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockExportInfo  (Since: 5.2)
Information about a single block export.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The unique identifier for the block export
.IP \(bu 2
\fBtype\fP (\fI\%BlockExportType\fP) \-\- The block export type
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP) \-\- The node name of the block node that is exported
.IP \(bu 2
\fBshutting\-down\fP (\fBboolean\fP) \-\- True if the export is shutting down (e.g. after a
block\-export\-del command, but before the shutdown has completed)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-block\-exports  (Since: 5.2)
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%BlockExportInfo\fP\fB]\fP \-\- A list of BlockExportInfo describing all block exports
.UNINDENT
.UNINDENT
.SH CHARACTER DEVICES
.INDENT 0.0
.TP
.B Object  ChardevInfo  (Since: 0.14)
Information about a character device.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBlabel\fP (\fBstring\fP) \-\- the label of the character device
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- the filename of the character device
.IP \(bu 2
\fBfrontend\-open\fP (\fBboolean\fP) \-\- shows whether the frontend device attached to this
backend (e.g. with the chardev=... option) is in open or closed
state (since 2.1)
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
\fBfilename\fP is encoded using the QEMU command line character
device encoding.  See the QEMU man page for details.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-chardev  (Since: 0.14)
Return information about current character devices.
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%ChardevInfo\fP\fB]\fP \-\- a list of \fBChardevInfo\fP
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-chardev\(dq }
<\- {
      \(dqreturn\(dq: [
         {
            \(dqlabel\(dq: \(dqcharchannel0\(dq,
            \(dqfilename\(dq: \(dqunix:/var/lib/libvirt/qemu/seabios.rhel6.agent,server=on\(dq,
            \(dqfrontend\-open\(dq: false
         },
         {
            \(dqlabel\(dq: \(dqcharmonitor\(dq,
            \(dqfilename\(dq: \(dqunix:/var/lib/libvirt/qemu/seabios.rhel6.monitor,server=on\(dq,
            \(dqfrontend\-open\(dq: true
         },
         {
            \(dqlabel\(dq: \(dqcharserial0\(dq,
            \(dqfilename\(dq: \(dqpty:/dev/pts/2\(dq,
            \(dqfrontend\-open\(dq: true
         }
      ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevBackendInfo  (Since: 2.0)
Information about a character device backend
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- The backend name
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-chardev\-backends  (Since: 2.0)
Return information about character device backends.
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%ChardevBackendInfo\fP\fB]\fP \-\- a list of \fBChardevBackendInfo\fP
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-chardev\-backends\(dq }
<\- {
      \(dqreturn\(dq:[
         {
            \(dqname\(dq:\(dqudp\(dq
         },
         {
            \(dqname\(dq:\(dqtcp\(dq
         },
         {
            \(dqname\(dq:\(dqunix\(dq
         },
         {
            \(dqname\(dq:\(dqspiceport\(dq
         }
      ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  DataFormat  (Since: 1.4)
An enumeration of data format.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fButf8\fP \-\- Data is a UTF\-8 string (RFC 3629)
.IP \(bu 2
\fBbase64\fP \-\- Data is Base64 encoded binary (RFC 3548)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  ringbuf\-write  (Since: 1.4)
Write to a ring buffer character device.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- the ring buffer character device name
.IP \(bu 2
\fBdata\fP (\fBstring\fP) \-\- data to write
.IP \(bu 2
\fBformat\fP (\fI\%DataFormat\fP, \fIoptional\fP) \-\- 
.sp
data encoding (default \(aqutf8\(aq).
.INDENT 2.0
.IP \(bu 2
base64: data must be base64 encoded text.  Its binary decoding
gets written.
.IP \(bu 2
utf8: data\(aqs UTF\-8 encoding is written
.IP \(bu 2
data itself is always Unicode regardless of format, like any
other string.
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqringbuf\-write\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqfoo\(dq,
                    \(dqdata\(dq: \(dqabcdefgh\(dq,
                    \(dqformat\(dq: \(dqutf8\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  ringbuf\-read  (Since: 1.4)
Read from a ring buffer character device.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- the ring buffer character device name
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- how many bytes to read at most
.IP \(bu 2
\fBformat\fP (\fI\%DataFormat\fP, \fIoptional\fP) \-\- 
.sp
data encoding (default \(aqutf8\(aq).
.INDENT 2.0
.IP \(bu 2
base64: the data read is returned in base64 encoding.
.IP \(bu 2
utf8: the data read is interpreted as UTF\-8.
Bug: can screw up when the buffer contains invalid UTF\-8
sequences, NUL characters, after the ring buffer lost data,
and when reading stops because the size limit is reached.
.IP \(bu 2
The return value is always Unicode regardless of format, like
any other string.
.UNINDENT

.UNINDENT
.TP
.B Return
\fBstring\fP \-\- data read from the device
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqringbuf\-read\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqfoo\(dq,
                    \(dqsize\(dq: 1000,
                    \(dqformat\(dq: \(dqutf8\(dq } }
<\- { \(dqreturn\(dq: \(dqabcdefgh\(dq }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevCommon  (Since: 2.6)
Configuration shared across all chardev backends
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBlogfile\fP (\fBstring\fP, \fIoptional\fP) \-\- The name of a logfile to save output
.IP \(bu 2
\fBlogappend\fP (\fBboolean\fP, \fIoptional\fP) \-\- true to append instead of truncate (default to false to
truncate)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevFile  (Since: 1.4)
Configuration info for file chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBin\fP (\fBstring\fP, \fIoptional\fP) \-\- The name of the input file
.IP \(bu 2
\fBout\fP (\fBstring\fP) \-\- The name of the output file
.IP \(bu 2
\fBappend\fP (\fBboolean\fP, \fIoptional\fP) \-\- Open the file in append mode (default false to truncate)
(Since 2.6)
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevHostdev  (Since: 1.4)
Configuration info for device and pipe chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The name of the special file for the device, i.e.
/dev/ttyS0 on Unix or COM1: on Windows
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevSocket  (Since: 1.4)
Configuration info for (stream) socket chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBaddr\fP (\fI\%SocketAddressLegacy\fP) \-\- socket address to listen on (server=true) or connect to
(server=false)
.IP \(bu 2
\fBtls\-creds\fP (\fBstring\fP, \fIoptional\fP) \-\- the ID of the TLS credentials object (since 2.6)
.IP \(bu 2
\fBtls\-authz\fP (\fBstring\fP, \fIoptional\fP) \-\- the ID of the QAuthZ authorization object against which
the client\(aqs x509 distinguished name will be validated.  This
object is only resolved at time of use, so can be deleted and
recreated on the fly while the chardev server is active.  If
missing, it will default to denying access (since 4.0)
.IP \(bu 2
\fBserver\fP (\fBboolean\fP, \fIoptional\fP) \-\- create server socket (default: true)
.IP \(bu 2
\fBwait\fP (\fBboolean\fP, \fIoptional\fP) \-\- wait for incoming connection on server sockets (default:
false).  Silently ignored with server: false.  This use is
deprecated.
.IP \(bu 2
\fBnodelay\fP (\fBboolean\fP, \fIoptional\fP) \-\- set TCP_NODELAY socket option (default: false)
.IP \(bu 2
\fBtelnet\fP (\fBboolean\fP, \fIoptional\fP) \-\- enable telnet protocol on server sockets (default: false)
.IP \(bu 2
\fBtn3270\fP (\fBboolean\fP, \fIoptional\fP) \-\- enable tn3270 protocol on server sockets (default: false)
(Since: 2.10)
.IP \(bu 2
\fBwebsocket\fP (\fBboolean\fP, \fIoptional\fP) \-\- enable websocket protocol on server sockets
(default: false) (Since: 3.1)
.IP \(bu 2
\fBreconnect\fP (\fBint\fP, \fIoptional\fP) \-\- For a client socket, if a socket is disconnected, then
attempt a reconnect after the given number of seconds.  Setting
this to zero disables this function.  The use of this member is
deprecated, use \fBreconnect\-ms\fP instead. (default: 0) (Since: 2.2)
.IP \(bu 2
\fBreconnect\-ms\fP (\fBint\fP, \fIoptional\fP) \-\- For a client socket, if a socket is disconnected,
then attempt a reconnect after the given number of milliseconds.
Setting this to zero disables this function.  This member is
mutually exclusive with \fBreconnect\fP\&.
(default: 0) (Since: 9.2)
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- Member \fBreconnect\fP is deprecated.  Use \fBreconnect\-ms\fP
instead.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevUdp  (Since: 1.5)
Configuration info for datagram socket chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBremote\fP (\fI\%SocketAddressLegacy\fP) \-\- remote address
.IP \(bu 2
\fBlocal\fP (\fI\%SocketAddressLegacy\fP, \fIoptional\fP) \-\- local address
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevMux  (Since: 1.5)
Configuration info for mux chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBchardev\fP (\fBstring\fP) \-\- name of the base chardev.
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevHub  (Since: 10.0)
Configuration info for hub chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBchardevs\fP (\fB[\fP\fBstring\fP\fB]\fP) \-\- IDs to be added to this hub (maximum 4 devices).
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevStdio  (Since: 1.5)
Configuration info for stdio chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsignal\fP (\fBboolean\fP, \fIoptional\fP) \-\- Allow signals (such as SIGINT triggered by ^C) be delivered
to qemu.  Default: true.
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevSpiceChannel  (Since: 1.5)
\fIAvailability\fP: \fBCONFIG_SPICE\fP
.sp
Configuration info for spice vm channel chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fBstring\fP) \-\- kind of channel (for example vdagent).
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevSpicePort  (Since: 1.5)
\fIAvailability\fP: \fBCONFIG_SPICE\fP
.sp
Configuration info for spice port chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfqdn\fP (\fBstring\fP) \-\- name of the channel (see docs/spice\-port\-fqdn.txt)
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevDBus  (Since: 7.0)
\fIAvailability\fP: \fBCONFIG_DBUS_DISPLAY\fP
.sp
Configuration info for DBus chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- name of the channel (following docs/spice\-port\-fqdn.txt)
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevVC  (Since: 1.5)
Configuration info for virtual console chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBwidth\fP (\fBint\fP, \fIoptional\fP) \-\- console width, in pixels
.IP \(bu 2
\fBheight\fP (\fBint\fP, \fIoptional\fP) \-\- console height, in pixels
.IP \(bu 2
\fBcols\fP (\fBint\fP, \fIoptional\fP) \-\- console width, in chars
.IP \(bu 2
\fBrows\fP (\fBint\fP, \fIoptional\fP) \-\- console height, in chars
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
The options are only effective when the VNC or SDL
graphical display backend is active.  They are ignored with the
GTK, Spice, VNC and D\-Bus display backends.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevRingbuf  (Since: 1.5)
Configuration info for ring buffer chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsize\fP (\fBint\fP, \fIoptional\fP) \-\- ring buffer size, must be power of two, default is 65536
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevQemuVDAgent  (Since: 6.1)
\fIAvailability\fP: \fBCONFIG_SPICE_PROTOCOL\fP
.sp
Configuration info for qemu vdagent implementation.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmouse\fP (\fBboolean\fP, \fIoptional\fP) \-\- enable/disable mouse, default is enabled.
.IP \(bu 2
\fBclipboard\fP (\fBboolean\fP, \fIoptional\fP) \-\- enable/disable clipboard, default is disabled.
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevPty  (Since: 9.2)
Configuration info for pty implementation.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP, \fIoptional\fP) \-\- optional path to create a symbolic link that points to the
allocated PTY
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  ChardevBackendKind  (Since: 1.4)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBfile\fP \-\- regular files
.IP \(bu 2
\fBserial\fP \-\- serial host device
.IP \(bu 2
\fBparallel\fP \-\- parallel host device
.IP \(bu 2
\fBpipe\fP \-\- pipes (since 1.5)
.IP \(bu 2
\fBsocket\fP \-\- stream socket
.IP \(bu 2
\fBudp\fP \-\- datagram socket (since 1.5)
.IP \(bu 2
\fBpty\fP \-\- pseudo\-terminal
.IP \(bu 2
\fBnull\fP \-\- provides no input, throws away output
.IP \(bu 2
\fBmux\fP \-\- (since 1.5)
.IP \(bu 2
\fBhub\fP \-\- (since 10.0)
.IP \(bu 2
\fBmsmouse\fP \-\- emulated Microsoft serial mouse (since 1.5)
.IP \(bu 2
\fBwctablet\fP \-\- emulated Wacom Penpartner serial tablet (since 2.9)
.IP \(bu 2
\fBbraille\fP \-\- Baum Braille device (since 1.5)
.IP \(bu 2
\fBtestdev\fP \-\- device for test\-suite control (since 2.2)
.IP \(bu 2
\fBstdio\fP \-\- standard I/O (since 1.5)
.IP \(bu 2
\fBconsole\fP \-\- Windows console (since 1.5)
.IP \(bu 2
\fBspicevmc\fP \-\- spice vm channel (since 1.5)
.IP \(bu 2
\fBspiceport\fP \-\- Spice port channel (since 1.5)
.IP \(bu 2
\fBqemu\-vdagent\fP \-\- Spice vdagent (since 6.1)
.IP \(bu 2
\fBdbus\fP \-\- D\-Bus channel (since 7.0)
.IP \(bu 2
\fBvc\fP \-\- virtual console (since 1.5)
.IP \(bu 2
\fBringbuf\fP \-\- memory ring buffer (since 1.6)
.IP \(bu 2
\fBmemory\fP \-\- synonym for \fBringbuf\fP (since 1.5)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- Member \fBmemory\fP is deprecated.  Use \fBringbuf\fP instead.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevFileWrapper  (Since: 1.4)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevFile\fP) \-\- Configuration info for file chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevHostdevWrapper  (Since: 1.4)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevHostdev\fP) \-\- Configuration info for device and pipe chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevSocketWrapper  (Since: 1.4)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevSocket\fP) \-\- Configuration info for (stream) socket chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevUdpWrapper  (Since: 1.5)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevUdp\fP) \-\- Configuration info for datagram socket chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevCommonWrapper  (Since: 2.6)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevCommon\fP) \-\- Configuration shared across all chardev backends
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevMuxWrapper  (Since: 1.5)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevMux\fP) \-\- Configuration info for mux chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevHubWrapper  (Since: 10.0)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevHub\fP) \-\- Configuration info for hub chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevStdioWrapper  (Since: 1.5)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevStdio\fP) \-\- Configuration info for stdio chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevSpiceChannelWrapper  (Since: 1.5)
\fIAvailability\fP: \fBCONFIG_SPICE\fP.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevSpiceChannel\fP) \-\- Configuration info for spice vm channel chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevSpicePortWrapper  (Since: 1.5)
\fIAvailability\fP: \fBCONFIG_SPICE\fP.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevSpicePort\fP) \-\- Configuration info for spice port chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevQemuVDAgentWrapper  (Since: 6.1)
\fIAvailability\fP: \fBCONFIG_SPICE_PROTOCOL\fP.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevQemuVDAgent\fP) \-\- Configuration info for qemu vdagent implementation
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevDBusWrapper  (Since: 7.0)
\fIAvailability\fP: \fBCONFIG_DBUS_DISPLAY\fP.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevDBus\fP) \-\- Configuration info for DBus chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevVCWrapper  (Since: 1.5)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevVC\fP) \-\- Configuration info for virtual console chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevRingbufWrapper  (Since: 1.5)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevRingbuf\fP) \-\- Configuration info for ring buffer chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevPtyWrapper  (Since: 9.2)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevPty\fP) \-\- Configuration info for pty chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevBackend  (Since: 1.4)
Configuration info for the new chardev backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%ChardevBackendKind\fP) \-\- backend type
.IP \(bu 2
When \fBtype\fP is \fBfile\fP: The members of \fI\%ChardevFileWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBserial\fP: The members of \fI\%ChardevHostdevWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBparallel\fP: The members of \fI\%ChardevHostdevWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBpipe\fP: The members of \fI\%ChardevHostdevWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBsocket\fP: The members of \fI\%ChardevSocketWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBudp\fP: The members of \fI\%ChardevUdpWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBpty\fP: The members of \fI\%ChardevPtyWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBnull\fP: The members of \fI\%ChardevCommonWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBmux\fP: The members of \fI\%ChardevMuxWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBhub\fP: The members of \fI\%ChardevHubWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBmsmouse\fP: The members of \fI\%ChardevCommonWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBwctablet\fP: The members of \fI\%ChardevCommonWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBbraille\fP: The members of \fI\%ChardevCommonWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBtestdev\fP: The members of \fI\%ChardevCommonWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBstdio\fP: The members of \fI\%ChardevStdioWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBconsole\fP: The members of \fI\%ChardevCommonWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBspicevmc\fP: The members of \fI\%ChardevSpiceChannelWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBspiceport\fP: The members of \fI\%ChardevSpicePortWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBqemu\-vdagent\fP: The members of \fI\%ChardevQemuVDAgentWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBdbus\fP: The members of \fI\%ChardevDBusWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBvc\fP: The members of \fI\%ChardevVCWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBringbuf\fP: The members of \fI\%ChardevRingbufWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBmemory\fP: The members of \fI\%ChardevRingbufWrapper\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevReturn  (Since: 1.4)
Return info about the chardev backend just created.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpty\fP (\fBstring\fP, \fIoptional\fP) \-\- name of the slave pseudoterminal device, present if and only
if a chardev of type \(aqpty\(aq was created
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  chardev\-add  (Since: 1.4)
Add a character device backend
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- the chardev\(aqs ID, must be unique
.IP \(bu 2
\fBbackend\fP (\fI\%ChardevBackend\fP) \-\- backend type and parameters
.UNINDENT
.TP
.B Return
\fI\%ChardevReturn\fP \-\- ChardevReturn.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq : \(dqchardev\-add\(dq,
     \(dqarguments\(dq : { \(dqid\(dq : \(dqfoo\(dq,
                     \(dqbackend\(dq : { \(dqtype\(dq : \(dqnull\(dq, \(dqdata\(dq : {} } } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq : \(dqchardev\-add\(dq,
     \(dqarguments\(dq : { \(dqid\(dq : \(dqbar\(dq,
                     \(dqbackend\(dq : { \(dqtype\(dq : \(dqfile\(dq,
                                   \(dqdata\(dq : { \(dqout\(dq : \(dq/tmp/bar.log\(dq } } } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq : \(dqchardev\-add\(dq,
     \(dqarguments\(dq : { \(dqid\(dq : \(dqbaz\(dq,
                     \(dqbackend\(dq : { \(dqtype\(dq : \(dqpty\(dq, \(dqdata\(dq : {} } } }
<\- { \(dqreturn\(dq: { \(dqpty\(dq : \(dq/dev/pty/42\(dq } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  chardev\-change  (Since: 2.10)
Change a character device backend
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- the chardev\(aqs ID, must exist
.IP \(bu 2
\fBbackend\fP (\fI\%ChardevBackend\fP) \-\- new backend type and parameters
.UNINDENT
.TP
.B Return
\fI\%ChardevReturn\fP \-\- ChardevReturn.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq : \(dqchardev\-change\(dq,
     \(dqarguments\(dq : { \(dqid\(dq : \(dqbaz\(dq,
                     \(dqbackend\(dq : { \(dqtype\(dq : \(dqpty\(dq, \(dqdata\(dq : {} } } }
<\- { \(dqreturn\(dq: { \(dqpty\(dq : \(dq/dev/pty/42\(dq } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> {\(dqexecute\(dq : \(dqchardev\-change\(dq,
    \(dqarguments\(dq : {
        \(dqid\(dq : \(dqcharchannel2\(dq,
        \(dqbackend\(dq : {
            \(dqtype\(dq : \(dqsocket\(dq,
            \(dqdata\(dq : {
                \(dqaddr\(dq : {
                    \(dqtype\(dq : \(dqunix\(dq ,
                    \(dqdata\(dq : {
                        \(dqpath\(dq : \(dq/tmp/charchannel2.socket\(dq
                    }
                 },
                 \(dqserver\(dq : true,
                 \(dqwait\(dq : false }}}}
<\- {\(dqreturn\(dq: {}}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  chardev\-remove  (Since: 1.4)
Remove a character device backend
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- the chardev\(aqs ID, must exist and not be in use
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqchardev\-remove\(dq, \(dqarguments\(dq: { \(dqid\(dq : \(dqfoo\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  chardev\-send\-break  (Since: 2.10)
Send a break to a character device
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- the chardev\(aqs ID, must exist
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqchardev\-send\-break\(dq, \(dqarguments\(dq: { \(dqid\(dq : \(dqfoo\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  VSERPORT_CHANGE  (Since: 2.1)
Emitted when the guest opens or closes a virtio\-serial port.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- device identifier of the virtio\-serial port
.IP \(bu 2
\fBopen\fP (\fBboolean\fP) \-\- true if the guest has opened the virtio\-serial port
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
This event is rate\-limited.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqVSERPORT_CHANGE\(dq,
     \(dqdata\(dq: { \(dqid\(dq: \(dqchannel0\(dq, \(dqopen\(dq: true },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1401385907, \(dqmicroseconds\(dq: 422329 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH USER AUTHORIZATION
.INDENT 0.0
.TP
.B Enum  QAuthZListPolicy  (Since: 4.0)
The authorization policy result
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBdeny\fP \-\- deny access
.IP \(bu 2
\fBallow\fP \-\- allow access
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QAuthZListFormat  (Since: 4.0)
The authorization policy match format
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBexact\fP \-\- an exact string match
.IP \(bu 2
\fBglob\fP \-\- string with ? and * shell wildcard support
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QAuthZListRule  (Since: 4.0)
A single authorization rule.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmatch\fP (\fBstring\fP) \-\- a string or glob to match against a user identity
.IP \(bu 2
\fBpolicy\fP (\fI\%QAuthZListPolicy\fP) \-\- the result to return if \fBmatch\fP evaluates to true
.IP \(bu 2
\fBformat\fP (\fI\%QAuthZListFormat\fP, \fIoptional\fP) \-\- the format of the \fBmatch\fP rule (default \(aqexact\(aq)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AuthZListProperties  (Since: 4.0)
Properties for authz\-list objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpolicy\fP (\fI\%QAuthZListPolicy\fP, \fIoptional\fP) \-\- Default policy to apply when no rule matches (default:
deny)
.IP \(bu 2
\fBrules\fP (\fB[\fP\fI\%QAuthZListRule\fP\fB]\fP, \fIoptional\fP) \-\- Authorization rules based on matching user
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AuthZListFileProperties  (Since: 4.0)
Properties for authz\-listfile objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- File name to load the configuration from.  The file must
contain valid JSON for AuthZListProperties.
.IP \(bu 2
\fBrefresh\fP (\fBboolean\fP, \fIoptional\fP) \-\- If true, inotify is used to monitor the file,
automatically reloading changes.  If an error occurs during
reloading, all authorizations will fail until the file is next
successfully loaded.  (default: true if the binary was built
with CONFIG_INOTIFY1, false otherwise)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AuthZPAMProperties  (Since: 4.0)
Properties for authz\-pam objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBservice\fP (\fBstring\fP) \-\- PAM service name to use for authorization
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AuthZSimpleProperties  (Since: 4.0)
Properties for authz\-simple objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBidentity\fP (\fBstring\fP) \-\- Identifies the allowed user.  Its format depends on the
network service that authorization object is associated with.
For authorizing based on TLS x509 certificates, the identity
must be the x509 distinguished name.
.UNINDENT
.UNINDENT
.UNINDENT
.SH TRANSACTIONS
.INDENT 0.0
.TP
.B Object  Abort  (Since: 1.6)
This action can be used to test transaction failure.
.UNINDENT
.INDENT 0.0
.TP
.B Enum  ActionCompletionMode  (Since: 2.5)
An enumeration of Transactional completion modes.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBindividual\fP \-\- Do not attempt to cancel any other Actions if any
Actions fail after the Transaction request succeeds.  All
Actions that can complete successfully will do so without
waiting on others.  This is the default.
.IP \(bu 2
\fBgrouped\fP \-\- If any Action fails after the Transaction succeeds, cancel
all Actions.  Actions do not complete until all Actions are
ready to complete.  May be rejected by Actions that do not
support this completion mode.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  TransactionActionKind  (Since: 1.1)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBabort\fP \-\- Since 1.6
.IP \(bu 2
\fBblock\-dirty\-bitmap\-add\fP \-\- Since 2.5
.IP \(bu 2
\fBblock\-dirty\-bitmap\-remove\fP \-\- Since 4.2
.IP \(bu 2
\fBblock\-dirty\-bitmap\-clear\fP \-\- Since 2.5
.IP \(bu 2
\fBblock\-dirty\-bitmap\-enable\fP \-\- Since 4.0
.IP \(bu 2
\fBblock\-dirty\-bitmap\-disable\fP \-\- Since 4.0
.IP \(bu 2
\fBblock\-dirty\-bitmap\-merge\fP \-\- Since 4.0
.IP \(bu 2
\fBblockdev\-backup\fP \-\- Since 2.3
.IP \(bu 2
\fBblockdev\-snapshot\fP \-\- Since 2.5
.IP \(bu 2
\fBblockdev\-snapshot\-internal\-sync\fP \-\- Since 1.7
.IP \(bu 2
\fBblockdev\-snapshot\-sync\fP \-\- since 1.1
.IP \(bu 2
\fBdrive\-backup\fP \-\- Since 1.6
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- Member \fBdrive\-backup\fP is deprecated.  Use member
\fBblockdev\-backup\fP instead.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AbortWrapper  (Since: 1.6)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%Abort\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockDirtyBitmapAddWrapper  (Since: 2.5)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%BlockDirtyBitmapAdd\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockDirtyBitmapWrapper  (Since: 2.5)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%BlockDirtyBitmap\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockDirtyBitmapMergeWrapper  (Since: 4.0)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%BlockDirtyBitmapMerge\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevBackupWrapper  (Since: 2.3)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%BlockdevBackup\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevSnapshotWrapper  (Since: 2.5)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%BlockdevSnapshot\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevSnapshotInternalWrapper  (Since: 1.7)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%BlockdevSnapshotInternal\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevSnapshotSyncWrapper  (Since: 1.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%BlockdevSnapshotSync\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DriveBackupWrapper  (Since: 1.6)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%DriveBackup\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  TransactionAction  (Since: 1.1)
A discriminated record of operations that can be performed with
\fBtransaction\fP\&.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%TransactionActionKind\fP) \-\- the operation to be performed
.IP \(bu 2
When \fBtype\fP is \fBabort\fP: The members of \fI\%AbortWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBblock\-dirty\-bitmap\-add\fP: The members of \fI\%BlockDirtyBitmapAddWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBblock\-dirty\-bitmap\-remove\fP: The members of \fI\%BlockDirtyBitmapWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBblock\-dirty\-bitmap\-clear\fP: The members of \fI\%BlockDirtyBitmapWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBblock\-dirty\-bitmap\-enable\fP: The members of \fI\%BlockDirtyBitmapWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBblock\-dirty\-bitmap\-disable\fP: The members of \fI\%BlockDirtyBitmapWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBblock\-dirty\-bitmap\-merge\fP: The members of \fI\%BlockDirtyBitmapMergeWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBblockdev\-backup\fP: The members of \fI\%BlockdevBackupWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBblockdev\-snapshot\fP: The members of \fI\%BlockdevSnapshotWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBblockdev\-snapshot\-internal\-sync\fP: The members of \fI\%BlockdevSnapshotInternalWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBblockdev\-snapshot\-sync\fP: The members of \fI\%BlockdevSnapshotSyncWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBdrive\-backup\fP: The members of \fI\%DriveBackupWrapper\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  TransactionProperties  (Since: 2.5)
Optional arguments to modify the behavior of a Transaction.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcompletion\-mode\fP (\fI\%ActionCompletionMode\fP, \fIoptional\fP) \-\- Controls how jobs launched asynchronously by
Actions will complete or fail as a group.  See
\fBActionCompletionMode\fP for details.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  transaction  (Since: 1.1)
Executes a number of transactionable QMP commands atomically.  If
any operation fails, then the entire set of actions will be
abandoned and the appropriate error returned.
.sp
For external snapshots, the dictionary contains the device, the file
to use for the new snapshot, and the format.  The default format, if
not specified, is qcow2.
.sp
Each new snapshot defaults to being created by QEMU (wiping any
contents if the file already exists), but it is also possible to
reuse an externally\-created file.  In the latter case, you should
ensure that the new image file has the same contents as the current
one; QEMU cannot perform any meaningful check.  Typically this is
achieved by using the current image file as the backing file for the
new image.
.sp
On failure, the original disks pre\-snapshot attempt will be used.
.sp
For internal snapshots, the dictionary contains the device and the
snapshot\(aqs name.  If an internal snapshot matching name already
exists, the request will be rejected.  Only some image formats
support it, for example, qcow2, and rbd,
.sp
On failure, qemu will try delete the newly created internal snapshot
in the transaction.  When an I/O error occurs during deletion, the
user needs to fix it later with qemu\-img or other command.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBactions\fP (\fB[\fP\fI\%TransactionAction\fP\fB]\fP) \-\- List of \fBTransactionAction\fP; information needed for the
respective operations.
.IP \(bu 2
\fBproperties\fP (\fI\%TransactionProperties\fP, \fIoptional\fP) \-\- structure of additional options to control the
execution of the transaction.  See \fBTransactionProperties\fP for
additional detail.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
Any errors from commands in the transaction
.UNINDENT

.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
The transaction aborts on the first failure.  Therefore,
there will be information on only one failed operation returned
in an error condition, and subsequent actions will not have been
attempted.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqtransaction\(dq,
     \(dqarguments\(dq: { \(dqactions\(dq: [
         { \(dqtype\(dq: \(dqblockdev\-snapshot\-sync\(dq, \(dqdata\(dq : { \(dqdevice\(dq: \(dqide\-hd0\(dq,
                                     \(dqsnapshot\-file\(dq: \(dq/some/place/my\-image\(dq,
                                     \(dqformat\(dq: \(dqqcow2\(dq } },
         { \(dqtype\(dq: \(dqblockdev\-snapshot\-sync\(dq, \(dqdata\(dq : { \(dqnode\-name\(dq: \(dqmyfile\(dq,
                                     \(dqsnapshot\-file\(dq: \(dq/some/place/my\-image2\(dq,
                                     \(dqsnapshot\-node\-name\(dq: \(dqnode3432\(dq,
                                     \(dqmode\(dq: \(dqexisting\(dq,
                                     \(dqformat\(dq: \(dqqcow2\(dq } },
         { \(dqtype\(dq: \(dqblockdev\-snapshot\-sync\(dq, \(dqdata\(dq : { \(dqdevice\(dq: \(dqide\-hd1\(dq,
                                     \(dqsnapshot\-file\(dq: \(dq/some/place/my\-image2\(dq,
                                     \(dqmode\(dq: \(dqexisting\(dq,
                                     \(dqformat\(dq: \(dqqcow2\(dq } },
         { \(dqtype\(dq: \(dqblockdev\-snapshot\-internal\-sync\(dq, \(dqdata\(dq : {
                                     \(dqdevice\(dq: \(dqide\-hd2\(dq,
                                     \(dqname\(dq: \(dqsnapshot0\(dq } } ] } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH QMP MONITOR CONTROL
.INDENT 0.0
.TP
.B Command  qmp_capabilities  (Since: 0.13)
Enable QMP capabilities.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBenable\fP (\fB[\fP\fI\%QMPCapability\fP\fB]\fP, \fIoptional\fP) \-\- An optional list of QMPCapability values to enable.  The
client must not enable any capability that is not mentioned in
the QMP greeting message.  If the field is not provided, it
means no QMP capabilities will be enabled.  (since 2.12)
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqqmp_capabilities\(dq,
     \(dqarguments\(dq: { \(dqenable\(dq: [ \(dqoob\(dq ] } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
This command is valid exactly when first connecting: it
must be issued before any other command will be accepted, and
will fail once the monitor is accepting other commands.  (see
/interop/qmp\-spec)
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
The QMP client needs to explicitly enable QMP
capabilities, otherwise all the QMP capabilities will be turned
off by default.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QMPCapability  (Since: 2.12)
Enumeration of capabilities to be advertised during initial client
connection, used for agreeing on particular QMP extension behaviors.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBoob\fP \-\- QMP ability to support out\-of\-band requests.  (Please refer to
qmp\-spec.rst for more information on OOB)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VersionTriple  (Since: 2.4)
A three\-part version number.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmajor\fP (\fBint\fP) \-\- The major version number.
.IP \(bu 2
\fBminor\fP (\fBint\fP) \-\- The minor version number.
.IP \(bu 2
\fBmicro\fP (\fBint\fP) \-\- The micro version number.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VersionInfo  (Since: 0.14)
A description of QEMU\(aqs version.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBqemu\fP (\fI\%VersionTriple\fP) \-\- The version of QEMU.  By current convention, a micro version
of 50 signifies a development branch.  A micro version greater
than or equal to 90 signifies a release candidate for the next
minor version.  A micro version of less than 50 signifies a
stable release.
.IP \(bu 2
\fBpackage\fP (\fBstring\fP) \-\- QEMU will always set this field to an empty string.
Downstream versions of QEMU should set this to a non\-empty
string.  The exact format depends on the downstream however it
highly recommended that a unique name is used.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-version  (Since: 0.14)
Return the current version of QEMU.
.INDENT 7.0
.TP
.B Return
\fI\%VersionInfo\fP \-\- A \fBVersionInfo\fP object describing the current version of
QEMU.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-version\(dq }
<\- {
      \(dqreturn\(dq:{
         \(dqqemu\(dq:{
            \(dqmajor\(dq:0,
            \(dqminor\(dq:11,
            \(dqmicro\(dq:5
         },
         \(dqpackage\(dq:\(dq\(dq
      }
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CommandInfo  (Since: 0.14)
Information about a QMP command
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- The command name
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-commands  (Since: 0.14)
Return a list of supported QMP commands by this server
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%CommandInfo\fP\fB]\fP \-\- A list of \fBCommandInfo\fP for all supported commands
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-commands\(dq }
<\- {
     \(dqreturn\(dq:[
        {
           \(dqname\(dq:\(dqquery\-balloon\(dq
        },
        {
           \(dqname\(dq:\(dqsystem_powerdown\(dq
        },
        ...
     ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
This example has been shortened as the real response is too long.
.UNINDENT
.INDENT 0.0
.TP
.B Command  quit  (Since: 0.14)
This command will cause the QEMU process to exit gracefully.  While
every attempt is made to send the QMP response before terminating,
this is not guaranteed.  When using this interface, a premature EOF
would not be unexpected.
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquit\(dq }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  MonitorMode  (Since: 5.0)
An enumeration of monitor modes.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBreadline\fP \-\- HMP monitor (human\-oriented command line interface)
.IP \(bu 2
\fBcontrol\fP \-\- QMP monitor (JSON\-based machine interface)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MonitorOptions  (Since: 5.0)
Options to be used for adding a new monitor.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP, \fIoptional\fP) \-\- Name of the monitor
.IP \(bu 2
\fBmode\fP (\fI\%MonitorMode\fP, \fIoptional\fP) \-\- Selects the monitor mode (default: readline in the system
emulator, control in qemu\-storage\-daemon)
.IP \(bu 2
\fBpretty\fP (\fBboolean\fP, \fIoptional\fP) \-\- Enables pretty printing (QMP only)
.IP \(bu 2
\fBchardev\fP (\fBstring\fP) \-\- Name of a character device to expose the monitor on
.UNINDENT
.UNINDENT
.UNINDENT
.SH QMP INTROSPECTION
.INDENT 0.0
.TP
.B Command  query\-qmp\-schema  (Since: 2.5)
Command query\-qmp\-schema exposes the QMP wire ABI as an array of
SchemaInfo.  This lets QMP clients figure out what commands and
events are available in this QEMU, and their parameters and results.
.sp
However, the SchemaInfo can\(aqt reflect all the rules and restrictions
that apply to QMP.  It\(aqs interface introspection (figuring out
what\(aqs there), not interface specification.  The specification is in
the QAPI schema.
.sp
Furthermore, while we strive to keep the QMP wire format
backwards\-compatible across qemu versions, the introspection output
is not guaranteed to have the same stability.  For example, one
version of qemu may list an object member as an optional
non\-variant, while another lists the same member only through the
object\(aqs variants; or the type of a member may change from a generic
string into a specific enum or from one specific type into an
alternate that includes the original type alongside something else.
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%SchemaInfo\fP\fB]\fP \-\- 
.sp
array of \fBSchemaInfo\fP, where each element describes an
entity in the ABI: command, event, type, ...
.sp
The order of the various SchemaInfo is unspecified; however, all
names are guaranteed to be unique (no name will be duplicated
with different meta\-types).

.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
The QAPI schema is also used to help define \fIinternal\fP
interfaces, by defining QAPI types.  These are not part of the
QMP wire ABI, and therefore not returned by this command.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  SchemaMetaType  (Since: 2.5)
This is a \fBSchemaInfo\fP\(aqs meta type, i.e. the kind of entity it
describes.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBbuiltin\fP \-\- a predefined type such as \(aqint\(aq or \(aqbool\(aq.
.IP \(bu 2
\fBenum\fP \-\- an enumeration type
.IP \(bu 2
\fBarray\fP \-\- an array type
.IP \(bu 2
\fBobject\fP \-\- an object type (struct or union)
.IP \(bu 2
\fBalternate\fP \-\- an alternate type
.IP \(bu 2
\fBcommand\fP \-\- a QMP command
.IP \(bu 2
\fBevent\fP \-\- a QMP event
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfo  (Since: 2.5)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the entity\(aqs name, inherited from \fBbase\fP\&.  The SchemaInfo is
always referenced by this name.  Commands and events have the
name defined in the QAPI schema.  Unlike command and event
names, type names are not part of the wire ABI.  Consequently,
type names are meaningless strings here, although they are still
guaranteed unique regardless of \fBmeta\-type\fP\&.
.IP \(bu 2
\fBmeta\-type\fP (\fI\%SchemaMetaType\fP) \-\- the entity\(aqs meta type, inherited from \fBbase\fP\&.
.IP \(bu 2
\fBfeatures\fP (\fB[\fP\fBstring\fP\fB]\fP, \fIoptional\fP) \-\- names of features associated with the entity, in no
particular order.  (since 4.1 for object types, 4.2 for
commands, 5.0 for the rest)
.IP \(bu 2
When \fBmeta\-type\fP is \fBbuiltin\fP: The members of \fI\%SchemaInfoBuiltin\fP\&.
.IP \(bu 2
When \fBmeta\-type\fP is \fBenum\fP: The members of \fI\%SchemaInfoEnum\fP\&.
.IP \(bu 2
When \fBmeta\-type\fP is \fBarray\fP: The members of \fI\%SchemaInfoArray\fP\&.
.IP \(bu 2
When \fBmeta\-type\fP is \fBobject\fP: The members of \fI\%SchemaInfoObject\fP\&.
.IP \(bu 2
When \fBmeta\-type\fP is \fBalternate\fP: The members of \fI\%SchemaInfoAlternate\fP\&.
.IP \(bu 2
When \fBmeta\-type\fP is \fBcommand\fP: The members of \fI\%SchemaInfoCommand\fP\&.
.IP \(bu 2
When \fBmeta\-type\fP is \fBevent\fP: The members of \fI\%SchemaInfoEvent\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfoBuiltin  (Since: 2.5)
Additional SchemaInfo members for meta\-type \(aqbuiltin\(aq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBjson\-type\fP (\fI\%JSONType\fP) \-\- the JSON type used for this type on the wire.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  JSONType  (Since: 2.5)
The four primitive and two structured types according to RFC 8259
section 1, plus \(aqint\(aq (split off \(aqnumber\(aq), plus the obvious top
type \(aqvalue\(aq.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBstring\fP \-\- JSON string
.IP \(bu 2
\fBnumber\fP \-\- JSON number
.IP \(bu 2
\fBint\fP \-\- JSON number that is an integer
.IP \(bu 2
\fBboolean\fP \-\- literal \fBfalse\fP or \fBtrue\fP
.IP \(bu 2
\fBnull\fP \-\- literal \fBnull\fP
.IP \(bu 2
\fBobject\fP \-\- JSON object
.IP \(bu 2
\fBarray\fP \-\- JSON array
.IP \(bu 2
\fBvalue\fP \-\- any JSON value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfoEnum  (Since: 2.5)
Additional SchemaInfo members for meta\-type \(aqenum\(aq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmembers\fP (\fB[\fP\fI\%SchemaInfoEnumMember\fP\fB]\fP) \-\- the enum type\(aqs members, in no particular order (since
6.2).
.IP \(bu 2
\fBvalues\fP (\fB[\fP\fBstring\fP\fB]\fP) \-\- the enumeration type\(aqs member names, in no particular
order.  Redundant with \fBmembers\fP\&.  Just for backward
compatibility.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- Member \fBvalues\fP is deprecated.  Use \fBmembers\fP instead.
.UNINDENT
.UNINDENT
.sp
Values of this type are JSON string on the wire.
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfoEnumMember  (Since: 6.2)
An object member.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the member\(aqs name, as defined in the QAPI schema.
.IP \(bu 2
\fBfeatures\fP (\fB[\fP\fBstring\fP\fB]\fP, \fIoptional\fP) \-\- names of features associated with the member, in no
particular order.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfoArray  (Since: 2.5)
Additional SchemaInfo members for meta\-type \(aqarray\(aq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBelement\-type\fP (\fBstring\fP) \-\- the array type\(aqs element type.
.UNINDENT
.UNINDENT
.sp
Values of this type are JSON array on the wire.
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfoObject  (Since: 2.5)
Additional SchemaInfo members for meta\-type \(aqobject\(aq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmembers\fP (\fB[\fP\fI\%SchemaInfoObjectMember\fP\fB]\fP) \-\- the object type\(aqs (non\-variant) members, in no particular
order.
.IP \(bu 2
\fBtag\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of the member serving as type tag.  An element of
\fBmembers\fP with this name must exist.
.IP \(bu 2
\fBvariants\fP (\fB[\fP\fI\%SchemaInfoObjectVariant\fP\fB]\fP, \fIoptional\fP) \-\- variant members, i.e. additional members that depend on
the type tag\(aqs value.  Present exactly when \fBtag\fP is present.
The variants are in no particular order, and may even differ
from the order of the values of the enum type of the \fBtag\fP\&.
.UNINDENT
.UNINDENT
.sp
Values of this type are JSON object on the wire.
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfoObjectMember  (Since: 2.5)
An object member.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the member\(aqs name, as defined in the QAPI schema.
.IP \(bu 2
\fBtype\fP (\fBstring\fP) \-\- the name of the member\(aqs type.
.IP \(bu 2
\fBdefault\fP (\fBvalue\fP, \fIoptional\fP) \-\- default when used as command parameter.  If absent, the
parameter is mandatory.  If present, the value must be null.
The parameter is optional, and behavior when it\(aqs missing is not
specified here.  Future extension: if present and non\-null, the
parameter is optional, and defaults to this value.
.IP \(bu 2
\fBfeatures\fP (\fB[\fP\fBstring\fP\fB]\fP, \fIoptional\fP) \-\- names of features associated with the member, in no
particular order.  (since 5.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfoObjectVariant  (Since: 2.5)
The variant members for a value of the type tag.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcase\fP (\fBstring\fP) \-\- a value of the type tag.
.IP \(bu 2
\fBtype\fP (\fBstring\fP) \-\- the name of the object type that provides the variant members
when the type tag has value \fBcase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfoAlternate  (Since: 2.5)
Additional SchemaInfo members for meta\-type \(aqalternate\(aq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmembers\fP (\fB[\fP\fI\%SchemaInfoAlternateMember\fP\fB]\fP) \-\- the alternate type\(aqs members, in no particular order.  The
members\(aq wire encoding is distinct, see
/devel/qapi\-code\-gen section Alternate types.
.UNINDENT
.UNINDENT
.sp
On the wire, this can be any of the members.
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfoAlternateMember  (Since: 2.5)
An alternate member.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fBstring\fP) \-\- the name of the member\(aqs type.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfoCommand  (Since: 2.5)
Additional SchemaInfo members for meta\-type \(aqcommand\(aq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBarg\-type\fP (\fBstring\fP) \-\- the name of the object type that provides the command\(aqs
parameters.
.IP \(bu 2
\fBret\-type\fP (\fBstring\fP) \-\- the name of the command\(aqs result type.
.IP \(bu 2
\fBallow\-oob\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether the command allows out\-of\-band execution,
defaults to false (Since: 2.12)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfoEvent  (Since: 2.5)
Additional SchemaInfo members for meta\-type \(aqevent\(aq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBarg\-type\fP (\fBstring\fP) \-\- the name of the object type that provides the event\(aqs
parameters.
.UNINDENT
.UNINDENT
.UNINDENT
.SH QEMU OBJECT MODEL (QOM)
.INDENT 0.0
.TP
.B Object  ObjectPropertyInfo  (Since: 1.2)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the name of the property
.IP \(bu 2
\fBtype\fP (\fBstring\fP) \-\- 
.sp
the type of the property.  This will typically come in one of
four forms:
.INDENT 2.0
.IP 1. 3
A primitive type such as \(aqu8\(aq, \(aqu16\(aq, \(aqbool\(aq, \(aqstr\(aq, or
\(aqdouble\(aq.  These types are mapped to the appropriate JSON
type.
.IP 2. 3
A child type in the form \(aqchild<subtype>\(aq where subtype is a
qdev device type name.  Child properties create the
composition tree.
.IP 3. 3
A link type in the form \(aqlink<subtype>\(aq where subtype is a
qdev device type name.  Link properties form the device model
graph.
.UNINDENT

.IP \(bu 2
\fBdescription\fP (\fBstring\fP, \fIoptional\fP) \-\- if specified, the description of the property.
.IP \(bu 2
\fBdefault\-value\fP (\fBvalue\fP, \fIoptional\fP) \-\- the default value, if any (since 5.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  qom\-list  (Since: 1.2)
This command will list any properties of a object given a path in
the object model.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- the path within the object model.  See \fBqom\-get\fP for a
description of this parameter.
.UNINDENT
.TP
.B Return
\fB[\fP\fI\%ObjectPropertyInfo\fP\fB]\fP \-\- a list of \fBObjectPropertyInfo\fP that describe the properties
of the object.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqqom\-list\(dq,
     \(dqarguments\(dq: { \(dqpath\(dq: \(dq/chardevs\(dq } }
<\- { \(dqreturn\(dq: [ { \(dqname\(dq: \(dqtype\(dq, \(dqtype\(dq: \(dqstring\(dq },
                 { \(dqname\(dq: \(dqparallel0\(dq, \(dqtype\(dq: \(dqchild<chardev\-vc>\(dq },
                 { \(dqname\(dq: \(dqserial0\(dq, \(dqtype\(dq: \(dqchild<chardev\-vc>\(dq },
                 { \(dqname\(dq: \(dqmon0\(dq, \(dqtype\(dq: \(dqchild<chardev\-stdio>\(dq } ] }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  qom\-get  (Since: 1.2)
This command will get a property from a object model path and return
the value.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- 
.sp
The path within the object model.  There are two forms of
supported paths\-\-absolute and partial paths.
.sp
Absolute paths are derived from the root object and can follow
child<> or link<> properties.  Since they can follow link<>
properties, they can be arbitrarily long.  Absolute paths look
like absolute filenames and are prefixed  with a leading slash.
.sp
Partial paths look like relative filenames.  They do not begin
with a prefix.  The matching rules for partial paths are subtle
but designed to make specifying objects easy.  At each level of
the composition tree, the partial path is matched as an absolute
path.  The first match is not returned.  At least two matches
are searched for.  A successful result is only returned if only
one match is found.  If more than one match is found, a flag is
return to indicate that the match was ambiguous.

.IP \(bu 2
\fBproperty\fP (\fBstring\fP) \-\- The property name to read
.UNINDENT
.TP
.B Return
\fBvalue\fP \-\- The property value.  The type depends on the property type.
child<> and link<> properties are returned as #str pathnames.
All integer property types (u8, u16, etc) are returned as #int.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Use absolute path"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqqom\-get\(dq,
      \(dqarguments\(dq: { \(dqpath\(dq: \(dq/machine/unattached/device[0]\(dq,
                     \(dqproperty\(dq: \(dqhotplugged\(dq } }
 <\- { \(dqreturn\(dq: false }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Use partial path"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqqom\-get\(dq,
      \(dqarguments\(dq: { \(dqpath\(dq: \(dqunattached/sysbus\(dq,
                     \(dqproperty\(dq: \(dqtype\(dq } }
 <\- { \(dqreturn\(dq: \(dqSystem\(dq }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  qom\-set  (Since: 1.2)
This command will set a property from a object model path.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- see \fBqom\-get\fP for a description of this parameter
.IP \(bu 2
\fBproperty\fP (\fBstring\fP) \-\- the property name to set
.IP \(bu 2
\fBvalue\fP (\fBvalue\fP) \-\- a value who\(aqs type is appropriate for the property type.
See \fBqom\-get\fP for a description of type mapping.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqqom\-set\(dq,
     \(dqarguments\(dq: { \(dqpath\(dq: \(dq/machine\(dq,
                    \(dqproperty\(dq: \(dqgraphics\(dq,
                    \(dqvalue\(dq: false } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ObjectTypeInfo  (Since: 1.1)
This structure describes a search result from \fBqom\-list\-types\fP
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the type name found in the search
.IP \(bu 2
\fBabstract\fP (\fBboolean\fP, \fIoptional\fP) \-\- the type is abstract and can\(aqt be directly instantiated.
Omitted if false.  (since 2.10)
.IP \(bu 2
\fBparent\fP (\fBstring\fP, \fIoptional\fP) \-\- Name of parent type, if any (since 2.10)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  qom\-list\-types  (Since: 1.1)
This command will return a list of types given search parameters
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBimplements\fP (\fBstring\fP, \fIoptional\fP) \-\- if specified, only return types that implement this
type name
.IP \(bu 2
\fBabstract\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, include abstract types in the results
.UNINDENT
.TP
.B Return
\fB[\fP\fI\%ObjectTypeInfo\fP\fB]\fP \-\- a list of \fBObjectTypeInfo\fP or an empty list if no results
are found
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  qom\-list\-properties  (Since: 2.12)
List properties associated with a QOM object.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBtypename\fP (\fBstring\fP) \-\- the type name of an object
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
Objects can create properties at runtime, for example to
describe links between different devices and/or objects.  These
properties are not included in the output of this command.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%ObjectPropertyInfo\fP\fB]\fP \-\- a list of ObjectPropertyInfo describing object properties
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CanHostSocketcanProperties  (Since: 2.12)
\fIAvailability\fP: \fBCONFIG_LINUX\fP
.sp
Properties for can\-host\-socketcan objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBif\fP (\fBstring\fP) \-\- interface name of the host system CAN bus to connect to
.IP \(bu 2
\fBcanbus\fP (\fBstring\fP) \-\- object ID of the can\-bus object to connect to the host
interface
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ColoCompareProperties  (Since: 2.8)
Properties for colo\-compare objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBprimary_in\fP (\fBstring\fP) \-\- name of the character device backend to use for the
primary input (incoming packets are redirected to \fBoutdev\fP)
.IP \(bu 2
\fBsecondary_in\fP (\fBstring\fP) \-\- name of the character device backend to use for
secondary input (incoming packets are only compared to the input
on \fBprimary_in\fP and then dropped)
.IP \(bu 2
\fBoutdev\fP (\fBstring\fP) \-\- name of the character device backend to use for output
.IP \(bu 2
\fBiothread\fP (\fBstring\fP) \-\- name of the iothread to run in
.IP \(bu 2
\fBnotify_dev\fP (\fBstring\fP, \fIoptional\fP) \-\- name of the character device backend to be used to
communicate with the remote colo\-frame (only for Xen COLO)
.IP \(bu 2
\fBcompare_timeout\fP (\fBint\fP, \fIoptional\fP) \-\- the maximum time to hold a packet from \fBprimary_in\fP
for comparison with an incoming packet on \fBsecondary_in\fP in
milliseconds (default: 3000)
.IP \(bu 2
\fBexpired_scan_cycle\fP (\fBint\fP, \fIoptional\fP) \-\- the interval at which colo\-compare checks
whether packets from \fBprimary\fP have timed out, in milliseconds
(default: 3000)
.IP \(bu 2
\fBmax_queue_size\fP (\fBint\fP, \fIoptional\fP) \-\- the maximum number of packets to keep in the queue
for comparing with incoming packets from \fBsecondary_in\fP\&.  If the
queue is full and additional packets are received, the
additional packets are dropped.  (default: 1024)
.IP \(bu 2
\fBvnet_hdr_support\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, vnet header support is enabled
(default: false)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CryptodevBackendProperties  (Since: 2.8)
Properties for cryptodev\-backend and cryptodev\-backend\-builtin
objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBqueues\fP (\fBint\fP, \fIoptional\fP) \-\- the number of queues for the cryptodev backend.  Ignored
for cryptodev\-backend and must be 1 for
cryptodev\-backend\-builtin.  (default: 1)
.IP \(bu 2
\fBthrottle\-bps\fP (\fBint\fP, \fIoptional\fP) \-\- limit total bytes per second (Since 8.0)
.IP \(bu 2
\fBthrottle\-ops\fP (\fBint\fP, \fIoptional\fP) \-\- limit total operations per second (Since 8.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CryptodevVhostUserProperties  (Since: 2.12)
\fIAvailability\fP: \fBCONFIG_VHOST_CRYPTO\fP
.sp
Properties for cryptodev\-vhost\-user objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBchardev\fP (\fBstring\fP) \-\- the name of a Unix domain socket character device that
connects to the vhost\-user server
.IP \(bu 2
The members of \fI\%CryptodevBackendProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DBusVMStateProperties  (Since: 5.0)
Properties for dbus\-vmstate objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBaddr\fP (\fBstring\fP) \-\- the name of the DBus bus to connect to
.IP \(bu 2
\fBid\-list\fP (\fBstring\fP, \fIoptional\fP) \-\- a comma separated list of DBus IDs of helpers whose data
should be included in the VM state on migration
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  NetfilterInsert  (Since: 5.0)
Indicates where to insert a netfilter relative to a given other
filter.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBbefore\fP \-\- insert before the specified filter
.IP \(bu 2
\fBbehind\fP \-\- insert behind the specified filter
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NetfilterProperties  (Since: 2.5)
Properties for objects of classes derived from netfilter.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnetdev\fP (\fBstring\fP) \-\- id of the network device backend to filter
.IP \(bu 2
\fBqueue\fP (\fI\%NetFilterDirection\fP, \fIoptional\fP) \-\- indicates which queue(s) to filter (default: all)
.IP \(bu 2
\fBstatus\fP (\fBstring\fP, \fIoptional\fP) \-\- indicates whether the filter is enabled (\(dqon\(dq) or disabled
(\(dqoff\(dq) (default: \(dqon\(dq)
.IP \(bu 2
\fBposition\fP (\fBstring\fP, \fIoptional\fP) \-\- specifies where the filter should be inserted in the
filter list.  \(dqhead\(dq means the filter is inserted at the head of
the filter list, before any existing filters.  \(dqtail\(dq means the
filter is inserted at the tail of the filter list, behind any
existing filters (default).  \(dqid=<id>\(dq means the filter is
inserted before or behind the filter specified by <id>,
depending on the \fBinsert\fP property.  (default: \(dqtail\(dq)
.IP \(bu 2
\fBinsert\fP (\fI\%NetfilterInsert\fP, \fIoptional\fP) \-\- where to insert the filter relative to the filter given in
\fBposition\fP\&.  Ignored if \fBposition\fP is \(dqhead\(dq or \(dqtail\(dq.
(default: behind)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  FilterBufferProperties  (Since: 2.5)
Properties for filter\-buffer objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBinterval\fP (\fBint\fP) \-\- a non\-zero interval in microseconds.  All packets
arriving in the given interval are delayed until the end of the
interval.
.IP \(bu 2
The members of \fI\%NetfilterProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  FilterDumpProperties  (Since: 2.5)
Properties for filter\-dump objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fBstring\fP) \-\- the filename where the dumped packets should be stored
.IP \(bu 2
\fBmaxlen\fP (\fBint\fP, \fIoptional\fP) \-\- maximum number of bytes in a packet that are stored
(default: 65536)
.IP \(bu 2
The members of \fI\%NetfilterProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  FilterMirrorProperties  (Since: 2.6)
Properties for filter\-mirror objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBoutdev\fP (\fBstring\fP) \-\- the name of a character device backend to which all
incoming packets are mirrored
.IP \(bu 2
\fBvnet_hdr_support\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, vnet header support is enabled
(default: false)
.IP \(bu 2
The members of \fI\%NetfilterProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  FilterRedirectorProperties  (Since: 2.6)
Properties for filter\-redirector objects.
.sp
At least one of \fBindev\fP or \fBoutdev\fP must be present.  If both are
present, they must not refer to the same character device backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBindev\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of a character device backend from which packets
are received and redirected to the filtered network device
.IP \(bu 2
\fBoutdev\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of a character device backend to which all
incoming packets are redirected
.IP \(bu 2
\fBvnet_hdr_support\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, vnet header support is enabled
(default: false)
.IP \(bu 2
The members of \fI\%NetfilterProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  FilterRewriterProperties  (Since: 2.8)
Properties for filter\-rewriter objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBvnet_hdr_support\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, vnet header support is enabled
(default: false)
.IP \(bu 2
The members of \fI\%NetfilterProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  InputBarrierProperties  (Since: 4.2)
Properties for input\-barrier objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the screen name as declared in the screens section of
barrier.conf
.IP \(bu 2
\fBserver\fP (\fBstring\fP, \fIoptional\fP) \-\- hostname of the Barrier server (default: \(dqlocalhost\(dq)
.IP \(bu 2
\fBport\fP (\fBstring\fP, \fIoptional\fP) \-\- TCP port of the Barrier server (default: \(dq24800\(dq)
.IP \(bu 2
\fBx\-origin\fP (\fBstring\fP, \fIoptional\fP) \-\- x coordinate of the leftmost pixel on the guest screen
(default: \(dq0\(dq)
.IP \(bu 2
\fBy\-origin\fP (\fBstring\fP, \fIoptional\fP) \-\- y coordinate of the topmost pixel on the guest screen
(default: \(dq0\(dq)
.IP \(bu 2
\fBwidth\fP (\fBstring\fP, \fIoptional\fP) \-\- the width of secondary screen in pixels (default: \(dq1920\(dq)
.IP \(bu 2
\fBheight\fP (\fBstring\fP, \fIoptional\fP) \-\- the height of secondary screen in pixels (default: \(dq1080\(dq)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  InputLinuxProperties  (Since: 2.6)
\fIAvailability\fP: \fBCONFIG_LINUX\fP
.sp
Properties for input\-linux objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBevdev\fP (\fBstring\fP) \-\- the path of the host evdev device to use
.IP \(bu 2
\fBgrab_all\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, grab is toggled for all devices (e.g. both
keyboard and mouse) instead of just one device (default: false)
.IP \(bu 2
\fBrepeat\fP (\fBboolean\fP, \fIoptional\fP) \-\- enables auto\-repeat events (default: false)
.IP \(bu 2
\fBgrab\-toggle\fP (\fI\%GrabToggleKeys\fP, \fIoptional\fP) \-\- the key or key combination that toggles device grab
(default: ctrl\-ctrl)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  EventLoopBaseProperties  (Since: 7.1)
Common properties for event loops
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBaio\-max\-batch\fP (\fBint\fP, \fIoptional\fP) \-\- maximum number of requests in a batch for the AIO
engine, 0 means that the engine will use its default.
(default: 0)
.IP \(bu 2
\fBthread\-pool\-min\fP (\fBint\fP, \fIoptional\fP) \-\- minimum number of threads reserved in the thread
pool (default:0)
.IP \(bu 2
\fBthread\-pool\-max\fP (\fBint\fP, \fIoptional\fP) \-\- maximum number of threads the thread pool can
contain (default:64)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  IothreadProperties  (Since: 2.0)
Properties for iothread objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpoll\-max\-ns\fP (\fBint\fP, \fIoptional\fP) \-\- the maximum number of nanoseconds to busy wait for
events.  0 means polling is disabled (default: 32768 on POSIX
hosts, 0 otherwise)
.IP \(bu 2
\fBpoll\-grow\fP (\fBint\fP, \fIoptional\fP) \-\- the multiplier used to increase the polling time when
the algorithm detects it is missing events due to not polling
long enough.  0 selects a default behaviour (default: 0)
.IP \(bu 2
\fBpoll\-shrink\fP (\fBint\fP, \fIoptional\fP) \-\- the divisor used to decrease the polling time when the
algorithm detects it is spending too long polling without
encountering events.  0 selects a default behaviour (default: 0)
.IP \(bu 2
The members of \fI\%EventLoopBaseProperties\fP\&.
.UNINDENT
.UNINDENT
.sp
The \fBaio\-max\-batch\fP option is available since 6.1.
.UNINDENT
.INDENT 0.0
.TP
.B Object  MainLoopProperties  (Since: 7.1)
Properties for the main\-loop object.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%EventLoopBaseProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MemoryBackendProperties  (Since: 2.1)
Properties for objects of classes derived from memory\-backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmerge\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, mark the memory as mergeable (default depends on
the machine type)
.IP \(bu 2
\fBdump\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, include the memory in core dumps (default depends on
the machine type)
.IP \(bu 2
\fBhost\-nodes\fP (\fB[\fP\fBint\fP\fB]\fP, \fIoptional\fP) \-\- the list of NUMA host nodes to bind the memory to
.IP \(bu 2
\fBpolicy\fP (\fI\%HostMemPolicy\fP, \fIoptional\fP) \-\- the NUMA policy (default: \(aqdefault\(aq)
.IP \(bu 2
\fBprealloc\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, preallocate memory (default: false)
.IP \(bu 2
\fBprealloc\-threads\fP (\fBint\fP, \fIoptional\fP) \-\- number of CPU threads to use for prealloc
(default: 1)
.IP \(bu 2
\fBprealloc\-context\fP (\fBstring\fP, \fIoptional\fP) \-\- thread context to use for creation of
preallocation threads (default: none) (since 7.2)
.IP \(bu 2
\fBshare\fP (\fBboolean\fP, \fIoptional\fP) \-\- if false, the memory is private to QEMU; if true, it is
shared (default false for backends memory\-backend\-file and
memory\-backend\-ram, true for backends memory\-backend\-epc,
memory\-backend\-memfd, and memory\-backend\-shm)
.IP \(bu 2
\fBreserve\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, reserve swap space (or huge pages) if applicable
(default: true) (since 6.1)
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- size of the memory region in bytes
.IP \(bu 2
\fBx\-use\-canonical\-path\-for\-ramblock\-id\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, the canonical path
is used for ramblock\-id.  Disable this for 4.0 machine types or
older to allow migration with newer QEMU versions.
(default: false generally, but true for machine types <= 4.0)
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
prealloc=true and reserve=false cannot be set at the same
time.  With reserve=true, the behavior depends on the operating
system: for example, Linux will not reserve swap space for shared
file mappings \-\- \(dqnot applicable\(dq.  In contrast, reserve=false
will bail out if it cannot be configured accordingly.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MemoryBackendFileProperties  (Since: 2.1)
Properties for memory\-backend\-file objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBalign\fP (\fBint\fP, \fIoptional\fP) \-\- the base address alignment when QEMU mmap(2)s \fBmem\-path\fP\&.
Some backend stores specified by \fBmem\-path\fP require an alignment
different than the default one used by QEMU, e.g. the device DAX
/dev/dax0.0 requires 2M alignment rather than 4K.  In such
cases, users can specify the required alignment via this option.
0 selects a default alignment (currently the page size).
(default: 0)
.IP \(bu 2
\fBoffset\fP (\fBint\fP, \fIoptional\fP) \-\- the offset into the target file that the region starts at.
You can use this option to back multiple regions with a single
file.  Must be a multiple of the page size.
(default: 0) (since 8.1)
.IP \(bu 2
\fBdiscard\-data\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, the file contents can be destroyed when QEMU
exits, to avoid unnecessarily flushing data to the backing file.
Note that \fBdiscard\-data\fP is only an optimization, and QEMU might
not discard file contents if it aborts unexpectedly or is
terminated using SIGKILL.  (default: false)
.IP \(bu 2
\fBmem\-path\fP (\fBstring\fP) \-\- the path to either a shared memory or huge page
filesystem mount
.IP \(bu 2
\fBpmem\fP (\fBboolean\fP, \fIoptional\fP) \-\- specifies whether the backing file specified by \fBmem\-path\fP is
in host persistent memory that can be accessed using the SNIA
NVM programming model (e.g. Intel NVDIMM).
.IP \(bu 2
\fBreadonly\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, the backing file is opened read\-only; if false,
it is opened read\-write.  (default: false)
.IP \(bu 2
\fBrom\fP (\fI\%OnOffAuto\fP, \fIoptional\fP) \-\- whether to create Read Only Memory (ROM) that cannot be
modified by the VM.  Any write attempts to such ROM will be
denied.  Most use cases want writable RAM instead of ROM.
However, selected use cases, like R/O NVDIMMs, can benefit from
ROM.  If set to \(aqon\(aq, create ROM; if set to \(aqoff\(aq, create
writable RAM; if set to \(aqauto\(aq, the value of the \fBreadonly\fP
property is used.  This property is primarily helpful when we
want to have proper RAM in configurations that would
traditionally create ROM before this property was introduced: VM
templating, where we want to open a file readonly (\fBreadonly\fP set
to true) and mark the memory to be private for QEMU (\fBshare\fP set
to false).  For this use case, we need writable RAM instead of
ROM, and want to set this property to \(aqoff\(aq.  (default: auto,
since 8.2)
.IP \(bu 2
The members of \fI\%MemoryBackendProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MemoryBackendMemfdProperties  (Since: 2.12)
\fIAvailability\fP: \fBCONFIG_LINUX\fP
.sp
Properties for memory\-backend\-memfd objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBhugetlb\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, the file to be created resides in the hugetlbfs
filesystem (default: false)
.IP \(bu 2
\fBhugetlbsize\fP (\fBint\fP, \fIoptional\fP) \-\- the hugetlb page size on systems that support multiple
hugetlb page sizes (it must be a power of 2 value supported by
the system).  0 selects a default page size.  This option is
ignored if \fBhugetlb\fP is false.  (default: 0)
.IP \(bu 2
\fBseal\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, create a sealed\-file, which will block further
resizing of the memory (default: true)
.IP \(bu 2
The members of \fI\%MemoryBackendProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MemoryBackendShmProperties  (Since: 9.1)
\fIAvailability\fP: \fBCONFIG_POSIX\fP
.sp
Properties for memory\-backend\-shm objects.
.sp
This memory backend supports only shared memory, which is the
default.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%MemoryBackendProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MemoryBackendEpcProperties  (Since: 6.2)
\fIAvailability\fP: \fBCONFIG_LINUX\fP
.sp
Properties for memory\-backend\-epc objects.
.sp
The \fBmerge\fP boolean option is false by default with epc
.sp
The \fBdump\fP boolean option is false by default with epc
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%MemoryBackendProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  PrManagerHelperProperties  (Since: 2.11)
\fIAvailability\fP: \fBCONFIG_LINUX\fP
.sp
Properties for pr\-manager\-helper objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- the path to a Unix domain socket for connecting to the
external helper
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QtestProperties  (Since: 6.0)
Properties for qtest objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBchardev\fP (\fBstring\fP) \-\- the chardev to be used to receive qtest commands on.
.IP \(bu 2
\fBlog\fP (\fBstring\fP, \fIoptional\fP) \-\- the path to a log file
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RemoteObjectProperties  (Since: 6.0)
Properties for x\-remote\-object objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfd\fP (\fBstring\fP) \-\- file descriptor name previously passed via \(aqgetfd\(aq command
.IP \(bu 2
\fBdevid\fP (\fBstring\fP) \-\- the id of the device to be associated with the file
descriptor
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VfioUserServerProperties  (Since: 7.1)
Properties for x\-vfio\-user\-server objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsocket\fP (\fI\%SocketAddress\fP) \-\- socket to be used by the libvfio\-user library
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- the ID of the device to be emulated at the server
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  IOMMUFDProperties  (Since: 9.0)
Properties for iommufd objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfd\fP (\fBstring\fP, \fIoptional\fP) \-\- file descriptor name previously passed via \(aqgetfd\(aq command,
which represents a pre\-opened /dev/iommu.  This allows the
iommufd object to be shared across several subsystems (VFIO,
VDPA, ...), and the file descriptor to be shared with other
process, e.g. DPDK.  (default: QEMU opens /dev/iommu by itself)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AcpiGenericInitiatorProperties  (Since: 9.0)
Properties for acpi\-generic\-initiator objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpci\-dev\fP (\fBstring\fP) \-\- PCI device ID to be associated with the node
.IP \(bu 2
\fBnode\fP (\fBint\fP) \-\- NUMA node associated with the PCI device
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AcpiGenericPortProperties  (Since: 9.2)
Properties for acpi\-generic\-port objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpci\-bus\fP (\fBstring\fP) \-\- QOM path of the PCI bus of the hostbridge associated with
this SRAT Generic Port Affinity Structure.  This is the same as
the bus parameter for the root ports attached to this host
bridge.  The resulting SRAT Generic Port Affinity Structure will
refer to the ACPI object in DSDT that represents the host bridge
(e.g.  ACPI0016 for CXL host bridges).  See ACPI 6.5 Section
5.2.16.7 for more information.
.IP \(bu 2
\fBnode\fP (\fBint\fP) \-\- Similar to a NUMA node ID, but instead of providing a
reference point used for defining NUMA distances and access
characteristics to memory or from an initiator (e.g. CPU), this
node defines the boundary point between non\-discoverable system
buses which must be described by firmware, and a discoverable
bus.  NUMA distances and access characteristics are defined to
and from that point.  For system software to establish full
initiator to target characteristics this information must be
combined with information retrieved from the discoverable part
of the path.  An example would use CDAT (see UEFI.org)
information read from devices and switches in conjunction with
link characteristics read from PCIe Configuration space.
To get the full path latency from CPU to CXL attached DRAM
CXL device:  Add the latency from CPU to Generic Port (from
HMAT indexed via the node ID in this SRAT structure) to
that for CXL bus links, the latency across intermediate switches
and from the EP port to the actual memory.  Bandwidth is more
complex as there may be interleaving across multiple devices
and shared links in the path.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RngProperties  (Since: 1.3)
Properties for objects of classes derived from rng.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBopened\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, the device is opened immediately when applying
this option and will probably fail when processing the next
option.  Don\(aqt use; only provided for compatibility.
(default: false)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- Member \fBopened\fP is deprecated.  Setting true doesn\(aqt
make sense, and false is already the default.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RngEgdProperties  (Since: 1.3)
Properties for rng\-egd objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBchardev\fP (\fBstring\fP) \-\- the name of a character device backend that provides the
connection to the RNG daemon
.IP \(bu 2
The members of \fI\%RngProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RngRandomProperties  (Since: 1.3)
\fIAvailability\fP: \fBCONFIG_POSIX\fP
.sp
Properties for rng\-random objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fBstring\fP, \fIoptional\fP) \-\- the filename of the device on the host to obtain entropy
from (default: \(dq/dev/urandom\(dq)
.IP \(bu 2
The members of \fI\%RngProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SevCommonProperties  (Since: 9.1)
Properties common to objects that are derivatives of sev\-common.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsev\-device\fP (\fBstring\fP, \fIoptional\fP) \-\- SEV device to use (default: \(dq/dev/sev\(dq)
.IP \(bu 2
\fBcbitpos\fP (\fBint\fP, \fIoptional\fP) \-\- C\-bit location in page table entry (default: 0)
.IP \(bu 2
\fBreduced\-phys\-bits\fP (\fBint\fP) \-\- number of bits in physical addresses that become
unavailable when SEV is enabled
.IP \(bu 2
\fBkernel\-hashes\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, add hashes of kernel/initrd/cmdline to a
designated guest firmware page for measured boot with \-kernel
(default: false) (since 6.2)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SevGuestProperties  (Since: 2.12)
Properties for sev\-guest objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdh\-cert\-file\fP (\fBstring\fP, \fIoptional\fP) \-\- guest owners DH certificate (encoded with base64)
.IP \(bu 2
\fBsession\-file\fP (\fBstring\fP, \fIoptional\fP) \-\- guest owners session parameters (encoded with base64)
.IP \(bu 2
\fBpolicy\fP (\fBint\fP, \fIoptional\fP) \-\- SEV policy value (default: 0x1)
.IP \(bu 2
\fBhandle\fP (\fBint\fP, \fIoptional\fP) \-\- SEV firmware handle (default: 0)
.IP \(bu 2
\fBlegacy\-vm\-type\fP (\fI\%OnOffAuto\fP, \fIoptional\fP) \-\- Use legacy KVM_SEV_INIT KVM interface for creating
the VM.  The newer KVM_SEV_INIT2 interface, from Linux >= 6.10,
syncs additional vCPU state when initializing the VMSA
structures, which will result in a different guest measurement.
Set this to \(aqon\(aq to force compatibility with older QEMU or kernel
versions that rely on legacy KVM_SEV_INIT behavior.  \(aqauto\(aq will
behave identically to \(aqon\(aq, but will automatically switch to
using KVM_SEV_INIT2 if the user specifies any additional options
that require it.  If set to \(aqoff\(aq, QEMU will require
KVM_SEV_INIT2 unconditionally.
(default: off) (since 9.1)
.IP \(bu 2
The members of \fI\%SevCommonProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SevSnpGuestProperties  (Since: 9.1)
Properties for sev\-snp\-guest objects.  Most of these are direct
arguments for the KVM_SNP_* interfaces documented in the Linux
kernel source under
Documentation/arch/x86/amd\-memory\-encryption.rst, which are in turn
closely coupled with the SNP_INIT/SNP_LAUNCH_* firmware commands
documented in the SEV\-SNP Firmware ABI Specification (Rev 0.9).
.sp
More usage information is also available in the QEMU source tree
under docs/amd\-memory\-encryption.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpolicy\fP (\fBint\fP, \fIoptional\fP) \-\- the \(aqPOLICY\(aq parameter to the SNP_LAUNCH_START command, as
defined in the SEV\-SNP firmware ABI (default: 0x30000)
.IP \(bu 2
\fBguest\-visible\-workarounds\fP (\fBstring\fP, \fIoptional\fP) \-\- 16\-byte, base64\-encoded blob to report
hypervisor\-defined workarounds, corresponding to the \(aqGOSVW\(aq
parameter of the SNP_LAUNCH_START command defined in the SEV\-SNP
firmware ABI (default: all\-zero)
.IP \(bu 2
\fBid\-block\fP (\fBstring\fP, \fIoptional\fP) \-\- 96\-byte, base64\-encoded blob to provide the \(aqID Block\(aq
structure for the SNP_LAUNCH_FINISH command defined in the
SEV\-SNP firmware ABI (default: all\-zero)
.IP \(bu 2
\fBid\-auth\fP (\fBstring\fP, \fIoptional\fP) \-\- 4096\-byte, base64\-encoded blob to provide the \(aqID
Authentication Information Structure\(aq for the SNP_LAUNCH_FINISH
command defined in the SEV\-SNP firmware ABI (default: all\-zero)
.IP \(bu 2
\fBauthor\-key\-enabled\fP (\fBboolean\fP, \fIoptional\fP) \-\- true if \(aqid\-auth\(aq blob contains the \(aqAUTHOR_KEY\(aq
field defined SEV\-SNP firmware ABI (default: false)
.IP \(bu 2
\fBhost\-data\fP (\fBstring\fP, \fIoptional\fP) \-\- 32\-byte, base64\-encoded, user\-defined blob to provide to
the guest, as documented for the \(aqHOST_DATA\(aq parameter of the
SNP_LAUNCH_FINISH command in the SEV\-SNP firmware ABI (default:
all\-zero)
.IP \(bu 2
\fBvcek\-disabled\fP (\fBboolean\fP, \fIoptional\fP) \-\- Guests are by default allowed to choose between VLEK
(Versioned Loaded Endorsement Key) or VCEK (Versioned Chip
Endorsement Key) when requesting attestation reports from
firmware.  Set this to true to disable the use of VCEK.
(default: false) (since: 9.1)
.IP \(bu 2
The members of \fI\%SevCommonProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  TdxGuestProperties  (Since: 10.1)
Properties for tdx\-guest objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBattributes\fP (\fBint\fP, \fIoptional\fP) \-\- The \(aqattributes\(aq of a TD guest that is passed to
KVM_TDX_INIT_VM
.IP \(bu 2
\fBsept\-ve\-disable\fP (\fBboolean\fP, \fIoptional\fP) \-\- toggle bit 28 of TD attributes to control disabling
of EPT violation conversion to #VE on guest TD access of PENDING
pages.  Some guest OS (e.g., Linux TD guest) may require this to
be set, otherwise they refuse to boot.
.IP \(bu 2
\fBmrconfigid\fP (\fBstring\fP, \fIoptional\fP) \-\- ID for non\-owner\-defined configuration of the guest TD,
e.g., run\-time or OS configuration (base64 encoded SHA384 digest).
Defaults to all zeros.
.IP \(bu 2
\fBmrowner\fP (\fBstring\fP, \fIoptional\fP) \-\- ID for the guest TD’s owner (base64 encoded SHA384 digest).
Defaults to all zeros.
.IP \(bu 2
\fBmrownerconfig\fP (\fBstring\fP, \fIoptional\fP) \-\- ID for owner\-defined configuration of the guest TD,
e.g., specific to the workload rather than the run\-time or OS
(base64 encoded SHA384 digest).  Defaults to all zeros.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ThreadContextProperties  (Since: 7.2)
Properties for thread context objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcpu\-affinity\fP (\fB[\fP\fBint\fP\fB]\fP, \fIoptional\fP) \-\- the list of host CPU numbers used as CPU affinity for
all threads created in the thread context (default: QEMU main
thread CPU affinity)
.IP \(bu 2
\fBnode\-affinity\fP (\fB[\fP\fBint\fP\fB]\fP, \fIoptional\fP) \-\- the list of host node numbers that will be resolved
to a list of host CPU numbers used as CPU affinity.  This is a
shortcut for specifying the list of host CPU numbers belonging
to the host nodes manually by setting \fBcpu\-affinity\fP\&.
(default: QEMU main thread affinity)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  ObjectType  (Since: 6.0)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBacpi\-generic\-initiator\fP \-\- Not documented
.IP \(bu 2
\fBacpi\-generic\-port\fP \-\- Not documented
.IP \(bu 2
\fBauthz\-list\fP \-\- Not documented
.IP \(bu 2
\fBauthz\-listfile\fP \-\- Not documented
.IP \(bu 2
\fBauthz\-pam\fP \-\- Not documented
.IP \(bu 2
\fBauthz\-simple\fP \-\- Not documented
.IP \(bu 2
\fBcan\-bus\fP \-\- Not documented
.IP \(bu 2
\fBcan\-host\-socketcan\fP \-\- Not documented
.IP \(bu 2
\fBcolo\-compare\fP \-\- Not documented
.IP \(bu 2
\fBcryptodev\-backend\fP \-\- Not documented
.IP \(bu 2
\fBcryptodev\-backend\-builtin\fP \-\- Not documented
.IP \(bu 2
\fBcryptodev\-backend\-lkcf\fP \-\- Not documented
.IP \(bu 2
\fBcryptodev\-vhost\-user\fP \-\- Not documented
.IP \(bu 2
\fBdbus\-vmstate\fP \-\- Not documented
.IP \(bu 2
\fBfilter\-buffer\fP \-\- Not documented
.IP \(bu 2
\fBfilter\-dump\fP \-\- Not documented
.IP \(bu 2
\fBfilter\-mirror\fP \-\- Not documented
.IP \(bu 2
\fBfilter\-redirector\fP \-\- Not documented
.IP \(bu 2
\fBfilter\-replay\fP \-\- Not documented
.IP \(bu 2
\fBfilter\-rewriter\fP \-\- Not documented
.IP \(bu 2
\fBinput\-barrier\fP \-\- Not documented
.IP \(bu 2
\fBinput\-linux\fP \-\- Not documented
.IP \(bu 2
\fBiommufd\fP \-\- Not documented
.IP \(bu 2
\fBiothread\fP \-\- Not documented
.IP \(bu 2
\fBmain\-loop\fP \-\- Not documented
.IP \(bu 2
\fBmemory\-backend\-epc\fP \-\- Not documented
.IP \(bu 2
\fBmemory\-backend\-file\fP \-\- Not documented
.IP \(bu 2
\fBmemory\-backend\-memfd\fP \-\- Not documented
.IP \(bu 2
\fBmemory\-backend\-ram\fP \-\- Not documented
.IP \(bu 2
\fBmemory\-backend\-shm\fP \-\- Not documented
.IP \(bu 2
\fBpef\-guest\fP \-\- Not documented
.IP \(bu 2
\fBpr\-manager\-helper\fP \-\- Not documented
.IP \(bu 2
\fBqtest\fP \-\- Not documented
.IP \(bu 2
\fBrng\-builtin\fP \-\- Not documented
.IP \(bu 2
\fBrng\-egd\fP \-\- Not documented
.IP \(bu 2
\fBrng\-random\fP \-\- Not documented
.IP \(bu 2
\fBsecret\fP \-\- Not documented
.IP \(bu 2
\fBsecret_keyring\fP \-\- Not documented
.IP \(bu 2
\fBsev\-guest\fP \-\- Not documented
.IP \(bu 2
\fBsev\-snp\-guest\fP \-\- Not documented
.IP \(bu 2
\fBthread\-context\fP \-\- Not documented
.IP \(bu 2
\fBs390\-pv\-guest\fP \-\- Not documented
.IP \(bu 2
\fBtdx\-guest\fP \-\- Not documented
.IP \(bu 2
\fBthrottle\-group\fP \-\- Not documented
.IP \(bu 2
\fBtls\-creds\-anon\fP \-\- Not documented
.IP \(bu 2
\fBtls\-creds\-psk\fP \-\- Not documented
.IP \(bu 2
\fBtls\-creds\-x509\fP \-\- Not documented
.IP \(bu 2
\fBtls\-cipher\-suites\fP \-\- Not documented
.IP \(bu 2
\fBx\-remote\-object\fP \-\- Not documented
.IP \(bu 2
\fBx\-vfio\-user\-server\fP \-\- Not documented
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- Members \fBx\-remote\-object\fP and \fBx\-vfio\-user\-server\fP are
experimental.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ObjectOptions  (Since: 6.0)
Describes the options of a user creatable QOM object.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBqom\-type\fP (\fI\%ObjectType\fP) \-\- the class name for the object to be created
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- the name of the new object
.IP \(bu 2
When \fBqom\-type\fP is \fBacpi\-generic\-initiator\fP: The members of \fI\%AcpiGenericInitiatorProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBacpi\-generic\-port\fP: The members of \fI\%AcpiGenericPortProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBauthz\-list\fP: The members of \fI\%AuthZListProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBauthz\-listfile\fP: The members of \fI\%AuthZListFileProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBauthz\-pam\fP: The members of \fI\%AuthZPAMProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBauthz\-simple\fP: The members of \fI\%AuthZSimpleProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBcan\-host\-socketcan\fP: The members of \fI\%CanHostSocketcanProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBcolo\-compare\fP: The members of \fI\%ColoCompareProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBcryptodev\-backend\fP: The members of \fI\%CryptodevBackendProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBcryptodev\-backend\-builtin\fP: The members of \fI\%CryptodevBackendProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBcryptodev\-backend\-lkcf\fP: The members of \fI\%CryptodevBackendProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBcryptodev\-vhost\-user\fP: The members of \fI\%CryptodevVhostUserProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBdbus\-vmstate\fP: The members of \fI\%DBusVMStateProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBfilter\-buffer\fP: The members of \fI\%FilterBufferProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBfilter\-dump\fP: The members of \fI\%FilterDumpProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBfilter\-mirror\fP: The members of \fI\%FilterMirrorProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBfilter\-redirector\fP: The members of \fI\%FilterRedirectorProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBfilter\-replay\fP: The members of \fI\%NetfilterProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBfilter\-rewriter\fP: The members of \fI\%FilterRewriterProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBinput\-barrier\fP: The members of \fI\%InputBarrierProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBinput\-linux\fP: The members of \fI\%InputLinuxProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBiommufd\fP: The members of \fI\%IOMMUFDProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBiothread\fP: The members of \fI\%IothreadProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBmain\-loop\fP: The members of \fI\%MainLoopProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBmemory\-backend\-epc\fP: The members of \fI\%MemoryBackendEpcProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBmemory\-backend\-file\fP: The members of \fI\%MemoryBackendFileProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBmemory\-backend\-memfd\fP: The members of \fI\%MemoryBackendMemfdProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBmemory\-backend\-ram\fP: The members of \fI\%MemoryBackendProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBmemory\-backend\-shm\fP: The members of \fI\%MemoryBackendShmProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBpr\-manager\-helper\fP: The members of \fI\%PrManagerHelperProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBqtest\fP: The members of \fI\%QtestProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBrng\-builtin\fP: The members of \fI\%RngProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBrng\-egd\fP: The members of \fI\%RngEgdProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBrng\-random\fP: The members of \fI\%RngRandomProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBsecret\fP: The members of \fI\%SecretProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBsecret_keyring\fP: The members of \fI\%SecretKeyringProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBsev\-guest\fP: The members of \fI\%SevGuestProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBsev\-snp\-guest\fP: The members of \fI\%SevSnpGuestProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBtdx\-guest\fP: The members of \fI\%TdxGuestProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBthread\-context\fP: The members of \fI\%ThreadContextProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBthrottle\-group\fP: The members of \fI\%ThrottleGroupProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBtls\-creds\-anon\fP: The members of \fI\%TlsCredsAnonProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBtls\-creds\-psk\fP: The members of \fI\%TlsCredsPskProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBtls\-creds\-x509\fP: The members of \fI\%TlsCredsX509Properties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBtls\-cipher\-suites\fP: The members of \fI\%TlsCredsProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBx\-remote\-object\fP: The members of \fI\%RemoteObjectProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBx\-vfio\-user\-server\fP: The members of \fI\%VfioUserServerProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  object\-add  (Since: 2.0)
Create a QOM object.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%ObjectOptions\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
Error if \fBqom\-type\fP is not a valid class name
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqobject\-add\(dq,
     \(dqarguments\(dq: { \(dqqom\-type\(dq: \(dqrng\-random\(dq, \(dqid\(dq: \(dqrng1\(dq,
                    \(dqfilename\(dq: \(dq/dev/hwrng\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  object\-del  (Since: 2.0)
Remove a QOM object.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- the name of the QOM object to remove
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
Error if \fBid\fP is not a valid id for a QOM object
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqobject\-del\(dq, \(dqarguments\(dq: { \(dqid\(dq: \(dqrng1\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH COPYRIGHT
2025, The QEMU Project Developers
.\" Generated by docutils manpage writer.
.
