.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "QEMU-QMP-REF" "7" "Jun 02, 2025" "10.0.50" "QEMU"
.SH NAME
qemu-qmp-ref \- QEMU QMP Reference Manual
.INDENT 0.0
.IP \(bu 2
\fI\%Introduction\fP
.IP \(bu 2
\fI\%QMP errors\fP
.IP \(bu 2
\fI\%Common data types\fP
.IP \(bu 2
\fI\%Socket data types\fP
.IP \(bu 2
\fI\%VM run state\fP
.IP \(bu 2
\fI\%Cryptography\fP
.IP \(bu 2
\fI\%Background jobs\fP
.IP \(bu 2
\fI\%Block devices\fP
.INDENT 2.0
.IP \(bu 2
\fI\%Block core (VM unrelated)\fP
.IP \(bu 2
\fI\%Additional block stuff (VM related)\fP
.IP \(bu 2
\fI\%Block device exports\fP
.UNINDENT
.IP \(bu 2
\fI\%Character devices\fP
.IP \(bu 2
\fI\%Dump guest memory\fP
.IP \(bu 2
\fI\%Net devices\fP
.IP \(bu 2
\fI\%eBPF Objects\fP
.IP \(bu 2
\fI\%Rocker switch device\fP
.IP \(bu 2
\fI\%TPM (trusted platform module) devices\fP
.IP \(bu 2
\fI\%Remote desktop\fP
.INDENT 2.0
.IP \(bu 2
\fI\%Spice\fP
.IP \(bu 2
\fI\%VNC\fP
.UNINDENT
.IP \(bu 2
\fI\%Input\fP
.IP \(bu 2
\fI\%User authorization\fP
.IP \(bu 2
\fI\%Migration\fP
.IP \(bu 2
\fI\%Transactions\fP
.IP \(bu 2
\fI\%Tracing\fP
.IP \(bu 2
\fI\%Compatibility policy\fP
.IP \(bu 2
\fI\%QMP monitor control\fP
.IP \(bu 2
\fI\%QMP introspection\fP
.IP \(bu 2
\fI\%QEMU Object Model (QOM)\fP
.IP \(bu 2
\fI\%Device infrastructure (qdev)\fP
.IP \(bu 2
\fI\%Common machine types\fP
.IP \(bu 2
\fI\%Machines\fP
.IP \(bu 2
\fI\%Record/replay\fP
.IP \(bu 2
\fI\%Yank feature\fP
.IP \(bu 2
\fI\%Miscellanea\fP
.IP \(bu 2
\fI\%Audio\fP
.IP \(bu 2
\fI\%ACPI\fP
.IP \(bu 2
\fI\%PCI\fP
.IP \(bu 2
\fI\%Statistics\fP
.IP \(bu 2
\fI\%Virtio devices\fP
.IP \(bu 2
\fI\%VFIO devices\fP
.IP \(bu 2
\fI\%Cryptography devices\fP
.IP \(bu 2
\fI\%CXL devices\fP
.IP \(bu 2
\fI\%UEFI Variable Store\fP
.UNINDENT
.SH INTRODUCTION
.sp
This manual describes the commands and events supported by the QEMU
Monitor Protocol (QMP).
.sp
For locating a particular item, please see the \fBqapi\-qmp\-index\fP\&.
.sp
The following notation is used in examples:
.INDENT 0.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> ... text sent by client (commands) ...
<\- ... text sent by server (command responses and events) ...
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Example text is formatted for readability.  However, in real
protocol usage, its commonly emitted as a single line.
.sp
Please refer to the
QEMU Machine Protocol Specification
for the general format of commands, responses, and events.
.SH QMP ERRORS
.INDENT 0.0
.TP
.B Enum  QapiErrorClass  (Since: 1.2)
QEMU error classes
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBGenericError\fP \-\- this is used for errors that don\(aqt require a specific
error class.  This should be the default case for most errors
.IP \(bu 2
\fBCommandNotFound\fP \-\- the requested command has not been found
.IP \(bu 2
\fBDeviceNotActive\fP \-\- a device has failed to be become active
.IP \(bu 2
\fBDeviceNotFound\fP \-\- the requested device has not been found
.IP \(bu 2
\fBKVMMissingCap\fP \-\- the requested operation can\(aqt be fulfilled because a
required KVM capability is missing
.UNINDENT
.UNINDENT
.UNINDENT
.SH COMMON DATA TYPES
.INDENT 0.0
.TP
.B Enum  IoOperationType  (Since: 2.1)
An enumeration of the I/O operation types
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBread\fP \-\- read operation
.IP \(bu 2
\fBwrite\fP \-\- write operation
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  OnOffAuto  (Since: 2.2)
An enumeration of three options: on, off, and auto
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBauto\fP \-\- QEMU selects the value between on and off
.IP \(bu 2
\fBon\fP \-\- Enabled
.IP \(bu 2
\fBoff\fP \-\- Disabled
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  OnOffSplit  (Since: 2.6)
An enumeration of three values: on, off, and split
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBon\fP \-\- Enabled
.IP \(bu 2
\fBoff\fP \-\- Disabled
.IP \(bu 2
\fBsplit\fP \-\- Mixed
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Alternate  StrOrNull  (Since: 2.10)
This is a string value or the explicit lack of a string (null
pointer in C).  Intended for cases when \(aqoptional absent\(aq already
has a different meaning.
.INDENT 7.0
.TP
.B Alternatives
.INDENT 7.0
.IP \(bu 2
\fBs\fP (\fBstring\fP) \-\- the string value
.IP \(bu 2
\fBn\fP (\fBnull\fP) \-\- no string value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  OffAutoPCIBAR  (Since: 2.12)
An enumeration of options for specifying a PCI BAR
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBoff\fP \-\- The specified feature is disabled
.IP \(bu 2
\fBauto\fP \-\- The PCI BAR for the feature is automatically selected
.IP \(bu 2
\fBbar0\fP \-\- PCI BAR0 is used for the feature
.IP \(bu 2
\fBbar1\fP \-\- PCI BAR1 is used for the feature
.IP \(bu 2
\fBbar2\fP \-\- PCI BAR2 is used for the feature
.IP \(bu 2
\fBbar3\fP \-\- PCI BAR3 is used for the feature
.IP \(bu 2
\fBbar4\fP \-\- PCI BAR4 is used for the feature
.IP \(bu 2
\fBbar5\fP \-\- PCI BAR5 is used for the feature
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  PCIELinkSpeed  (Since: 4.0)
An enumeration of PCIe link speeds in units of GT/s
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fB2_5\fP \-\- 2.5GT/s
.IP \(bu 2
\fB5\fP \-\- 5.0GT/s
.IP \(bu 2
\fB8\fP \-\- 8.0GT/s
.IP \(bu 2
\fB16\fP \-\- 16.0GT/s
.IP \(bu 2
\fB32\fP \-\- 32.0GT/s (since 9.0)
.IP \(bu 2
\fB64\fP \-\- 64.0GT/s (since 9.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  PCIELinkWidth  (Since: 4.0)
An enumeration of PCIe link width
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fB1\fP \-\- x1
.IP \(bu 2
\fB2\fP \-\- x2
.IP \(bu 2
\fB4\fP \-\- x4
.IP \(bu 2
\fB8\fP \-\- x8
.IP \(bu 2
\fB12\fP \-\- x12
.IP \(bu 2
\fB16\fP \-\- x16
.IP \(bu 2
\fB32\fP \-\- x32
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  HostMemPolicy  (Since: 2.1)
Host memory policy types
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBdefault\fP \-\- restore default policy, remove any nondefault policy
.IP \(bu 2
\fBpreferred\fP \-\- set the preferred host nodes for allocation
.IP \(bu 2
\fBbind\fP \-\- a strict policy that restricts memory allocation to the host
nodes specified
.IP \(bu 2
\fBinterleave\fP \-\- memory allocations are interleaved across the set of
host nodes specified
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  NetFilterDirection  (Since: 2.5)
Indicates whether a netfilter is attached to a netdev\(aqs transmit
queue or receive queue or both.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBall\fP \-\- the filter is attached both to the receive and the transmit
queue of the netdev (default).
.IP \(bu 2
\fBrx\fP \-\- the filter is attached to the receive queue of the netdev,
where it will receive packets sent to the netdev.
.IP \(bu 2
\fBtx\fP \-\- the filter is attached to the transmit queue of the netdev,
where it will receive packets sent by the netdev.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  GrabToggleKeys  (Since: 4.0)
Key combinations to toggle input\-linux between host and guest.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBctrl\-ctrl\fP \-\- left and right control key
.IP \(bu 2
\fBalt\-alt\fP \-\- left and right alt key
.IP \(bu 2
\fBshift\-shift\fP \-\- left and right shift key
.IP \(bu 2
\fBmeta\-meta\fP \-\- left and right meta key
.IP \(bu 2
\fBscrolllock\fP \-\- scroll lock key
.IP \(bu 2
\fBctrl\-scrolllock\fP \-\- either control key and scroll lock key
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  HumanReadableText  (Since: 6.2)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBhuman\-readable\-text\fP (\fBstring\fP) \-\- Formatted output intended for humans.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  EndianMode  (Since: 10.0)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBunspecified\fP \-\- Endianness not specified
.IP \(bu 2
\fBlittle\fP \-\- Little endianness
.IP \(bu 2
\fBbig\fP \-\- Big endianness
.UNINDENT
.UNINDENT
.UNINDENT
.SH SOCKET DATA TYPES
.INDENT 0.0
.TP
.B Enum  NetworkAddressFamily  (Since: 2.1)
The network address family
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBipv4\fP \-\- IPV4 family
.IP \(bu 2
\fBipv6\fP \-\- IPV6 family
.IP \(bu 2
\fBunix\fP \-\- unix socket
.IP \(bu 2
\fBvsock\fP \-\- vsock family (since 2.8)
.IP \(bu 2
\fBunknown\fP \-\- otherwise
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  InetSocketAddressBase
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBhost\fP (\fBstring\fP) \-\- host part of the address
.IP \(bu 2
\fBport\fP (\fBstring\fP) \-\- port part of the address
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  InetSocketAddress  (Since: 1.3)
Captures a socket address or address range in the Internet
namespace.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnumeric\fP (\fBboolean\fP, \fIoptional\fP) \-\- true if the host/port are guaranteed to be numeric, false
if name resolution should be attempted.  Defaults to false.
(Since 2.9)
.IP \(bu 2
\fBto\fP (\fBint\fP, \fIoptional\fP) \-\- If present, this is range of possible addresses, with port
between \fBport\fP and \fBto\fP\&.
.IP \(bu 2
\fBipv4\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether to accept IPv4 addresses, default try both IPv4 and
IPv6
.IP \(bu 2
\fBipv6\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether to accept IPv6 addresses, default try both IPv4 and
IPv6
.IP \(bu 2
\fBkeep\-alive\fP (\fBboolean\fP, \fIoptional\fP) \-\- enable keep\-alive when connecting to/listening on this socket.
(Since 4.2, not supported for listening sockets until 10.1)
.IP \(bu 2
\fBkeep\-alive\-count\fP (\fBint\fP, \fIoptional\fP) \-\- number of keep\-alive packets sent before the connection is
closed.  Only supported for TCP sockets on systems where TCP_KEEPCNT
socket option is defined (this includes Linux, Windows, macOS, FreeBSD,
but not OpenBSD).  When set to 0, system setting is used.  (Since 10.1)
.IP \(bu 2
\fBkeep\-alive\-idle\fP (\fBint\fP, \fIoptional\fP) \-\- time in seconds the connection needs to be idle before
sending a keepalive packet.  Only supported for TCP sockets on systems
where TCP_KEEPIDLE socket option is defined (this includes Linux,
Windows, macOS, FreeBSD, but not OpenBSD).  When set to 0, system setting
is used.  (Since 10.1)
.IP \(bu 2
\fBkeep\-alive\-interval\fP (\fBint\fP, \fIoptional\fP) \-\- time in seconds between keep\-alive packets.  Only
supported for TCP sockets on systems where TCP_KEEPINTVL is defined (this
includes Linux, Windows, macOS, FreeBSD, but not OpenBSD).  When set to
0, system setting is used.  (Since 10.1)
.IP \(bu 2
\fBmptcp\fP (\fBboolean\fP, \fIoptional\fP) \-\- enable multi\-path TCP.  (Since 6.1)
.IP \(bu 2
The members of \fI\%InetSocketAddressBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  UnixSocketAddress  (Since: 1.3)
Captures a socket address in the local (\(dqUnix socket\(dq) namespace.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- filesystem path to use
.IP \(bu 2
\fBabstract\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, this is a Linux abstract socket address.  \fBpath\fP
will be prefixed by a null byte, and optionally padded with null
bytes.  Defaults to false.  (Since 5.1)
.IP \(bu 2
\fBtight\fP (\fBboolean\fP, \fIoptional\fP) \-\- if false, pad an abstract socket address with enough null
bytes to make it fill struct sockaddr_un member sun_path.
Defaults to true.  (Since 5.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VsockSocketAddress  (Since: 2.8)
Captures a socket address in the vsock namespace.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcid\fP (\fBstring\fP) \-\- unique host identifier
.IP \(bu 2
\fBport\fP (\fBstring\fP) \-\- port
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
String types are used to allow for possible future
hostname or service resolution support.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  FdSocketAddress  (Since: 1.2)
A file descriptor name or number.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBstr\fP (\fBstring\fP) \-\- decimal is for file descriptor number, otherwise it\(aqs a file
descriptor name.  Named file descriptors are permitted in
monitor commands, in combination with the \(aqgetfd\(aq command.
Decimal file descriptors are permitted at startup or other
contexts where no monitor context is active.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  InetSocketAddressWrapper  (Since: 1.3)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%InetSocketAddress\fP) \-\- internet domain socket address
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  UnixSocketAddressWrapper  (Since: 1.3)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%UnixSocketAddress\fP) \-\- UNIX domain socket address
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VsockSocketAddressWrapper  (Since: 2.8)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%VsockSocketAddress\fP) \-\- VSOCK domain socket address
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  FdSocketAddressWrapper  (Since: 1.3)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%FdSocketAddress\fP) \-\- file descriptor name or number
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SocketAddressLegacy  (Since: 1.3)
Captures the address of a socket, which could also be a named file
descriptor
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%SocketAddressType\fP) \-\- Transport type
.IP \(bu 2
When \fBtype\fP is \fBinet\fP: The members of \fI\%InetSocketAddressWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBunix\fP: The members of \fI\%UnixSocketAddressWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBvsock\fP: The members of \fI\%VsockSocketAddressWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBfd\fP: The members of \fI\%FdSocketAddressWrapper\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  SocketAddressType  (Since: 2.9)
Available SocketAddress types
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBinet\fP \-\- Internet address
.IP \(bu 2
\fBunix\fP \-\- Unix domain socket
.IP \(bu 2
\fBvsock\fP \-\- VMCI address
.IP \(bu 2
\fBfd\fP \-\- Socket file descriptor
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SocketAddress  (Since: 2.9)
Captures the address of a socket, which could also be a socket file
descriptor
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%SocketAddressType\fP) \-\- Transport type
.IP \(bu 2
When \fBtype\fP is \fBinet\fP: The members of \fI\%InetSocketAddress\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBunix\fP: The members of \fI\%UnixSocketAddress\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBvsock\fP: The members of \fI\%VsockSocketAddress\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBfd\fP: The members of \fI\%FdSocketAddress\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.SH VM RUN STATE
.INDENT 0.0
.TP
.B Enum  RunState
An enumeration of VM run states.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBdebug\fP \-\- QEMU is running on a debugger
.IP \(bu 2
\fBfinish\-migrate\fP \-\- guest is paused to finish the migration process
.IP \(bu 2
\fBinmigrate\fP \-\- guest is paused waiting for an incoming migration.  Note
that this state does not tell whether the machine will start at
the end of the migration.  This depends on the command\-line \-S
option and any invocation of \(aqstop\(aq or \(aqcont\(aq that has happened
since QEMU was started.
.IP \(bu 2
\fBinternal\-error\fP \-\- An internal error that prevents further guest
execution has occurred
.IP \(bu 2
\fBio\-error\fP \-\- the last IOP has failed and the device is configured to
pause on I/O errors
.IP \(bu 2
\fBpaused\fP \-\- guest has been paused via the \(aqstop\(aq command
.IP \(bu 2
\fBpostmigrate\fP \-\- guest is paused following a successful \(aqmigrate\(aq
.IP \(bu 2
\fBprelaunch\fP \-\- QEMU was started with \-S and guest has not started
.IP \(bu 2
\fBrestore\-vm\fP \-\- guest is paused to restore VM state
.IP \(bu 2
\fBrunning\fP \-\- guest is actively running
.IP \(bu 2
\fBsave\-vm\fP \-\- guest is paused to save the VM state
.IP \(bu 2
\fBshutdown\fP \-\- guest is shut down (and \-no\-shutdown is in use)
.IP \(bu 2
\fBsuspended\fP \-\- guest is suspended (ACPI S3)
.IP \(bu 2
\fBwatchdog\fP \-\- the watchdog action is configured to pause and has been
triggered
.IP \(bu 2
\fBguest\-panicked\fP \-\- guest has been panicked as a result of guest OS
panic
.IP \(bu 2
\fBcolo\fP \-\- guest is paused to save/restore VM state under colo
checkpoint, VM can not get into this state unless colo
capability is enabled for migration.  (since 2.8)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  ShutdownCause
An enumeration of reasons for a Shutdown.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnone\fP \-\- No shutdown request pending
.IP \(bu 2
\fBhost\-error\fP \-\- An error prevents further use of guest
.IP \(bu 2
\fBhost\-qmp\-quit\fP \-\- Reaction to the QMP command \(aqquit\(aq
.IP \(bu 2
\fBhost\-qmp\-system\-reset\fP \-\- Reaction to the QMP command \(aqsystem_reset\(aq
.IP \(bu 2
\fBhost\-signal\fP \-\- Reaction to a signal, such as SIGINT
.IP \(bu 2
\fBhost\-ui\fP \-\- Reaction to a UI event, like window close
.IP \(bu 2
\fBguest\-shutdown\fP \-\- Guest shutdown/suspend request, via ACPI or other
hardware\-specific means
.IP \(bu 2
\fBguest\-reset\fP \-\- Guest reset request, and command line turns that into
a shutdown
.IP \(bu 2
\fBguest\-panic\fP \-\- Guest panicked, and command line turns that into a
shutdown
.IP \(bu 2
\fBsubsystem\-reset\fP \-\- Partial guest reset that does not trigger QMP
events and ignores \-\-no\-reboot.  This is useful for sanitizing
hypercalls on s390 that are used during kexec/kdump/boot
.IP \(bu 2
\fBsnapshot\-load\fP \-\- A snapshot is being loaded by the record & replay
subsystem.  This value is used only within QEMU.  It doesn\(aqt
occur in QMP.  (since 7.2)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  StatusInfo  (Since: 0.14)
Information about VM run state
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBrunning\fP (\fBboolean\fP) \-\- true if all VCPUs are runnable, false if not runnable
.IP \(bu 2
\fBstatus\fP (\fI\%RunState\fP) \-\- the virtual machine \fBRunState\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-status  (Since: 0.14)
Query the run status of the VM
.INDENT 7.0
.TP
.B Return
\fI\%StatusInfo\fP \-\- \fBStatusInfo\fP reflecting the VM
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-status\(dq }
<\- { \(dqreturn\(dq: { \(dqrunning\(dq: true,
                 \(dqstatus\(dq: \(dqrunning\(dq } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  SHUTDOWN  (Since: 0.12)
Emitted when the virtual machine has shut down, indicating that qemu
is about to exit.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBguest\fP (\fBboolean\fP) \-\- If true, the shutdown was triggered by a guest request (such
as a guest\-initiated ACPI shutdown request or other
hardware\-specific action) rather than a host request (such as
sending qemu a SIGINT).  (since 2.10)
.IP \(bu 2
\fBreason\fP (\fI\%ShutdownCause\fP) \-\- The \fBShutdownCause\fP which resulted in the SHUTDOWN.
(since 4.0)
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
If the command\-line option \fB\-no\-shutdown\fP has been
specified, qemu will not exit, and a STOP event will eventually
follow the SHUTDOWN event.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqSHUTDOWN\(dq,
     \(dqdata\(dq: { \(dqguest\(dq: true, \(dqreason\(dq: \(dqguest\-shutdown\(dq },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1267040730, \(dqmicroseconds\(dq: 682951 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  POWERDOWN  (Since: 0.12)
Emitted when the virtual machine is powered down through the power
control system, such as via ACPI.
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqPOWERDOWN\(dq,
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1267040730, \(dqmicroseconds\(dq: 682951 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  RESET  (Since: 0.12)
Emitted when the virtual machine is reset
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBguest\fP (\fBboolean\fP) \-\- If true, the reset was triggered by a guest request (such as
a guest\-initiated ACPI reboot request or other hardware\-specific
action) rather than a host request (such as the QMP command
system_reset).  (since 2.10)
.IP \(bu 2
\fBreason\fP (\fI\%ShutdownCause\fP) \-\- The \fBShutdownCause\fP of the RESET.  (since 4.0)
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqRESET\(dq,
     \(dqdata\(dq: { \(dqguest\(dq: false, \(dqreason\(dq: \(dqguest\-reset\(dq },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1267041653, \(dqmicroseconds\(dq: 9518 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  STOP  (Since: 0.12)
Emitted when the virtual machine is stopped
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqSTOP\(dq,
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1267041730, \(dqmicroseconds\(dq: 281295 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  RESUME  (Since: 0.12)
Emitted when the virtual machine resumes execution
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqRESUME\(dq,
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1271770767, \(dqmicroseconds\(dq: 582542 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  SUSPEND  (Since: 1.1)
Emitted when guest enters a hardware suspension state, for example,
S3 state, which is sometimes called standby state
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqSUSPEND\(dq,
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1344456160, \(dqmicroseconds\(dq: 309119 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  SUSPEND_DISK  (Since: 1.2)
Emitted when guest enters a hardware suspension state with data
saved on disk, for example, S4 state, which is sometimes called
hibernate state
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
QEMU shuts down (similar to event \fBSHUTDOWN\fP) when entering
this state.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqSUSPEND_DISK\(dq,
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1344456160, \(dqmicroseconds\(dq: 309119 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  WAKEUP  (Since: 1.1)
Emitted when the guest has woken up from suspend state and is
running
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqWAKEUP\(dq,
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1344522075, \(dqmicroseconds\(dq: 745528 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  WATCHDOG  (Since: 0.13)
Emitted when the watchdog device\(aqs timer is expired
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBaction\fP (\fI\%WatchdogAction\fP) \-\- action that has been taken
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
If action is \(dqreset\(dq, \(dqshutdown\(dq, or \(dqpause\(dq the WATCHDOG
event is followed respectively by the RESET, SHUTDOWN, or STOP
events.
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
This event is rate\-limited.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqWATCHDOG\(dq,
     \(dqdata\(dq: { \(dqaction\(dq: \(dqreset\(dq },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1267061043, \(dqmicroseconds\(dq: 959568 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  WatchdogAction  (Since: 2.1)
An enumeration of the actions taken when the watchdog device\(aqs timer
is expired
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBreset\fP \-\- system resets
.IP \(bu 2
\fBshutdown\fP \-\- system shutdown, note that it is similar to \fBpowerdown\fP,
which tries to set to system status and notify guest
.IP \(bu 2
\fBpoweroff\fP \-\- system poweroff, the emulator program exits
.IP \(bu 2
\fBpause\fP \-\- system pauses, similar to \fBstop\fP
.IP \(bu 2
\fBdebug\fP \-\- system enters debug state
.IP \(bu 2
\fBnone\fP \-\- nothing is done
.IP \(bu 2
\fBinject\-nmi\fP \-\- a non\-maskable interrupt is injected into the first
VCPU (all VCPUS on x86) (since 2.4)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  RebootAction  (Since: 6.0)
Possible QEMU actions upon guest reboot
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBreset\fP \-\- Reset the VM
.IP \(bu 2
\fBshutdown\fP \-\- Shutdown the VM and exit, according to the shutdown
action
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  ShutdownAction  (Since: 6.0)
Possible QEMU actions upon guest shutdown
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBpoweroff\fP \-\- Shutdown the VM and exit
.IP \(bu 2
\fBpause\fP \-\- pause the VM
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  PanicAction  (Since: 6.0)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnone\fP \-\- Continue VM execution
.IP \(bu 2
\fBpause\fP \-\- Pause the VM
.IP \(bu 2
\fBshutdown\fP \-\- Shutdown the VM and exit, according to the shutdown
action
.IP \(bu 2
\fBexit\-failure\fP \-\- Shutdown the VM and exit with nonzero status (since
7.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  watchdog\-set\-action  (Since: 2.11)
Set watchdog action.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBaction\fP (\fI\%WatchdogAction\fP) \-\- \fBWatchdogAction\fP action taken when watchdog timer expires.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqwatchdog\-set\-action\(dq,
     \(dqarguments\(dq: { \(dqaction\(dq: \(dqinject\-nmi\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  set\-action  (Since: 6.0)
Set the actions that will be taken by the emulator in response to
guest events.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBreboot\fP (\fI\%RebootAction\fP, \fIoptional\fP) \-\- \fBRebootAction\fP action taken on guest reboot.
.IP \(bu 2
\fBshutdown\fP (\fI\%ShutdownAction\fP, \fIoptional\fP) \-\- \fBShutdownAction\fP action taken on guest shutdown.
.IP \(bu 2
\fBpanic\fP (\fI\%PanicAction\fP, \fIoptional\fP) \-\- \fBPanicAction\fP action taken on guest panic.
.IP \(bu 2
\fBwatchdog\fP (\fI\%WatchdogAction\fP, \fIoptional\fP) \-\- \fBWatchdogAction\fP action taken when watchdog timer expires.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqset\-action\(dq,
     \(dqarguments\(dq: { \(dqreboot\(dq: \(dqshutdown\(dq,
                    \(dqshutdown\(dq : \(dqpause\(dq,
                    \(dqpanic\(dq: \(dqpause\(dq,
                    \(dqwatchdog\(dq: \(dqinject\-nmi\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  GUEST_PANICKED  (Since: 1.5)
Emitted when guest OS panic is detected
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBaction\fP (\fI\%GuestPanicAction\fP) \-\- action that has been taken, currently always \(dqpause\(dq
.IP \(bu 2
\fBinfo\fP (\fI\%GuestPanicInformation\fP, \fIoptional\fP) \-\- information about a panic (since 2.9)
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqGUEST_PANICKED\(dq,
     \(dqdata\(dq: { \(dqaction\(dq: \(dqpause\(dq },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1648245231, \(dqmicroseconds\(dq: 900001 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  GUEST_CRASHLOADED  (Since: 5.0)
Emitted when guest OS crash loaded is detected
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBaction\fP (\fI\%GuestPanicAction\fP) \-\- action that has been taken, currently always \(dqrun\(dq
.IP \(bu 2
\fBinfo\fP (\fI\%GuestPanicInformation\fP, \fIoptional\fP) \-\- information about a panic
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqGUEST_CRASHLOADED\(dq,
     \(dqdata\(dq: { \(dqaction\(dq: \(dqrun\(dq },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1648245259, \(dqmicroseconds\(dq: 893771 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  GUEST_PVSHUTDOWN  (Since: 9.1)
Emitted when guest submits a shutdown request via pvpanic interface
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqGUEST_PVSHUTDOWN\(dq,
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1648245259, \(dqmicroseconds\(dq: 893771 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  GuestPanicAction  (Since: 2.1)
An enumeration of the actions taken when guest OS panic is detected
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBpause\fP \-\- system pauses
.IP \(bu 2
\fBpoweroff\fP \-\- system powers off (since 2.8)
.IP \(bu 2
\fBrun\fP \-\- system continues to run (since 5.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  GuestPanicInformationType  (Since: 2.9)
An enumeration of the guest panic information types
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBhyper\-v\fP \-\- hyper\-v guest panic information type
.IP \(bu 2
\fBs390\fP \-\- s390 guest panic information type (Since: 2.12)
.IP \(bu 2
\fBtdx\fP \-\- tdx guest panic information type (Since: 10.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  GuestPanicInformation  (Since: 2.9)
Information about a guest panic
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%GuestPanicInformationType\fP) \-\- Crash type that defines the hypervisor specific information
.IP \(bu 2
When \fBtype\fP is \fBhyper\-v\fP: The members of \fI\%GuestPanicInformationHyperV\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBs390\fP: The members of \fI\%GuestPanicInformationS390\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBtdx\fP: The members of \fI\%GuestPanicInformationTdx\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  GuestPanicInformationHyperV  (Since: 2.9)
Hyper\-V specific guest panic information (HV crash MSRs)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBarg1\fP (\fBint\fP) \-\- for Windows, STOP code for the guest crash.  For Linux,
an error code.
.IP \(bu 2
\fBarg2\fP (\fBint\fP) \-\- for Windows, first argument of the STOP.  For Linux, the
guest OS ID, which has the kernel version in bits 16\-47 and
0x8100 in bits 48\-63.
.IP \(bu 2
\fBarg3\fP (\fBint\fP) \-\- for Windows, second argument of the STOP.  For Linux, the
program counter of the guest.
.IP \(bu 2
\fBarg4\fP (\fBint\fP) \-\- for Windows, third argument of the STOP.  For Linux, the
RAX register (x86) or the stack pointer (aarch64) of the guest.
.IP \(bu 2
\fBarg5\fP (\fBint\fP) \-\- for Windows, fourth argument of the STOP.  For x86 Linux, the
stack pointer of the guest.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  S390CrashReason  (Since: 2.12)
Reason why the CPU is in a crashed state.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBunknown\fP \-\- no crash reason was set
.IP \(bu 2
\fBdisabled\-wait\fP \-\- the CPU has entered a disabled wait state
.IP \(bu 2
\fBextint\-loop\fP \-\- clock comparator or cpu timer interrupt with new PSW
enabled for external interrupts
.IP \(bu 2
\fBpgmint\-loop\fP \-\- program interrupt with BAD new PSW
.IP \(bu 2
\fBopint\-loop\fP \-\- operation exception interrupt with invalid code at the
program interrupt new PSW
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  GuestPanicInformationS390  (Since: 2.12)
S390 specific guest panic information (PSW)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcore\fP (\fBint\fP) \-\- core id of the CPU that crashed
.IP \(bu 2
\fBpsw\-mask\fP (\fBint\fP) \-\- control fields of guest PSW
.IP \(bu 2
\fBpsw\-addr\fP (\fBint\fP) \-\- guest instruction address
.IP \(bu 2
\fBreason\fP (\fI\%S390CrashReason\fP) \-\- guest crash reason
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  GuestPanicInformationTdx  (Since: 10.1)
TDX Guest panic information specific to TDX, as specified in the
\(dqGuest\-Hypervisor Communication Interface (GHCI) Specification\(dq,
section TDG.VP.VMCALL<ReportFatalError>.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBerror\-code\fP (\fBint\fP) \-\- TD\-specific error code
.IP \(bu 2
\fBmessage\fP (\fBstring\fP) \-\- Human\-readable error message provided by the guest. Not
to be trusted.
.IP \(bu 2
\fBgpa\fP (\fBint\fP, \fIoptional\fP) \-\- guest\-physical address of a page that contains more verbose
error information, as zero\-terminated string.  Present when the
\(dqGPA valid\(dq bit (bit 63) is set in \fBerror\-code\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  MEMORY_FAILURE  (Since: 5.2)
Emitted when a memory failure occurs on host side.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBrecipient\fP (\fI\%MemoryFailureRecipient\fP) \-\- recipient is defined as \fBMemoryFailureRecipient\fP\&.
.IP \(bu 2
\fBaction\fP (\fI\%MemoryFailureAction\fP) \-\- action that has been taken.
.IP \(bu 2
\fBflags\fP (\fI\%MemoryFailureFlags\fP) \-\- flags for MemoryFailureAction.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqMEMORY_FAILURE\(dq,
     \(dqdata\(dq: { \(dqrecipient\(dq: \(dqhypervisor\(dq,
               \(dqaction\(dq: \(dqfatal\(dq,
               \(dqflags\(dq: { \(dqaction\-required\(dq: false,
                          \(dqrecursive\(dq: false } },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1267061043, \(dqmicroseconds\(dq: 959568 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  MemoryFailureRecipient  (Since: 5.2)
Hardware memory failure occurs, handled by recipient.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBhypervisor\fP \-\- memory failure at QEMU process address space.  (none
guest memory, but used by QEMU itself).
.IP \(bu 2
\fBguest\fP \-\- memory failure at guest memory,
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  MemoryFailureAction  (Since: 5.2)
Actions taken by QEMU in response to a hardware memory failure.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBignore\fP \-\- the memory failure could be ignored.  This will only be the
case for action\-optional failures.
.IP \(bu 2
\fBinject\fP \-\- memory failure occurred in guest memory, the guest enabled
MCE handling mechanism, and QEMU could inject the MCE into the
guest successfully.
.IP \(bu 2
\fBfatal\fP \-\- the failure is unrecoverable.  This occurs for
action\-required failures if the recipient is the hypervisor;
QEMU will exit.
.IP \(bu 2
\fBreset\fP \-\- the failure is unrecoverable but confined to the guest.
This occurs if the recipient is a guest guest which is not ready
to handle memory failures.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MemoryFailureFlags  (Since: 5.2)
Additional information on memory failures.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBaction\-required\fP (\fBboolean\fP) \-\- whether a memory failure event is action\-required
or action\-optional (e.g. a failure during memory scrub).
.IP \(bu 2
\fBrecursive\fP (\fBboolean\fP) \-\- whether the failure occurred while the previous failure
was still in progress.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  NotifyVmexitOption  (Since: 7.2)
An enumeration of the options specified when enabling notify VM exit
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBrun\fP \-\- enable the feature, do nothing and continue if the notify VM
exit happens.
.IP \(bu 2
\fBinternal\-error\fP \-\- enable the feature, raise a internal error if the
notify VM exit happens.
.IP \(bu 2
\fBdisable\fP \-\- disable the feature.
.UNINDENT
.UNINDENT
.UNINDENT
.SH CRYPTOGRAPHY
.INDENT 0.0
.TP
.B Enum  QCryptoTLSCredsEndpoint  (Since: 2.5)
The type of network endpoint that will be using the credentials.
Most types of credential require different setup / structures
depending on whether they will be used in a server versus a client.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBclient\fP \-\- the network endpoint is acting as the client
.IP \(bu 2
\fBserver\fP \-\- the network endpoint is acting as the server
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QCryptoSecretFormat  (Since: 2.6)
The data format that the secret is provided in
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBraw\fP \-\- raw bytes.  When encoded in JSON only valid UTF\-8 sequences
can be used
.IP \(bu 2
\fBbase64\fP \-\- arbitrary base64 encoded binary data
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QCryptoHashAlgo  (Since: 2.6)
The supported algorithms for computing content digests
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBmd5\fP \-\- MD5.  Should not be used in any new code, legacy compat only
.IP \(bu 2
\fBsha1\fP \-\- SHA\-1.  Should not be used in any new code, legacy compat only
.IP \(bu 2
\fBsha224\fP \-\- SHA\-224.  (since 2.7)
.IP \(bu 2
\fBsha256\fP \-\- SHA\-256.  Current recommended strong hash.
.IP \(bu 2
\fBsha384\fP \-\- SHA\-384.  (since 2.7)
.IP \(bu 2
\fBsha512\fP \-\- SHA\-512.  (since 2.7)
.IP \(bu 2
\fBripemd160\fP \-\- RIPEMD\-160.  (since 2.7)
.IP \(bu 2
\fBsm3\fP \-\- SM3. (since 9.2.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QCryptoCipherAlgo  (Since: 2.6)
The supported algorithms for content encryption ciphers
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBaes\-128\fP \-\- AES with 128 bit / 16 byte keys
.IP \(bu 2
\fBaes\-192\fP \-\- AES with 192 bit / 24 byte keys
.IP \(bu 2
\fBaes\-256\fP \-\- AES with 256 bit / 32 byte keys
.IP \(bu 2
\fBdes\fP \-\- DES with 56 bit / 8 byte keys.  Do not use except in VNC.
(since 6.1)
.IP \(bu 2
\fB3des\fP \-\- 3DES(EDE) with 192 bit / 24 byte keys (since 2.9)
.IP \(bu 2
\fBcast5\-128\fP \-\- Cast5 with 128 bit / 16 byte keys
.IP \(bu 2
\fBserpent\-128\fP \-\- Serpent with 128 bit / 16 byte keys
.IP \(bu 2
\fBserpent\-192\fP \-\- Serpent with 192 bit / 24 byte keys
.IP \(bu 2
\fBserpent\-256\fP \-\- Serpent with 256 bit / 32 byte keys
.IP \(bu 2
\fBtwofish\-128\fP \-\- Twofish with 128 bit / 16 byte keys
.IP \(bu 2
\fBtwofish\-192\fP \-\- Twofish with 192 bit / 24 byte keys
.IP \(bu 2
\fBtwofish\-256\fP \-\- Twofish with 256 bit / 32 byte keys
.IP \(bu 2
\fBsm4\fP \-\- SM4 with 128 bit / 16 byte keys (since 9.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QCryptoCipherMode  (Since: 2.6)
The supported modes for content encryption ciphers
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBecb\fP \-\- Electronic Code Book
.IP \(bu 2
\fBcbc\fP \-\- Cipher Block Chaining
.IP \(bu 2
\fBxts\fP \-\- XEX with tweaked code book and ciphertext stealing
.IP \(bu 2
\fBctr\fP \-\- Counter (Since 2.8)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QCryptoIVGenAlgo  (Since: 2.6)
The supported algorithms for generating initialization vectors for
full disk encryption.  The \(aqplain\(aq generator should not be used for
disks with sector numbers larger than 2^32, except where
compatibility with pre\-existing Linux dm\-crypt volumes is required.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBplain\fP \-\- 64\-bit sector number truncated to 32\-bits
.IP \(bu 2
\fBplain64\fP \-\- 64\-bit sector number
.IP \(bu 2
\fBessiv\fP \-\- 64\-bit sector number encrypted with a hash of the encryption
key
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QCryptoBlockFormat  (Since: 2.6)
The supported full disk encryption formats
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBqcow\fP \-\- QCow/QCow2 built\-in AES\-CBC encryption.  Use only for
liberating data from old images.
.IP \(bu 2
\fBluks\fP \-\- LUKS encryption format.  Recommended for new images
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockOptionsBase  (Since: 2.6)
The common options that apply to all full disk encryption formats
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBformat\fP (\fI\%QCryptoBlockFormat\fP) \-\- the encryption format
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockOptionsQCow  (Since: 2.6)
The options that apply to QCow/QCow2 AES\-CBC encryption format
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBkey\-secret\fP (\fBstring\fP, \fIoptional\fP) \-\- the ID of a QCryptoSecret object providing the
decryption key.  Mandatory except when probing image for
metadata only.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockOptionsLUKS  (Since: 2.6)
The options that apply to LUKS encryption format
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBkey\-secret\fP (\fBstring\fP, \fIoptional\fP) \-\- the ID of a QCryptoSecret object providing the
decryption key.  Mandatory except when probing image for
metadata only.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockCreateOptionsLUKS  (Since: 2.6)
The options that apply to LUKS encryption format initialization
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcipher\-alg\fP (\fI\%QCryptoCipherAlgo\fP, \fIoptional\fP) \-\- the cipher algorithm for data encryption Currently
defaults to \(aqaes\-256\(aq.
.IP \(bu 2
\fBcipher\-mode\fP (\fI\%QCryptoCipherMode\fP, \fIoptional\fP) \-\- the cipher mode for data encryption Currently defaults
to \(aqxts\(aq
.IP \(bu 2
\fBivgen\-alg\fP (\fI\%QCryptoIVGenAlgo\fP, \fIoptional\fP) \-\- the initialization vector generator Currently defaults
to \(aqplain64\(aq
.IP \(bu 2
\fBivgen\-hash\-alg\fP (\fI\%QCryptoHashAlgo\fP, \fIoptional\fP) \-\- the initialization vector generator hash Currently
defaults to \(aqsha256\(aq
.IP \(bu 2
\fBhash\-alg\fP (\fI\%QCryptoHashAlgo\fP, \fIoptional\fP) \-\- the master key hash algorithm Currently defaults to
\(aqsha256\(aq
.IP \(bu 2
\fBiter\-time\fP (\fBint\fP, \fIoptional\fP) \-\- number of milliseconds to spend in PBKDF passphrase
processing.  Currently defaults to 2000.  (since 2.8)
.IP \(bu 2
The members of \fI\%QCryptoBlockOptionsLUKS\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockOpenOptions  (Since: 2.6)
The options that are available for all encryption formats when
opening an existing volume
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%QCryptoBlockOptionsBase\fP\&.
.IP \(bu 2
When \fBformat\fP is \fBqcow\fP: The members of \fI\%QCryptoBlockOptionsQCow\fP\&.
.IP \(bu 2
When \fBformat\fP is \fBluks\fP: The members of \fI\%QCryptoBlockOptionsLUKS\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockCreateOptions  (Since: 2.6)
The options that are available for all encryption formats when
initializing a new volume
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%QCryptoBlockOptionsBase\fP\&.
.IP \(bu 2
When \fBformat\fP is \fBqcow\fP: The members of \fI\%QCryptoBlockOptionsQCow\fP\&.
.IP \(bu 2
When \fBformat\fP is \fBluks\fP: The members of \fI\%QCryptoBlockCreateOptionsLUKS\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockInfoBase  (Since: 2.7)
The common information that applies to all full disk encryption
formats
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBformat\fP (\fI\%QCryptoBlockFormat\fP) \-\- the encryption format
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockInfoLUKSSlot  (Since: 2.7)
Information about the LUKS block encryption key slot options
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBactive\fP (\fBboolean\fP) \-\- whether the key slot is currently in use
.IP \(bu 2
\fBkey\-offset\fP (\fBint\fP) \-\- offset to the key material in bytes
.IP \(bu 2
\fBiters\fP (\fBint\fP, \fIoptional\fP) \-\- number of PBKDF2 iterations for key material
.IP \(bu 2
\fBstripes\fP (\fBint\fP, \fIoptional\fP) \-\- number of stripes for splitting key material
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockInfoLUKS  (Since: 2.7)
Information about the LUKS block encryption options
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcipher\-alg\fP (\fI\%QCryptoCipherAlgo\fP) \-\- the cipher algorithm for data encryption
.IP \(bu 2
\fBcipher\-mode\fP (\fI\%QCryptoCipherMode\fP) \-\- the cipher mode for data encryption
.IP \(bu 2
\fBivgen\-alg\fP (\fI\%QCryptoIVGenAlgo\fP) \-\- the initialization vector generator
.IP \(bu 2
\fBivgen\-hash\-alg\fP (\fI\%QCryptoHashAlgo\fP, \fIoptional\fP) \-\- the initialization vector generator hash
.IP \(bu 2
\fBhash\-alg\fP (\fI\%QCryptoHashAlgo\fP) \-\- the master key hash algorithm
.IP \(bu 2
\fBdetached\-header\fP (\fBboolean\fP) \-\- whether the LUKS header is detached (Since 9.0)
.IP \(bu 2
\fBpayload\-offset\fP (\fBint\fP) \-\- offset to the payload data in bytes
.IP \(bu 2
\fBmaster\-key\-iters\fP (\fBint\fP) \-\- number of PBKDF2 iterations for key material
.IP \(bu 2
\fBuuid\fP (\fBstring\fP) \-\- unique identifier for the volume
.IP \(bu 2
\fBslots\fP (\fB[\fP\fI\%QCryptoBlockInfoLUKSSlot\fP\fB]\fP) \-\- information about each key slot
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockInfo  (Since: 2.7)
Information about the block encryption options
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%QCryptoBlockInfoBase\fP\&.
.IP \(bu 2
When \fBformat\fP is \fBluks\fP: The members of \fI\%QCryptoBlockInfoLUKS\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QCryptoBlockLUKSKeyslotState  (Since: 5.1)
Defines state of keyslots that are affected by the update
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBactive\fP \-\- The slots contain the given password and marked as active
.IP \(bu 2
\fBinactive\fP \-\- The slots are erased (contain garbage) and marked as
inactive
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockAmendOptionsLUKS  (Since: 5.1)
This struct defines the update parameters that activate/de\-activate
set of keyslots
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBstate\fP (\fI\%QCryptoBlockLUKSKeyslotState\fP) \-\- the desired state of the keyslots
.IP \(bu 2
\fBnew\-secret\fP (\fBstring\fP, \fIoptional\fP) \-\- The ID of a QCryptoSecret object providing the password
to be written into added active keyslots
.IP \(bu 2
\fBold\-secret\fP (\fBstring\fP, \fIoptional\fP) \-\- Optional (for deactivation only) If given will
deactivate all keyslots that match password located in
QCryptoSecret with this ID
.IP \(bu 2
\fBiter\-time\fP (\fBint\fP, \fIoptional\fP) \-\- Optional (for activation only) Number of milliseconds to
spend in PBKDF passphrase processing for the newly activated
keyslot.  Currently defaults to 2000.
.IP \(bu 2
\fBkeyslot\fP (\fBint\fP, \fIoptional\fP) \-\- 
.sp
Optional.  ID of the keyslot to activate/deactivate.  For
keyslot activation, keyslot should not be active already (this
is unsafe to update an active keyslot), but possible if \(aqforce\(aq
parameter is given.  If keyslot is not given, first free keyslot
will be written.
.sp
For keyslot deactivation, this parameter specifies the exact
keyslot to deactivate

.IP \(bu 2
\fBsecret\fP (\fBstring\fP, \fIoptional\fP) \-\- Optional.  The ID of a QCryptoSecret object providing the
password to use to retrieve current master key.  Defaults to the
same secret that was used to open the image
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoBlockAmendOptions  (Since: 5.1)
The options that are available for all encryption formats when
amending encryption settings
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%QCryptoBlockOptionsBase\fP\&.
.IP \(bu 2
When \fBformat\fP is \fBluks\fP: The members of \fI\%QCryptoBlockAmendOptionsLUKS\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SecretCommonProperties  (Since: 2.6)
Properties for objects of classes derived from secret\-common.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBformat\fP (\fI\%QCryptoSecretFormat\fP, \fIoptional\fP) \-\- the data format that the secret is provided in
(default: raw)
.IP \(bu 2
\fBkeyid\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of another secret that should be used to decrypt
the provided data.  If not present, the data is assumed to be
unencrypted.
.IP \(bu 2
\fBiv\fP (\fBstring\fP, \fIoptional\fP) \-\- the random initialization vector used for encryption of this
particular secret.  Should be a base64 encrypted string of the
16\-byte IV.  Mandatory if \fBkeyid\fP is given.  Ignored if \fBkeyid\fP is
absent.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SecretProperties  (Since: 2.6)
Properties for secret objects.
.sp
Either \fBdata\fP or \fBfile\fP must be provided, but not both.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fBstring\fP, \fIoptional\fP) \-\- the associated with the secret from
.IP \(bu 2
\fBfile\fP (\fBstring\fP, \fIoptional\fP) \-\- the filename to load the data associated with the secret from
.IP \(bu 2
The members of \fI\%SecretCommonProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SecretKeyringProperties  (Since: 5.1)
\fIAvailability\fP: \fBCONFIG_SECRET_KEYRING\fP
.sp
Properties for secret_keyring objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBserial\fP (\fBint\fP) \-\- serial number that identifies a key to get from the kernel
.IP \(bu 2
The members of \fI\%SecretCommonProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  TlsCredsProperties  (Since: 2.5)
Properties for objects of classes derived from tls\-creds.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBverify\-peer\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true the peer credentials will be verified once the
handshake is completed.  This is a no\-op for anonymous
credentials.  (default: true)
.IP \(bu 2
\fBdir\fP (\fBstring\fP, \fIoptional\fP) \-\- the path of the directory that contains the credential files
.IP \(bu 2
\fBendpoint\fP (\fI\%QCryptoTLSCredsEndpoint\fP, \fIoptional\fP) \-\- whether the QEMU network backend that uses the
credentials will be acting as a client or as a server
(default: client)
.IP \(bu 2
\fBpriority\fP (\fBstring\fP, \fIoptional\fP) \-\- a gnutls priority string as described at
\fI\%https://gnutls.org/manual/html_node/Priority\-Strings.html\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  TlsCredsAnonProperties  (Since: 2.5)
Properties for tls\-creds\-anon objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%TlsCredsProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  TlsCredsPskProperties  (Since: 3.0)
Properties for tls\-creds\-psk objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBusername\fP (\fBstring\fP, \fIoptional\fP) \-\- the username which will be sent to the server.  For
clients only.  If absent, \(dqqemu\(dq is sent and the property will
read back as an empty string.
.IP \(bu 2
The members of \fI\%TlsCredsProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  TlsCredsX509Properties  (Since: 2.5)
Properties for tls\-creds\-x509 objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsanity\-check\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, perform some sanity checks before using the
credentials (default: true)
.IP \(bu 2
\fBpasswordid\fP (\fBstring\fP, \fIoptional\fP) \-\- For the server\-key.pem and client\-key.pem files which
contain sensitive private keys, it is possible to use an
encrypted version by providing the \fBpasswordid\fP parameter.  This
provides the ID of a previously created secret object containing
the password for decryption.
.IP \(bu 2
The members of \fI\%TlsCredsProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QCryptoAkCipherAlgo  (Since: 7.1)
The supported algorithms for asymmetric encryption ciphers
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBrsa\fP \-\- RSA algorithm
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QCryptoAkCipherKeyType  (Since: 7.1)
The type of asymmetric keys.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBpublic\fP \-\- public key
.IP \(bu 2
\fBprivate\fP \-\- private key
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QCryptoRSAPaddingAlgo  (Since: 7.1)
The padding algorithm for RSA.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBraw\fP \-\- no padding used
.IP \(bu 2
\fBpkcs1\fP \-\- pkcs1#v1.5
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoAkCipherOptionsRSA  (Since: 7.1)
Specific parameters for RSA algorithm.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBhash\-alg\fP (\fI\%QCryptoHashAlgo\fP) \-\- QCryptoHashAlgo
.IP \(bu 2
\fBpadding\-alg\fP (\fI\%QCryptoRSAPaddingAlgo\fP) \-\- QCryptoRSAPaddingAlgo
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptoAkCipherOptions  (Since: 7.1)
The options that are available for all asymmetric key algorithms
when creating a new QCryptoAkCipher.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBalg\fP (\fI\%QCryptoAkCipherAlgo\fP) \-\- encryption cipher algorithm
.IP \(bu 2
When \fBalg\fP is \fBrsa\fP: The members of \fI\%QCryptoAkCipherOptionsRSA\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.SH BACKGROUND JOBS
.INDENT 0.0
.TP
.B Enum  JobType  (Since: 1.7)
Type of a background job.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBcommit\fP \-\- block commit job type, see \(dqblock\-commit\(dq
.IP \(bu 2
\fBstream\fP \-\- block stream job type, see \(dqblock\-stream\(dq
.IP \(bu 2
\fBmirror\fP \-\- drive mirror job type, see \(dqdrive\-mirror\(dq
.IP \(bu 2
\fBbackup\fP \-\- drive backup job type, see \(dqdrive\-backup\(dq
.IP \(bu 2
\fBcreate\fP \-\- image creation job type, see \(dqblockdev\-create\(dq (since 3.0)
.IP \(bu 2
\fBamend\fP \-\- image options amend job type, see \(dqx\-blockdev\-amend\(dq (since
5.1)
.IP \(bu 2
\fBsnapshot\-load\fP \-\- snapshot load job type, see \(dqsnapshot\-load\(dq (since
6.0)
.IP \(bu 2
\fBsnapshot\-save\fP \-\- snapshot save job type, see \(dqsnapshot\-save\(dq (since
6.0)
.IP \(bu 2
\fBsnapshot\-delete\fP \-\- snapshot delete job type, see \(dqsnapshot\-delete\(dq
(since 6.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  JobStatus  (Since: 2.12)
Indicates the present state of a given job in its lifetime.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBundefined\fP \-\- Erroneous, default state.  Should not ever be visible.
.IP \(bu 2
\fBcreated\fP \-\- The job has been created, but not yet started.
.IP \(bu 2
\fBrunning\fP \-\- The job is currently running.
.IP \(bu 2
\fBpaused\fP \-\- The job is running, but paused.  The pause may be requested
by either the QMP user or by internal processes.
.IP \(bu 2
\fBready\fP \-\- The job is running, but is ready for the user to signal
completion.  This is used for long\-running jobs like mirror that
are designed to run indefinitely.
.IP \(bu 2
\fBstandby\fP \-\- The job is ready, but paused.  This is nearly identical to
\fBpaused\fP\&.  The job may return to \fBready\fP or otherwise be canceled.
.IP \(bu 2
\fBwaiting\fP \-\- The job is waiting for other jobs in the transaction to
converge to the waiting state.  This status will likely not be
visible for the last job in a transaction.
.IP \(bu 2
\fBpending\fP \-\- The job has finished its work, but has finalization steps
that it needs to make prior to completing.  These changes will
require manual intervention via \fBjob\-finalize\fP if auto\-finalize
was set to false.  These pending changes may still fail.
.IP \(bu 2
\fBaborting\fP \-\- The job is in the process of being aborted, and will
finish with an error.  The job will afterwards report that it is
\fBconcluded\fP\&.  This status may not be visible to the management
process.
.IP \(bu 2
\fBconcluded\fP \-\- The job has finished all work.  If auto\-dismiss was set
to false, the job will remain in the query list until it is
dismissed via \fBjob\-dismiss\fP\&.
.IP \(bu 2
\fBnull\fP \-\- The job is in the process of being dismantled.  This state
should not ever be visible externally.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  JobVerb  (Since: 2.12)
Represents command verbs that can be applied to a job.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBcancel\fP \-\- see \fBjob\-cancel\fP
.IP \(bu 2
\fBpause\fP \-\- see \fBjob\-pause\fP
.IP \(bu 2
\fBresume\fP \-\- see \fBjob\-resume\fP
.IP \(bu 2
\fBset\-speed\fP \-\- see \fBblock\-job\-set\-speed\fP
.IP \(bu 2
\fBcomplete\fP \-\- see \fBjob\-complete\fP
.IP \(bu 2
\fBdismiss\fP \-\- see \fBjob\-dismiss\fP
.IP \(bu 2
\fBfinalize\fP \-\- see \fBjob\-finalize\fP
.IP \(bu 2
\fBchange\fP \-\- see \fBblock\-job\-change\fP (since 8.2)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  JOB_STATUS_CHANGE  (Since: 3.0)
Emitted when a job transitions to a different status.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The job identifier
.IP \(bu 2
\fBstatus\fP (\fI\%JobStatus\fP) \-\- The new job status
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  job\-pause  (Since: 3.0)
Pause an active job.
.sp
This command returns immediately after marking the active job for
pausing.  Pausing an already paused job is an error.
.sp
The job will pause as soon as possible, which means transitioning
into the PAUSED state if it was RUNNING, or into STANDBY if it was
READY.  The corresponding JOB_STATUS_CHANGE event will be emitted.
.sp
Cancelling a paused job automatically resumes it.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The job identifier.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  job\-resume  (Since: 3.0)
Resume a paused job.
.sp
This command returns immediately after resuming a paused job.
Resuming an already running job is an error.
.sp
This command also clears the error status for block\-jobs (stream,
commit, mirror, backup).
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The job identifier.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  job\-cancel  (Since: 3.0)
Instruct an active background job to cancel at the next opportunity.
This command returns immediately after marking the active job for
cancellation.
.sp
The job will cancel as soon as possible and then emit a
JOB_STATUS_CHANGE event.  Usually, the status will change to
ABORTING, but it is possible that a job successfully completes (e.g.
because it was almost done and there was no opportunity to cancel
earlier than completing the job) and transitions to PENDING instead.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The job identifier.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  job\-complete  (Since: 3.0)
Manually trigger completion of an active job in the READY or STANDBY
state.  Completing the job in any other state is an error.
.sp
This is supported only for drive mirroring, where it also switches
the device to write to the target path only. Note that drive
mirroring includes drive\-mirror, blockdev\-mirror and block\-commit
job (only in case of \(dqactive commit\(dq, when the node being commited
is used by the guest). The ability to complete is signaled with a
BLOCK_JOB_READY event.
.sp
This command completes an active background block operation
synchronously.  The ordering of this command\(aqs return with the
BLOCK_JOB_COMPLETED event is not defined.  Note that if an I/O error
occurs during the processing of this command: 1) the command itself
will fail; 2) the error will be processed according to the
rerror/werror arguments that were specified when starting the
operation.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The job identifier.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  job\-dismiss  (Since: 3.0)
Deletes a job that is in the CONCLUDED state.  This command only
needs to be run explicitly for jobs that don\(aqt have automatic
dismiss enabled. In turn, automatic dismiss may be enabled only
for jobs that have \fBauto\-dismiss\fP option, which are drive\-backup,
blockdev\-backup, drive\-mirror, blockdev\-mirror, block\-commit and
block\-stream. \fBauto\-dismiss\fP is enabled by default for these
jobs.
.sp
This command will refuse to operate on any job that has not yet
reached its terminal state, JOB_STATUS_CONCLUDED.  For jobs that
make use of JOB_READY event, job\-cancel or job\-complete will still
need to be used as appropriate.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The job identifier.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  job\-finalize  (Since: 3.0)
Instructs all jobs in a transaction (or a single job if it is not
part of any transaction) to finalize any graph changes and do any
necessary cleanup.  This command requires that all involved jobs are
in the PENDING state.
.sp
For jobs in a transaction, instructing one job to finalize will
force ALL jobs in the transaction to finalize, so it is only
necessary to instruct a single member job to finalize.
.sp
The command is applicable only to jobs which have \fBauto\-finalize\fP option
and only when this option is set to false.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The identifier of any job in the transaction, or of a job that
is not part of any transaction.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  JobInfo  (Since: 3.0)
Information about a job.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The job identifier
.IP \(bu 2
\fBtype\fP (\fI\%JobType\fP) \-\- The kind of job that is being performed
.IP \(bu 2
\fBstatus\fP (\fI\%JobStatus\fP) \-\- Current job state/status
.IP \(bu 2
\fBcurrent\-progress\fP (\fBint\fP) \-\- Progress made until now.  The unit is arbitrary
and the value can only meaningfully be used for the ratio of
\fBcurrent\-progress\fP to \fBtotal\-progress\fP\&.  The value is
monotonically increasing.
.IP \(bu 2
\fBtotal\-progress\fP (\fBint\fP) \-\- Estimated \fBcurrent\-progress\fP value at the completion
of the job.  This value can arbitrarily change while the job is
running, in both directions.
.IP \(bu 2
\fBerror\fP (\fBstring\fP, \fIoptional\fP) \-\- 
.sp
If this field is present, the job failed; if it is still
missing in the CONCLUDED state, this indicates successful
completion.
.sp
The value is a human\-readable error message to describe the
reason for the job failure.  It should not be parsed by
applications.

.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-jobs  (Since: 3.0)
Return information about jobs.
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%JobInfo\fP\fB]\fP \-\- a list with a \fBJobInfo\fP for each active job
.UNINDENT
.UNINDENT
.SH BLOCK DEVICES
.SS Block core (VM unrelated)
.INDENT 0.0
.TP
.B Object  SnapshotInfo  (Since: 1.3)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- unique snapshot id
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- user chosen name
.IP \(bu 2
\fBvm\-state\-size\fP (\fBint\fP) \-\- size of the VM state
.IP \(bu 2
\fBdate\-sec\fP (\fBint\fP) \-\- UTC date of the snapshot in seconds
.IP \(bu 2
\fBdate\-nsec\fP (\fBint\fP) \-\- fractional part in nano seconds to be used with date\-sec
.IP \(bu 2
\fBvm\-clock\-sec\fP (\fBint\fP) \-\- VM clock relative to boot in seconds
.IP \(bu 2
\fBvm\-clock\-nsec\fP (\fBint\fP) \-\- fractional part in nano seconds to be used with
vm\-clock\-sec
.IP \(bu 2
\fBicount\fP (\fBint\fP, \fIoptional\fP) \-\- Current instruction count.  Appears when execution
record/replay is enabled.  Used for \(dqtime\-traveling\(dq to match
the moment in the recorded execution with the snapshots.  This
counter may be obtained through \fBquery\-replay\fP command (since
5.2)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecificQCow2EncryptionBase  (Since: 2.10)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBformat\fP (\fI\%BlockdevQcow2EncryptionFormat\fP) \-\- The encryption format
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecificQCow2Encryption  (Since: 2.10)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%ImageInfoSpecificQCow2EncryptionBase\fP\&.
.IP \(bu 2
When \fBformat\fP is \fBluks\fP: The members of \fI\%QCryptoBlockInfoLUKS\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecificQCow2  (Since: 1.7)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcompat\fP (\fBstring\fP) \-\- compatibility level
.IP \(bu 2
\fBdata\-file\fP (\fBstring\fP, \fIoptional\fP) \-\- the filename of the external data file that is stored in
the image and used as a default for opening the image
(since: 4.0)
.IP \(bu 2
\fBdata\-file\-raw\fP (\fBboolean\fP, \fIoptional\fP) \-\- True if the external data file must stay valid as a
standalone (read\-only) raw image without looking at qcow2
metadata (since: 4.0)
.IP \(bu 2
\fBextended\-l2\fP (\fBboolean\fP, \fIoptional\fP) \-\- true if the image has extended L2 entries; only valid
for compat >= 1.1 (since 5.2)
.IP \(bu 2
\fBlazy\-refcounts\fP (\fBboolean\fP, \fIoptional\fP) \-\- on or off; only valid for compat >= 1.1
.IP \(bu 2
\fBcorrupt\fP (\fBboolean\fP, \fIoptional\fP) \-\- true if the image has been marked corrupt; only valid for
compat >= 1.1 (since 2.2)
.IP \(bu 2
\fBrefcount\-bits\fP (\fBint\fP) \-\- width of a refcount entry in bits (since 2.3)
.IP \(bu 2
\fBencrypt\fP (\fI\%ImageInfoSpecificQCow2Encryption\fP, \fIoptional\fP) \-\- details about encryption parameters; only set if image is
encrypted (since 2.10)
.IP \(bu 2
\fBbitmaps\fP (\fB[\fP\fI\%Qcow2BitmapInfo\fP\fB]\fP, \fIoptional\fP) \-\- A list of qcow2 bitmap details (since 4.0)
.IP \(bu 2
\fBcompression\-type\fP (\fI\%Qcow2CompressionType\fP) \-\- the image cluster compression method (since 5.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecificVmdk  (Since: 1.7)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcreate\-type\fP (\fBstring\fP) \-\- The create type of VMDK image
.IP \(bu 2
\fBcid\fP (\fBint\fP) \-\- Content id of image
.IP \(bu 2
\fBparent\-cid\fP (\fBint\fP) \-\- Parent VMDK image\(aqs cid
.IP \(bu 2
\fBextents\fP (\fB[\fP\fI\%VmdkExtentInfo\fP\fB]\fP) \-\- List of extent files
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VmdkExtentInfo  (Since: 8.0)
Information about a VMDK extent file
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- Name of the extent file
.IP \(bu 2
\fBformat\fP (\fBstring\fP) \-\- Extent type (e.g. FLAT or SPARSE)
.IP \(bu 2
\fBvirtual\-size\fP (\fBint\fP) \-\- Number of bytes covered by this extent
.IP \(bu 2
\fBcluster\-size\fP (\fBint\fP, \fIoptional\fP) \-\- Cluster size in bytes (for non\-flat extents)
.IP \(bu 2
\fBcompressed\fP (\fBboolean\fP, \fIoptional\fP) \-\- Whether this extent contains compressed data
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecificRbd  (Since: 6.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBencryption\-format\fP (\fI\%RbdImageEncryptionFormat\fP, \fIoptional\fP) \-\- Image encryption format
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecificFile  (Since: 8.0)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBextent\-size\-hint\fP (\fBint\fP, \fIoptional\fP) \-\- Extent size hint (if available)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  ImageInfoSpecificKind  (Since: 1.7)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBluks\fP \-\- Since 2.7
.IP \(bu 2
\fBrbd\fP \-\- Since 6.1
.IP \(bu 2
\fBfile\fP \-\- Since 8.0
.IP \(bu 2
\fBqcow2\fP \-\- Not documented
.IP \(bu 2
\fBvmdk\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecificQCow2Wrapper  (Since: 1.7)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ImageInfoSpecificQCow2\fP) \-\- image information specific to QCOW2
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecificVmdkWrapper  (Since: 6.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ImageInfoSpecificVmdk\fP) \-\- image information specific to VMDK
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecificLUKSWrapper  (Since: 2.7)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%QCryptoBlockInfoLUKS\fP) \-\- image information specific to LUKS
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecificRbdWrapper  (Since: 6.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ImageInfoSpecificRbd\fP) \-\- image information specific to RBD
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecificFileWrapper  (Since: 8.0)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ImageInfoSpecificFile\fP) \-\- image information specific to files
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfoSpecific  (Since: 1.7)
A discriminated record of image format specific information
structures.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%ImageInfoSpecificKind\fP) \-\- block driver name
.IP \(bu 2
When \fBtype\fP is \fBqcow2\fP: The members of \fI\%ImageInfoSpecificQCow2Wrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBvmdk\fP: The members of \fI\%ImageInfoSpecificVmdkWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBluks\fP: The members of \fI\%ImageInfoSpecificLUKSWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBrbd\fP: The members of \fI\%ImageInfoSpecificRbdWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBfile\fP: The members of \fI\%ImageInfoSpecificFileWrapper\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockNodeInfo  (Since: 8.0)
Information about a QEMU image file
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- name of the image file
.IP \(bu 2
\fBformat\fP (\fBstring\fP) \-\- format of the image file
.IP \(bu 2
\fBvirtual\-size\fP (\fBint\fP) \-\- maximum capacity in bytes of the image
.IP \(bu 2
\fBactual\-size\fP (\fBint\fP, \fIoptional\fP) \-\- actual size on disk in bytes of the image
.IP \(bu 2
\fBdirty\-flag\fP (\fBboolean\fP, \fIoptional\fP) \-\- true if image is not cleanly closed
.IP \(bu 2
\fBcluster\-size\fP (\fBint\fP, \fIoptional\fP) \-\- size of a cluster in bytes
.IP \(bu 2
\fBencrypted\fP (\fBboolean\fP, \fIoptional\fP) \-\- true if the image is encrypted
.IP \(bu 2
\fBcompressed\fP (\fBboolean\fP, \fIoptional\fP) \-\- true if the image is compressed (Since 1.7)
.IP \(bu 2
\fBbacking\-filename\fP (\fBstring\fP, \fIoptional\fP) \-\- name of the backing file
.IP \(bu 2
\fBfull\-backing\-filename\fP (\fBstring\fP, \fIoptional\fP) \-\- full path of the backing file
.IP \(bu 2
\fBbacking\-filename\-format\fP (\fBstring\fP, \fIoptional\fP) \-\- the format of the backing file
.IP \(bu 2
\fBsnapshots\fP (\fB[\fP\fI\%SnapshotInfo\fP\fB]\fP, \fIoptional\fP) \-\- list of VM snapshots
.IP \(bu 2
\fBformat\-specific\fP (\fI\%ImageInfoSpecific\fP, \fIoptional\fP) \-\- structure supplying additional format\-specific
information (since 1.7)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageInfo  (Since: 1.3)
Information about a QEMU image file, and potentially its backing
image
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBbacking\-image\fP (\fI\%ImageInfo\fP, \fIoptional\fP) \-\- info of the backing image
.IP \(bu 2
The members of \fI\%BlockNodeInfo\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockChildInfo  (Since: 8.0)
Information about all nodes in the block graph starting at some
node, annotated with information about that node in relation to its
parent.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- Child name of the root node in the BlockGraphInfo struct, in
its role as the child of some undescribed parent node
.IP \(bu 2
\fBinfo\fP (\fI\%BlockGraphInfo\fP) \-\- Block graph information starting at this node
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockGraphInfo  (Since: 8.0)
Information about all nodes in a block (sub)graph in the form of
BlockNodeInfo data.  The base BlockNodeInfo struct contains the
information for the (sub)graph\(aqs root node.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBchildren\fP (\fB[\fP\fI\%BlockChildInfo\fP\fB]\fP) \-\- Array of links to this node\(aqs child nodes\(aq information
.IP \(bu 2
The members of \fI\%BlockNodeInfo\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ImageCheck  (Since: 1.4)
Information about a QEMU image file check
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- name of the image file checked
.IP \(bu 2
\fBformat\fP (\fBstring\fP) \-\- format of the image file checked
.IP \(bu 2
\fBcheck\-errors\fP (\fBint\fP) \-\- number of unexpected errors occurred during check
.IP \(bu 2
\fBimage\-end\-offset\fP (\fBint\fP, \fIoptional\fP) \-\- offset (in bytes) where the image ends, this
field is present if the driver for the image format supports it
.IP \(bu 2
\fBcorruptions\fP (\fBint\fP, \fIoptional\fP) \-\- number of corruptions found during the check if any
.IP \(bu 2
\fBleaks\fP (\fBint\fP, \fIoptional\fP) \-\- number of leaks found during the check if any
.IP \(bu 2
\fBcorruptions\-fixed\fP (\fBint\fP, \fIoptional\fP) \-\- number of corruptions fixed during the check if
any
.IP \(bu 2
\fBleaks\-fixed\fP (\fBint\fP, \fIoptional\fP) \-\- number of leaks fixed during the check if any
.IP \(bu 2
\fBtotal\-clusters\fP (\fBint\fP, \fIoptional\fP) \-\- total number of clusters, this field is present if
the driver for the image format supports it
.IP \(bu 2
\fBallocated\-clusters\fP (\fBint\fP, \fIoptional\fP) \-\- total number of allocated clusters, this field
is present if the driver for the image format supports it
.IP \(bu 2
\fBfragmented\-clusters\fP (\fBint\fP, \fIoptional\fP) \-\- total number of fragmented clusters, this
field is present if the driver for the image format supports it
.IP \(bu 2
\fBcompressed\-clusters\fP (\fBint\fP, \fIoptional\fP) \-\- total number of compressed clusters, this
field is present if the driver for the image format supports it
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MapEntry  (Since: 2.6)
Mapping information from a virtual block range to a host file range
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBstart\fP (\fBint\fP) \-\- virtual (guest) offset of the first byte described by this
entry
.IP \(bu 2
\fBlength\fP (\fBint\fP) \-\- the number of bytes of the mapped virtual range
.IP \(bu 2
\fBdata\fP (\fBboolean\fP) \-\- reading the image will actually read data from a file (in
particular, if \fBoffset\fP is present this means that the sectors
are not simply preallocated, but contain actual data in raw
format)
.IP \(bu 2
\fBzero\fP (\fBboolean\fP) \-\- whether the virtual blocks read as zeroes
.IP \(bu 2
\fBcompressed\fP (\fBboolean\fP) \-\- true if the data is stored compressed (since 8.2)
.IP \(bu 2
\fBdepth\fP (\fBint\fP) \-\- number of layers (0 = top image, 1 = top image\(aqs backing
file, ..., n \- 1 = bottom image (where n is the number of images
in the chain)) before reaching one for which the range is
allocated
.IP \(bu 2
\fBpresent\fP (\fBboolean\fP) \-\- true if this layer provides the data, false if adding a
backing layer could impact this region (since 6.1)
.IP \(bu 2
\fBoffset\fP (\fBint\fP, \fIoptional\fP) \-\- if present, the image file stores the data for this range
in raw format at the given (host) offset
.IP \(bu 2
\fBfilename\fP (\fBstring\fP, \fIoptional\fP) \-\- filename that is referred to by \fBoffset\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCacheInfo  (Since: 2.3)
Cache mode information for a block device
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBwriteback\fP (\fBboolean\fP) \-\- true if writeback mode is enabled
.IP \(bu 2
\fBdirect\fP (\fBboolean\fP) \-\- true if the host page cache is bypassed (O_DIRECT)
.IP \(bu 2
\fBno\-flush\fP (\fBboolean\fP) \-\- true if flush requests are ignored for the device
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockDeviceInfo  (Since: 0.14)
Information about the backing device for a block device.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fBstring\fP) \-\- the filename of the backing device
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of the block driver node (Since 2.0)
.IP \(bu 2
\fBro\fP (\fBboolean\fP) \-\- true if the backing device was open read\-only
.IP \(bu 2
\fBdrv\fP (\fBstring\fP) \-\- the name of the block format used to open the backing device.
As of 0.14 this can be: \(aqblkdebug\(aq, \(aqbochs\(aq, \(aqcloop\(aq, \(aqcow\(aq,
\(aqdmg\(aq, \(aqfile\(aq, \(aqfile\(aq, \(aqftp\(aq, \(aqftps\(aq, \(aqhost_cdrom\(aq,
\(aqhost_device\(aq, \(aqhttp\(aq, \(aqhttps\(aq, \(aqluks\(aq, \(aqnbd\(aq, \(aqparallels\(aq,
\(aqqcow\(aq, \(aqqcow2\(aq, \(aqraw\(aq, \(aqvdi\(aq, \(aqvmdk\(aq, \(aqvpc\(aq, \(aqvvfat\(aq 2.2:
\(aqarchipelago\(aq added, \(aqcow\(aq dropped 2.3: \(aqhost_floppy\(aq deprecated
2.5: \(aqhost_floppy\(aq dropped 2.6: \(aqluks\(aq added 2.8: \(aqreplication\(aq
added, \(aqtftp\(aq dropped 2.9: \(aqarchipelago\(aq dropped
.IP \(bu 2
\fBbacking_file\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of the backing file (for copy\-on\-write)
.IP \(bu 2
\fBbacking_file_depth\fP (\fBint\fP) \-\- number of files in the backing file chain
(since: 1.2)
.IP \(bu 2
\fBactive\fP (\fBboolean\fP) \-\- true if the backend is active; typical cases for inactive backends
are on the migration source instance after migration completes and on the
destination before it completes. (since: 10.0)
.IP \(bu 2
\fBencrypted\fP (\fBboolean\fP) \-\- true if the backing device is encrypted
.IP \(bu 2
\fBdetect_zeroes\fP (\fI\%BlockdevDetectZeroesOptions\fP) \-\- detect and optimize zero writes (Since 2.1)
.IP \(bu 2
\fBbps\fP (\fBint\fP) \-\- total throughput limit in bytes per second is specified
.IP \(bu 2
\fBbps_rd\fP (\fBint\fP) \-\- read throughput limit in bytes per second is specified
.IP \(bu 2
\fBbps_wr\fP (\fBint\fP) \-\- write throughput limit in bytes per second is specified
.IP \(bu 2
\fBiops\fP (\fBint\fP) \-\- total I/O operations per second is specified
.IP \(bu 2
\fBiops_rd\fP (\fBint\fP) \-\- read I/O operations per second is specified
.IP \(bu 2
\fBiops_wr\fP (\fBint\fP) \-\- write I/O operations per second is specified
.IP \(bu 2
\fBimage\fP (\fI\%ImageInfo\fP) \-\- the info of image used (since: 1.6)
.IP \(bu 2
\fBbps_max\fP (\fBint\fP, \fIoptional\fP) \-\- total throughput limit during bursts, in bytes (Since 1.7)
.IP \(bu 2
\fBbps_rd_max\fP (\fBint\fP, \fIoptional\fP) \-\- read throughput limit during bursts, in bytes (Since
1.7)
.IP \(bu 2
\fBbps_wr_max\fP (\fBint\fP, \fIoptional\fP) \-\- write throughput limit during bursts, in bytes (Since
1.7)
.IP \(bu 2
\fBiops_max\fP (\fBint\fP, \fIoptional\fP) \-\- total I/O operations per second during bursts, in bytes
(Since 1.7)
.IP \(bu 2
\fBiops_rd_max\fP (\fBint\fP, \fIoptional\fP) \-\- read I/O operations per second during bursts, in bytes
(Since 1.7)
.IP \(bu 2
\fBiops_wr_max\fP (\fBint\fP, \fIoptional\fP) \-\- write I/O operations per second during bursts, in
bytes (Since 1.7)
.IP \(bu 2
\fBbps_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBbps_max\fP burst period, in
seconds.  (Since 2.6)
.IP \(bu 2
\fBbps_rd_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBbps_rd_max\fP burst period,
in seconds.  (Since 2.6)
.IP \(bu 2
\fBbps_wr_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBbps_wr_max\fP burst period,
in seconds.  (Since 2.6)
.IP \(bu 2
\fBiops_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBiops\fP burst period, in
seconds.  (Since 2.6)
.IP \(bu 2
\fBiops_rd_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBiops_rd_max\fP burst
period, in seconds.  (Since 2.6)
.IP \(bu 2
\fBiops_wr_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBiops_wr_max\fP burst
period, in seconds.  (Since 2.6)
.IP \(bu 2
\fBiops_size\fP (\fBint\fP, \fIoptional\fP) \-\- an I/O size in bytes (Since 1.7)
.IP \(bu 2
\fBgroup\fP (\fBstring\fP, \fIoptional\fP) \-\- throttle group name (Since 2.4)
.IP \(bu 2
\fBcache\fP (\fI\%BlockdevCacheInfo\fP) \-\- the cache mode used for the block device (since: 2.3)
.IP \(bu 2
\fBwrite_threshold\fP (\fBint\fP) \-\- configured write threshold for the device.  0 if
disabled.  (Since 2.3)
.IP \(bu 2
\fBdirty\-bitmaps\fP (\fB[\fP\fI\%BlockDirtyInfo\fP\fB]\fP, \fIoptional\fP) \-\- dirty bitmaps information (only present if node has
one or more dirty bitmaps) (Since 4.2)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockDeviceIoStatus  (Since: 1.0)
An enumeration of block device I/O status.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBok\fP \-\- The last I/O operation has succeeded
.IP \(bu 2
\fBfailed\fP \-\- The last I/O operation has failed
.IP \(bu 2
\fBnospace\fP \-\- The last I/O operation has failed due to a no\-space
condition
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockDirtyInfo  (Since: 1.3)
Block dirty bitmap information.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of the dirty bitmap (Since 2.4)
.IP \(bu 2
\fBcount\fP (\fBint\fP) \-\- number of dirty bytes according to the dirty bitmap
.IP \(bu 2
\fBgranularity\fP (\fBint\fP) \-\- granularity of the dirty bitmap in bytes (since 1.4)
.IP \(bu 2
\fBrecording\fP (\fBboolean\fP) \-\- true if the bitmap is recording new writes from the
guest.  (since 4.0)
.IP \(bu 2
\fBbusy\fP (\fBboolean\fP) \-\- true if the bitmap is in\-use by some operation (NBD or jobs)
and cannot be modified via QMP or used by another operation.
(since 4.0)
.IP \(bu 2
\fBpersistent\fP (\fBboolean\fP) \-\- true if the bitmap was stored on disk, is scheduled to
be stored on disk, or both.  (since 4.0)
.IP \(bu 2
\fBinconsistent\fP (\fBboolean\fP, \fIoptional\fP) \-\- true if this is a persistent bitmap that was
improperly stored.  Implies \fBpersistent\fP to be true; \fBrecording\fP
and \fBbusy\fP to be false.  This bitmap cannot be used.  To remove
it, use \fBblock\-dirty\-bitmap\-remove\fP\&.  (Since 4.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  Qcow2BitmapInfoFlags  (Since: 4.0)
An enumeration of flags that a bitmap can report to the user.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBin\-use\fP \-\- This flag is set by any process actively modifying the
qcow2 file, and cleared when the updated bitmap is flushed to
the qcow2 image.  The presence of this flag in an offline image
means that the bitmap was not saved correctly after its last
usage, and may contain inconsistent data.
.IP \(bu 2
\fBauto\fP \-\- The bitmap must reflect all changes of the virtual disk by
any application that would write to this qcow2 file.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  Qcow2BitmapInfo  (Since: 4.0)
Qcow2 bitmap information.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the name of the bitmap
.IP \(bu 2
\fBgranularity\fP (\fBint\fP) \-\- granularity of the bitmap in bytes
.IP \(bu 2
\fBflags\fP (\fB[\fP\fI\%Qcow2BitmapInfoFlags\fP\fB]\fP) \-\- flags of the bitmap
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockLatencyHistogramInfo  (Since: 4.0)
Block latency histogram.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBboundaries\fP (\fB[\fP\fBint\fP\fB]\fP) \-\- list of interval boundary values in nanoseconds, all
greater than zero and in ascending order.  For example, the list
[10, 50, 100] produces the following histogram intervals: [0,
10), [10, 50), [50, 100), [100, +inf).
.IP \(bu 2
\fBbins\fP (\fB[\fP\fBint\fP\fB]\fP) \-\- 
.sp
list of io request counts corresponding to histogram
intervals, one more element than \fBboundaries\fP has.  For the
example above, \fBbins\fP may be something like [3, 1, 5, 2], and
corresponding histogram looks like:
.INDENT 2.0
.INDENT 3.5
.sp
.nf
.ft C
5|           *
4|           *
3| *         *
2| *         *    *
1| *    *    *    *
 +\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
     10   50   100
.ft P
.fi
.UNINDENT
.UNINDENT

.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockInfo  (Since: 0.14)
Block device information.  This structure describes a virtual device
and the backing device associated with it.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The device name associated with the virtual device.
.IP \(bu 2
\fBqdev\fP (\fBstring\fP, \fIoptional\fP) \-\- The qdev ID, or if no ID is assigned, the QOM path of the
block device.  (since 2.10)
.IP \(bu 2
\fBtype\fP (\fBstring\fP) \-\- This field is returned only for compatibility reasons, it
should not be used (always returns \(aqunknown\(aq)
.IP \(bu 2
\fBremovable\fP (\fBboolean\fP) \-\- True if the device supports removable media.
.IP \(bu 2
\fBlocked\fP (\fBboolean\fP) \-\- True if the guest has locked this device from having its
media removed
.IP \(bu 2
\fBtray_open\fP (\fBboolean\fP, \fIoptional\fP) \-\- True if the device\(aqs tray is open (only present if it
has a tray)
.IP \(bu 2
\fBio\-status\fP (\fI\%BlockDeviceIoStatus\fP, \fIoptional\fP) \-\- \fBBlockDeviceIoStatus\fP\&.  Only present if the device
supports it and the VM is configured to stop on errors
(supported device models: virtio\-blk, IDE, SCSI except
scsi\-generic)
.IP \(bu 2
\fBinserted\fP (\fI\%BlockDeviceInfo\fP, \fIoptional\fP) \-\- \fBBlockDeviceInfo\fP describing the device if media is
present
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockMeasureInfo  (Since: 2.10)
Image file size calculation information.  This structure describes
the size requirements for creating a new image file.
.sp
The size requirements depend on the new image file format.  File
size always equals virtual disk size for the \(aqraw\(aq format, even for
sparse POSIX files.  Compact formats such as \(aqqcow2\(aq represent
unallocated and zero regions efficiently so file size may be smaller
than virtual disk size.
.sp
The values are upper bounds that are guaranteed to fit the new image
file.  Subsequent modification, such as internal snapshot or further
bitmap creation, may require additional space and is not covered
here.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBrequired\fP (\fBint\fP) \-\- Size required for a new image file, in bytes, when
copying just allocated guest\-visible contents.
.IP \(bu 2
\fBfully\-allocated\fP (\fBint\fP) \-\- Image file size, in bytes, once data has been
written to all sectors, when copying just guest\-visible
contents.
.IP \(bu 2
\fBbitmaps\fP (\fBint\fP, \fIoptional\fP) \-\- Additional size required if all the top\-level bitmap
metadata in the source image were to be copied to the
destination, present only when source and destination both
support persistent bitmaps.  (since 5.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-block  (Since: 0.14)
Get a list of BlockInfo for all virtual block devices.
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%BlockInfo\fP\fB]\fP \-\- a list of \fBBlockInfo\fP describing each virtual block device.
Filter nodes that were created implicitly are skipped over.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-block\(dq }
<\- {
      \(dqreturn\(dq:[
         {
            \(dqio\-status\(dq: \(dqok\(dq,
            \(dqdevice\(dq:\(dqide0\-hd0\(dq,
            \(dqlocked\(dq:false,
            \(dqremovable\(dq:false,
            \(dqinserted\(dq:{
               \(dqro\(dq:false,
               \(dqdrv\(dq:\(dqqcow2\(dq,
               \(dqencrypted\(dq:false,
               \(dqfile\(dq:\(dqdisks/test.qcow2\(dq,
               \(dqbacking_file_depth\(dq:1,
               \(dqbps\(dq:1000000,
               \(dqbps_rd\(dq:0,
               \(dqbps_wr\(dq:0,
               \(dqiops\(dq:1000000,
               \(dqiops_rd\(dq:0,
               \(dqiops_wr\(dq:0,
               \(dqbps_max\(dq: 8000000,
               \(dqbps_rd_max\(dq: 0,
               \(dqbps_wr_max\(dq: 0,
               \(dqiops_max\(dq: 0,
               \(dqiops_rd_max\(dq: 0,
               \(dqiops_wr_max\(dq: 0,
               \(dqiops_size\(dq: 0,
               \(dqdetect_zeroes\(dq: \(dqon\(dq,
               \(dqwrite_threshold\(dq: 0,
               \(dqimage\(dq:{
                  \(dqfilename\(dq:\(dqdisks/test.qcow2\(dq,
                  \(dqformat\(dq:\(dqqcow2\(dq,
                  \(dqvirtual\-size\(dq:2048000,
                  \(dqbacking_file\(dq:\(dqbase.qcow2\(dq,
                  \(dqfull\-backing\-filename\(dq:\(dqdisks/base.qcow2\(dq,
                  \(dqbacking\-filename\-format\(dq:\(dqqcow2\(dq,
                  \(dqsnapshots\(dq:[
                     {
                        \(dqid\(dq: \(dq1\(dq,
                        \(dqname\(dq: \(dqsnapshot1\(dq,
                        \(dqvm\-state\-size\(dq: 0,
                        \(dqdate\-sec\(dq: 10000200,
                        \(dqdate\-nsec\(dq: 12,
                        \(dqvm\-clock\-sec\(dq: 206,
                        \(dqvm\-clock\-nsec\(dq: 30
                     }
                  ],
                  \(dqbacking\-image\(dq:{
                      \(dqfilename\(dq:\(dqdisks/base.qcow2\(dq,
                      \(dqformat\(dq:\(dqqcow2\(dq,
                      \(dqvirtual\-size\(dq:2048000
                  }
               }
            },
            \(dqqdev\(dq: \(dqide_disk\(dq,
            \(dqtype\(dq:\(dqunknown\(dq
         },
         {
            \(dqio\-status\(dq: \(dqok\(dq,
            \(dqdevice\(dq:\(dqide1\-cd0\(dq,
            \(dqlocked\(dq:false,
            \(dqremovable\(dq:true,
            \(dqqdev\(dq: \(dq/machine/unattached/device[23]\(dq,
            \(dqtray_open\(dq: false,
            \(dqtype\(dq:\(dqunknown\(dq
         },
         {
            \(dqdevice\(dq:\(dqfloppy0\(dq,
            \(dqlocked\(dq:false,
            \(dqremovable\(dq:true,
            \(dqqdev\(dq: \(dq/machine/unattached/device[20]\(dq,
            \(dqtype\(dq:\(dqunknown\(dq
         },
         {
            \(dqdevice\(dq:\(dqsd0\(dq,
            \(dqlocked\(dq:false,
            \(dqremovable\(dq:true,
            \(dqtype\(dq:\(dqunknown\(dq
         }
      ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockDeviceTimedStats  (Since: 2.5)
Statistics of a block device during a given interval of time.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBinterval_length\fP (\fBint\fP) \-\- Interval used for calculating the statistics, in
seconds.
.IP \(bu 2
\fBmin_rd_latency_ns\fP (\fBint\fP) \-\- Minimum latency of read operations in the
defined interval, in nanoseconds.
.IP \(bu 2
\fBmin_wr_latency_ns\fP (\fBint\fP) \-\- Minimum latency of write operations in the
defined interval, in nanoseconds.
.IP \(bu 2
\fBmin_zone_append_latency_ns\fP (\fBint\fP) \-\- Minimum latency of zone append
operations in the defined interval, in nanoseconds (since 8.1)
.IP \(bu 2
\fBmin_flush_latency_ns\fP (\fBint\fP) \-\- Minimum latency of flush operations in the
defined interval, in nanoseconds.
.IP \(bu 2
\fBmax_rd_latency_ns\fP (\fBint\fP) \-\- Maximum latency of read operations in the
defined interval, in nanoseconds.
.IP \(bu 2
\fBmax_wr_latency_ns\fP (\fBint\fP) \-\- Maximum latency of write operations in the
defined interval, in nanoseconds.
.IP \(bu 2
\fBmax_zone_append_latency_ns\fP (\fBint\fP) \-\- Maximum latency of zone append
operations in the defined interval, in nanoseconds (since 8.1)
.IP \(bu 2
\fBmax_flush_latency_ns\fP (\fBint\fP) \-\- Maximum latency of flush operations in the
defined interval, in nanoseconds.
.IP \(bu 2
\fBavg_rd_latency_ns\fP (\fBint\fP) \-\- Average latency of read operations in the
defined interval, in nanoseconds.
.IP \(bu 2
\fBavg_wr_latency_ns\fP (\fBint\fP) \-\- Average latency of write operations in the
defined interval, in nanoseconds.
.IP \(bu 2
\fBavg_zone_append_latency_ns\fP (\fBint\fP) \-\- Average latency of zone append
operations in the defined interval, in nanoseconds (since 8.1)
.IP \(bu 2
\fBavg_flush_latency_ns\fP (\fBint\fP) \-\- Average latency of flush operations in the
defined interval, in nanoseconds.
.IP \(bu 2
\fBavg_rd_queue_depth\fP (\fBnumber\fP) \-\- Average number of pending read operations in
the defined interval.
.IP \(bu 2
\fBavg_wr_queue_depth\fP (\fBnumber\fP) \-\- Average number of pending write operations in
the defined interval.
.IP \(bu 2
\fBavg_zone_append_queue_depth\fP (\fBnumber\fP) \-\- Average number of pending zone append
operations in the defined interval (since 8.1).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockDeviceStats  (Since: 0.14)
Statistics of a virtual block device or a block backing device.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBrd_bytes\fP (\fBint\fP) \-\- The number of bytes read by the device.
.IP \(bu 2
\fBwr_bytes\fP (\fBint\fP) \-\- The number of bytes written by the device.
.IP \(bu 2
\fBzone_append_bytes\fP (\fBint\fP) \-\- The number of bytes appended by the zoned
devices (since 8.1)
.IP \(bu 2
\fBunmap_bytes\fP (\fBint\fP) \-\- The number of bytes unmapped by the device (Since 4.2)
.IP \(bu 2
\fBrd_operations\fP (\fBint\fP) \-\- The number of read operations performed by the
device.
.IP \(bu 2
\fBwr_operations\fP (\fBint\fP) \-\- The number of write operations performed by the
device.
.IP \(bu 2
\fBzone_append_operations\fP (\fBint\fP) \-\- The number of zone append operations
performed by the zoned devices (since 8.1)
.IP \(bu 2
\fBflush_operations\fP (\fBint\fP) \-\- The number of cache flush operations performed by
the device (since 0.15)
.IP \(bu 2
\fBunmap_operations\fP (\fBint\fP) \-\- The number of unmap operations performed by the
device (Since 4.2)
.IP \(bu 2
\fBrd_total_time_ns\fP (\fBint\fP) \-\- Total time spent on reads in nanoseconds (since
0.15).
.IP \(bu 2
\fBwr_total_time_ns\fP (\fBint\fP) \-\- Total time spent on writes in nanoseconds (since
0.15).
.IP \(bu 2
\fBzone_append_total_time_ns\fP (\fBint\fP) \-\- Total time spent on zone append writes
in nanoseconds (since 8.1)
.IP \(bu 2
\fBflush_total_time_ns\fP (\fBint\fP) \-\- Total time spent on cache flushes in
nanoseconds (since 0.15).
.IP \(bu 2
\fBunmap_total_time_ns\fP (\fBint\fP) \-\- Total time spent on unmap operations in
nanoseconds (Since 4.2)
.IP \(bu 2
\fBwr_highest_offset\fP (\fBint\fP) \-\- The offset after the greatest byte written to
the device.  The intended use of this information is for
growable sparse files (like qcow2) that are used on top of a
physical device.
.IP \(bu 2
\fBrd_merged\fP (\fBint\fP) \-\- Number of read requests that have been merged into
another request (Since 2.3).
.IP \(bu 2
\fBwr_merged\fP (\fBint\fP) \-\- Number of write requests that have been merged into
another request (Since 2.3).
.IP \(bu 2
\fBzone_append_merged\fP (\fBint\fP) \-\- Number of zone append requests that have been
merged into another request (since 8.1)
.IP \(bu 2
\fBunmap_merged\fP (\fBint\fP) \-\- Number of unmap requests that have been merged into
another request (Since 4.2)
.IP \(bu 2
\fBidle_time_ns\fP (\fBint\fP, \fIoptional\fP) \-\- Time since the last I/O operation, in nanoseconds.
If the field is absent it means that there haven\(aqt been any
operations yet (Since 2.5).
.IP \(bu 2
\fBfailed_rd_operations\fP (\fBint\fP) \-\- The number of failed read operations
performed by the device (Since 2.5)
.IP \(bu 2
\fBfailed_wr_operations\fP (\fBint\fP) \-\- The number of failed write operations
performed by the device (Since 2.5)
.IP \(bu 2
\fBfailed_zone_append_operations\fP (\fBint\fP) \-\- The number of failed zone append
write operations performed by the zoned devices (since 8.1)
.IP \(bu 2
\fBfailed_flush_operations\fP (\fBint\fP) \-\- The number of failed flush operations
performed by the device (Since 2.5)
.IP \(bu 2
\fBfailed_unmap_operations\fP (\fBint\fP) \-\- The number of failed unmap operations
performed by the device (Since 4.2)
.IP \(bu 2
\fBinvalid_rd_operations\fP (\fBint\fP) \-\- The number of invalid read operations
performed by the device (Since 2.5)
.IP \(bu 2
\fBinvalid_wr_operations\fP (\fBint\fP) \-\- The number of invalid write operations
performed by the device (Since 2.5)
.IP \(bu 2
\fBinvalid_zone_append_operations\fP (\fBint\fP) \-\- The number of invalid zone append
operations performed by the zoned device (since 8.1)
.IP \(bu 2
\fBinvalid_flush_operations\fP (\fBint\fP) \-\- The number of invalid flush operations
performed by the device (Since 2.5)
.IP \(bu 2
\fBinvalid_unmap_operations\fP (\fBint\fP) \-\- The number of invalid unmap operations
performed by the device (Since 4.2)
.IP \(bu 2
\fBaccount_invalid\fP (\fBboolean\fP) \-\- Whether invalid operations are included in the
last access statistics (Since 2.5)
.IP \(bu 2
\fBaccount_failed\fP (\fBboolean\fP) \-\- Whether failed operations are included in the
latency and last access statistics (Since 2.5)
.IP \(bu 2
\fBtimed_stats\fP (\fB[\fP\fI\%BlockDeviceTimedStats\fP\fB]\fP) \-\- Statistics specific to the set of previously defined
intervals of time (Since 2.5)
.IP \(bu 2
\fBrd_latency_histogram\fP (\fI\%BlockLatencyHistogramInfo\fP, \fIoptional\fP) \-\- \fBBlockLatencyHistogramInfo\fP\&.  (Since 4.0)
.IP \(bu 2
\fBwr_latency_histogram\fP (\fI\%BlockLatencyHistogramInfo\fP, \fIoptional\fP) \-\- \fBBlockLatencyHistogramInfo\fP\&.  (Since 4.0)
.IP \(bu 2
\fBzone_append_latency_histogram\fP (\fI\%BlockLatencyHistogramInfo\fP, \fIoptional\fP) \-\- \fBBlockLatencyHistogramInfo\fP\&.
(since 8.1)
.IP \(bu 2
\fBflush_latency_histogram\fP (\fI\%BlockLatencyHistogramInfo\fP, \fIoptional\fP) \-\- \fBBlockLatencyHistogramInfo\fP\&.  (Since 4.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockStatsSpecificFile  (Since: 4.2)
File driver statistics
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdiscard\-nb\-ok\fP (\fBint\fP) \-\- The number of successful discard operations
performed by the driver.
.IP \(bu 2
\fBdiscard\-nb\-failed\fP (\fBint\fP) \-\- The number of failed discard operations
performed by the driver.
.IP \(bu 2
\fBdiscard\-bytes\-ok\fP (\fBint\fP) \-\- The number of bytes discarded by the driver.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockStatsSpecificNvme  (Since: 5.2)
NVMe driver statistics
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcompletion\-errors\fP (\fBint\fP) \-\- The number of completion errors.
.IP \(bu 2
\fBaligned\-accesses\fP (\fBint\fP) \-\- The number of aligned accesses performed by the
driver.
.IP \(bu 2
\fBunaligned\-accesses\fP (\fBint\fP) \-\- The number of unaligned accesses performed by
the driver.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockStatsSpecific  (Since: 4.2)
Block driver specific statistics
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdriver\fP (\fI\%BlockdevDriver\fP) \-\- block driver name
.IP \(bu 2
When \fBdriver\fP is \fBfile\fP: The members of \fI\%BlockStatsSpecificFile\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBhost_device\fP: The members of \fI\%BlockStatsSpecificFile\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBnvme\fP: The members of \fI\%BlockStatsSpecificNvme\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockStats  (Since: 0.14)
Statistics of a virtual block device or a block backing device.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP, \fIoptional\fP) \-\- If the stats are for a virtual block device, the name
corresponding to the virtual block device.
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- The node name of the device.  (Since 2.3)
.IP \(bu 2
\fBqdev\fP (\fBstring\fP, \fIoptional\fP) \-\- The qdev ID, or if no ID is assigned, the QOM path of the
block device.  (since 3.0)
.IP \(bu 2
\fBstats\fP (\fI\%BlockDeviceStats\fP) \-\- A \fBBlockDeviceStats\fP for the device.
.IP \(bu 2
\fBdriver\-specific\fP (\fI\%BlockStatsSpecific\fP, \fIoptional\fP) \-\- Optional driver\-specific stats.  (Since 4.2)
.IP \(bu 2
\fBparent\fP (\fI\%BlockStats\fP, \fIoptional\fP) \-\- This describes the file block device if it has one.
Contains recursively the statistics of the underlying protocol
(e.g. the host file for a qcow2 image).  If there is no
underlying protocol, this field is omitted
.IP \(bu 2
\fBbacking\fP (\fI\%BlockStats\fP, \fIoptional\fP) \-\- This describes the backing block device if it has one.
(Since 2.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-blockstats  (Since: 0.14)
Query the \fBBlockStats\fP for all virtual block devices.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBquery\-nodes\fP (\fBboolean\fP, \fIoptional\fP) \-\- If true, the command will query all the block nodes
that have a node name, in a list which will include \(dqparent\(dq
information, but not \(dqbacking\(dq.  If false or omitted, the
behavior is as before \- query all the device backends,
recursively including their \(dqparent\(dq and \(dqbacking\(dq.  Filter
nodes that were created implicitly are skipped over in this
mode.  (Since 2.3)
.UNINDENT
.TP
.B Return
\fB[\fP\fI\%BlockStats\fP\fB]\fP \-\- A list of \fBBlockStats\fP for each virtual block devices.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-blockstats\(dq }
<\- {
      \(dqreturn\(dq:[
         {
            \(dqdevice\(dq:\(dqide0\-hd0\(dq,
            \(dqparent\(dq:{
               \(dqstats\(dq:{
                  \(dqwr_highest_offset\(dq:3686448128,
                  \(dqwr_bytes\(dq:9786368,
                  \(dqwr_operations\(dq:751,
                  \(dqrd_bytes\(dq:122567168,
                  \(dqrd_operations\(dq:36772
                  \(dqwr_total_times_ns\(dq:313253456
                  \(dqrd_total_times_ns\(dq:3465673657
                  \(dqflush_total_times_ns\(dq:49653
                  \(dqflush_operations\(dq:61,
                  \(dqrd_merged\(dq:0,
                  \(dqwr_merged\(dq:0,
                  \(dqidle_time_ns\(dq:2953431879,
                  \(dqaccount_invalid\(dq:true,
                  \(dqaccount_failed\(dq:false
               }
            },
            \(dqstats\(dq:{
               \(dqwr_highest_offset\(dq:2821110784,
               \(dqwr_bytes\(dq:9786368,
               \(dqwr_operations\(dq:692,
               \(dqrd_bytes\(dq:122739200,
               \(dqrd_operations\(dq:36604
               \(dqflush_operations\(dq:51,
               \(dqwr_total_times_ns\(dq:313253456
               \(dqrd_total_times_ns\(dq:3465673657
               \(dqflush_total_times_ns\(dq:49653,
               \(dqrd_merged\(dq:0,
               \(dqwr_merged\(dq:0,
               \(dqidle_time_ns\(dq:2953431879,
               \(dqaccount_invalid\(dq:true,
               \(dqaccount_failed\(dq:false
            },
            \(dqqdev\(dq: \(dq/machine/unattached/device[23]\(dq
         },
         {
            \(dqdevice\(dq:\(dqide1\-cd0\(dq,
            \(dqstats\(dq:{
               \(dqwr_highest_offset\(dq:0,
               \(dqwr_bytes\(dq:0,
               \(dqwr_operations\(dq:0,
               \(dqrd_bytes\(dq:0,
               \(dqrd_operations\(dq:0
               \(dqflush_operations\(dq:0,
               \(dqwr_total_times_ns\(dq:0
               \(dqrd_total_times_ns\(dq:0
               \(dqflush_total_times_ns\(dq:0,
               \(dqrd_merged\(dq:0,
               \(dqwr_merged\(dq:0,
               \(dqaccount_invalid\(dq:false,
               \(dqaccount_failed\(dq:false
            },
            \(dqqdev\(dq: \(dq/machine/unattached/device[24]\(dq
         },
         {
            \(dqdevice\(dq:\(dqfloppy0\(dq,
            \(dqstats\(dq:{
               \(dqwr_highest_offset\(dq:0,
               \(dqwr_bytes\(dq:0,
               \(dqwr_operations\(dq:0,
               \(dqrd_bytes\(dq:0,
               \(dqrd_operations\(dq:0
               \(dqflush_operations\(dq:0,
               \(dqwr_total_times_ns\(dq:0
               \(dqrd_total_times_ns\(dq:0
               \(dqflush_total_times_ns\(dq:0,
               \(dqrd_merged\(dq:0,
               \(dqwr_merged\(dq:0,
               \(dqaccount_invalid\(dq:false,
               \(dqaccount_failed\(dq:false
            },
            \(dqqdev\(dq: \(dq/machine/unattached/device[16]\(dq
         },
         {
            \(dqdevice\(dq:\(dqsd0\(dq,
            \(dqstats\(dq:{
               \(dqwr_highest_offset\(dq:0,
               \(dqwr_bytes\(dq:0,
               \(dqwr_operations\(dq:0,
               \(dqrd_bytes\(dq:0,
               \(dqrd_operations\(dq:0
               \(dqflush_operations\(dq:0,
               \(dqwr_total_times_ns\(dq:0
               \(dqrd_total_times_ns\(dq:0
               \(dqflush_total_times_ns\(dq:0,
               \(dqrd_merged\(dq:0,
               \(dqwr_merged\(dq:0,
               \(dqaccount_invalid\(dq:false,
               \(dqaccount_failed\(dq:false
            }
         }
      ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevOnError  (Since: 1.3)
An enumeration of possible behaviors for errors on I/O operations.
The exact meaning depends on whether the I/O was initiated by a
guest or by a block job
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBreport\fP \-\- for guest operations, report the error to the guest; for
jobs, cancel the job
.IP \(bu 2
\fBignore\fP \-\- ignore the error, only report a QMP event (BLOCK_IO_ERROR
or BLOCK_JOB_ERROR).  The backup, mirror and commit block jobs
retry the failing request later and may still complete
successfully.  The stream block job continues to stream and will
complete with an error.
.IP \(bu 2
\fBenospc\fP \-\- same as \fBstop\fP on ENOSPC, same as \fBreport\fP otherwise.
.IP \(bu 2
\fBstop\fP \-\- for guest operations, stop the virtual machine; for jobs,
pause the job
.IP \(bu 2
\fBauto\fP \-\- inherit the error handling policy of the backend (since: 2.7)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  MirrorSyncMode  (Since: 1.3)
An enumeration of possible behaviors for the initial synchronization
phase of storage mirroring.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBtop\fP \-\- copies data in the topmost image to the destination
.IP \(bu 2
\fBfull\fP \-\- copies data from all images to the destination
.IP \(bu 2
\fBnone\fP \-\- only copy data written from now on
.IP \(bu 2
\fBincremental\fP \-\- only copy data described by the dirty bitmap.
(since: 2.4)
.IP \(bu 2
\fBbitmap\fP \-\- only copy data described by the dirty bitmap.  (since: 4.2)
Behavior on completion is determined by the BitmapSyncMode.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BitmapSyncMode  (Since: 4.2)
An enumeration of possible behaviors for the synchronization of a
bitmap when used for data copy operations.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBon\-success\fP \-\- The bitmap is only synced when the operation is
successful.  This is the behavior always used for \(aqINCREMENTAL\(aq
backups.
.IP \(bu 2
\fBnever\fP \-\- The bitmap is never synchronized with the operation, and is
treated solely as a read\-only manifest of blocks to copy.
.IP \(bu 2
\fBalways\fP \-\- The bitmap is always synchronized with the operation,
regardless of whether or not the operation was successful.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  MirrorCopyMode  (Since: 3.0)
An enumeration whose values tell the mirror block job when to
trigger writes to the target.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBbackground\fP \-\- copy data in background only.
.IP \(bu 2
\fBwrite\-blocking\fP \-\- when data is written to the source, write it
(synchronously) to the target as well.  In addition, data is
copied in background just like in \fBbackground\fP mode.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockJobInfoMirror  (Since: 8.2)
Information specific to mirror block jobs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBactively\-synced\fP (\fBboolean\fP) \-\- Whether the source is actively synced to the
target, i.e. same data and new writes are done synchronously to
both.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockJobInfo  (Since: 1.1)
Information about a long\-running block device operation.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%JobType\fP) \-\- the job type (\(aqstream\(aq for image streaming)
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The job identifier.  Originally the device name but other
values are allowed since QEMU 2.7
.IP \(bu 2
\fBlen\fP (\fBint\fP) \-\- Estimated \fBoffset\fP value at the completion of the job.  This
value can arbitrarily change while the job is running, in both
directions.
.IP \(bu 2
\fBoffset\fP (\fBint\fP) \-\- Progress made until now.  The unit is arbitrary and the
value can only meaningfully be used for the ratio of \fBoffset\fP to
\fBlen\fP\&.  The value is monotonically increasing.
.IP \(bu 2
\fBbusy\fP (\fBboolean\fP) \-\- false if the job is known to be in a quiescent state, with no
pending I/O.  (Since 1.3)
.IP \(bu 2
\fBpaused\fP (\fBboolean\fP) \-\- whether the job is paused or, if \fBbusy\fP is true, will pause
itself as soon as possible.  (Since 1.3)
.IP \(bu 2
\fBspeed\fP (\fBint\fP) \-\- the rate limit, bytes per second
.IP \(bu 2
\fBio\-status\fP (\fI\%BlockDeviceIoStatus\fP) \-\- the status of the job (since 1.3)
.IP \(bu 2
\fBready\fP (\fBboolean\fP) \-\- true if the job may be completed (since 2.2)
.IP \(bu 2
\fBstatus\fP (\fI\%JobStatus\fP) \-\- Current job state/status (since 2.12)
.IP \(bu 2
\fBauto\-finalize\fP (\fBboolean\fP) \-\- Job will finalize itself when PENDING, moving to the
CONCLUDED state.  (since 2.12)
.IP \(bu 2
\fBauto\-dismiss\fP (\fBboolean\fP) \-\- Job will dismiss itself when CONCLUDED, moving to the
NULL state and disappearing from the query list.  (since 2.12)
.IP \(bu 2
\fBerror\fP (\fBstring\fP, \fIoptional\fP) \-\- Error information if the job did not complete successfully.
Not set if the job completed successfully.  (since 2.12.1)
.IP \(bu 2
When \fBtype\fP is \fBmirror\fP: The members of \fI\%BlockJobInfoMirror\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-block\-jobs  (Since: 1.1)
Return information about long\-running block device operations.
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%BlockJobInfo\fP\fB]\fP \-\- a list of \fBBlockJobInfo\fP for each active block job
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block_resize  (Since: 0.14)
Resize a block image while a guest is running.
.sp
Either \fBdevice\fP or \fBnode\-name\fP must be set but not both.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of the device to get the image resized
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- graph node name to get the image resized (Since 2.0)
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- new image size in bytes
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBdevice\fP is not a valid block device, DeviceNotFound
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock_resize\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqscratch\(dq, \(dqsize\(dq: 1073741824 } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  NewImageMode  (Since: 1.1)
An enumeration that tells QEMU how to set the backing file path in a
new image file.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBexisting\fP \-\- QEMU should look for an existing image file.
.IP \(bu 2
\fBabsolute\-paths\fP \-\- QEMU should create a new image with absolute paths
for the backing file.  If there is no backing file available,
the new image will not be backed either.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevSnapshotSync
Either \fBdevice\fP or \fBnode\-name\fP must be set but not both.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of the device to take a snapshot of.
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- graph node name to generate the snapshot from (Since
2.0)
.IP \(bu 2
\fBsnapshot\-file\fP (\fBstring\fP) \-\- the target of the new overlay image.  If the file
exists, or if it is a device, the overlay will be created in the
existing file/device.  Otherwise, a new file will be created.
.IP \(bu 2
\fBsnapshot\-node\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- the graph node name of the new image (Since
2.0)
.IP \(bu 2
\fBformat\fP (\fBstring\fP, \fIoptional\fP) \-\- the format of the overlay image, default is \(aqqcow2\(aq.
.IP \(bu 2
\fBmode\fP (\fI\%NewImageMode\fP, \fIoptional\fP) \-\- whether and how QEMU should create a new image, default is
\(aqabsolute\-paths\(aq.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevSnapshot  (Since: 2.5)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnode\fP (\fBstring\fP) \-\- device or node name that will have a snapshot taken.
.IP \(bu 2
\fBoverlay\fP (\fBstring\fP) \-\- reference to the existing block device that will become
the overlay of \fBnode\fP, as part of taking the snapshot.  It must
not have a current backing file (this can be achieved by passing
\(dqbacking\(dq: null to blockdev\-add).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BackupPerf  (Since: 6.0)
Optional parameters for backup.  These parameters don\(aqt affect
functionality, but may significantly affect performance.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBuse\-copy\-range\fP (\fBboolean\fP, \fIoptional\fP) \-\- Use copy offloading.  Default false.
.IP \(bu 2
\fBmax\-workers\fP (\fBint\fP, \fIoptional\fP) \-\- Maximum number of parallel requests for the sustained
background copying process.  Doesn\(aqt influence copy\-before\-write
operations.  Default 64.
.IP \(bu 2
\fBmax\-chunk\fP (\fBint\fP, \fIoptional\fP) \-\- Maximum request length for the sustained background
copying process.  Doesn\(aqt influence copy\-before\-write
operations.  0 means unlimited.  If max\-chunk is non\-zero then
it should not be less than job cluster size which is calculated
as maximum of target image cluster size and 64k.  Default 0.
.IP \(bu 2
\fBmin\-cluster\-size\fP (\fBint\fP, \fIoptional\fP) \-\- Minimum size of blocks used by copy\-before\-write
and background copy operations.  Has to be a power of 2.  No
effect if smaller than the maximum of the target\(aqs cluster size
and 64 KiB.  Default 0.  (Since 9.2)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BackupCommon  (Since: 4.2)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBjob\-id\fP (\fBstring\fP, \fIoptional\fP) \-\- identifier for the newly\-created block job.  If omitted,
the device name will be used.  (Since 2.7)
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- the device name or node\-name of a root node which should be
copied.
.IP \(bu 2
\fBsync\fP (\fI\%MirrorSyncMode\fP) \-\- what parts of the disk image should be copied to the
destination (all the disk, only the sectors allocated in the
topmost image, from a dirty bitmap, or only new I/O).
.IP \(bu 2
\fBspeed\fP (\fBint\fP, \fIoptional\fP) \-\- the maximum speed, in bytes per second.  The default is 0,
for unlimited.
.IP \(bu 2
\fBbitmap\fP (\fBstring\fP, \fIoptional\fP) \-\- The name of a dirty bitmap to use.  Must be present if sync
is \(dqbitmap\(dq or \(dqincremental\(dq.  Can be present if sync is \(dqfull\(dq
or \(dqtop\(dq.  Must not be present otherwise.
(Since 2.4 (drive\-backup), 3.1 (blockdev\-backup))
.IP \(bu 2
\fBbitmap\-mode\fP (\fI\%BitmapSyncMode\fP, \fIoptional\fP) \-\- Specifies the type of data the bitmap should contain
after the operation concludes.  Must be present if a bitmap was
provided, Must NOT be present otherwise.  (Since 4.2)
.IP \(bu 2
\fBcompress\fP (\fBboolean\fP, \fIoptional\fP) \-\- true to compress data, if the target format supports it.
(default: false) (since 2.8)
.IP \(bu 2
\fBon\-source\-error\fP (\fI\%BlockdevOnError\fP, \fIoptional\fP) \-\- the action to take on an error on the source,
default \(aqreport\(aq.  \(aqstop\(aq and \(aqenospc\(aq can only be used if the
block device supports io\-status (see BlockInfo).
.IP \(bu 2
\fBon\-target\-error\fP (\fI\%BlockdevOnError\fP, \fIoptional\fP) \-\- the action to take on an error on the target,
default \(aqreport\(aq (no limitations, since this applies to a
different block device than \fBdevice\fP).
.IP \(bu 2
\fBon\-cbw\-error\fP (\fI\%OnCbwError\fP, \fIoptional\fP) \-\- policy defining behavior on I/O errors in
copy\-before\-write jobs; defaults to break\-guest\-write.  (Since 10.1)
.IP \(bu 2
\fBauto\-finalize\fP (\fBboolean\fP, \fIoptional\fP) \-\- When false, this job will wait in a PENDING state
after it has finished its work, waiting for \fBblock\-job\-finalize\fP
before making any block graph changes.  When true, this job will
automatically perform its abort or commit actions.  Defaults to
true.  (Since 2.12)
.IP \(bu 2
\fBauto\-dismiss\fP (\fBboolean\fP, \fIoptional\fP) \-\- When false, this job will wait in a CONCLUDED state
after it has completely ceased all work, and awaits
\fBblock\-job\-dismiss\fP\&.  When true, this job will automatically
disappear from the query list without user intervention.
Defaults to true.  (Since 2.12)
.IP \(bu 2
\fBfilter\-node\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- the node name that should be assigned to the
filter driver that the backup job inserts into the graph above
node specified by \fBdrive\fP\&.  If this option is not given, a node
name is autogenerated.  (Since: 4.2)
.IP \(bu 2
\fBdiscard\-source\fP (\fBboolean\fP, \fIoptional\fP) \-\- Discard blocks on source which have already been
copied to the target.  (Since 9.1)
.IP \(bu 2
\fBx\-perf\fP (\fI\%BackupPerf\fP, \fIoptional\fP) \-\- Performance options.  (Since 6.0)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- Member \fBx\-perf\fP is experimental.
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
\fBon\-source\-error\fP and \fBon\-target\-error\fP only affect
background I/O.  If an error occurs during a guest write request,
the device\(aqs rerror/werror actions will be used.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DriveBackup  (Since: 1.6)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtarget\fP (\fBstring\fP) \-\- the target of the new image.  If the file exists, or if it
is a device, the existing file/device will be used as the new
destination.  If it does not exist, a new file will be created.
.IP \(bu 2
\fBformat\fP (\fBstring\fP, \fIoptional\fP) \-\- the format of the new destination, default is to probe if
\fBmode\fP is \(aqexisting\(aq, else the format of the source
.IP \(bu 2
\fBmode\fP (\fI\%NewImageMode\fP, \fIoptional\fP) \-\- whether and how QEMU should create a new image, default is
\(aqabsolute\-paths\(aq.
.IP \(bu 2
The members of \fI\%BackupCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevBackup  (Since: 2.3)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtarget\fP (\fBstring\fP) \-\- the device name or node\-name of the backup target node.
.IP \(bu 2
The members of \fI\%BackupCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-snapshot\-sync  (Since: 0.14)
Takes a synchronous snapshot of a block device.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockdevSnapshotSync\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBdevice\fP is not a valid block device, DeviceNotFound
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-snapshot\-sync\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqide\-hd0\(dq,
                    \(dqsnapshot\-file\(dq:
                    \(dq/some/place/my\-image\(dq,
                    \(dqformat\(dq: \(dqqcow2\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-snapshot  (Since: 2.5)
Takes a snapshot of a block device.
.sp
Take a snapshot, by installing \(aqnode\(aq as the backing image of
\(aqoverlay\(aq.  Additionally, if \(aqnode\(aq is associated with a block
device, the block device changes to using \(aqoverlay\(aq as its new
active image.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockdevSnapshot\fP\&.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBallow\-write\-only\-overlay\fP \-\- If present, the check whether this
operation is safe was relaxed so that it can be used to change
backing file of a destination of a blockdev\-mirror.  (since 5.0)
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-add\(dq,
     \(dqarguments\(dq: { \(dqdriver\(dq: \(dqqcow2\(dq,
                    \(dqnode\-name\(dq: \(dqnode1534\(dq,
                    \(dqfile\(dq: { \(dqdriver\(dq: \(dqfile\(dq,
                              \(dqfilename\(dq: \(dqhd1.qcow2\(dq },
                    \(dqbacking\(dq: null } }

<\- { \(dqreturn\(dq: {} }

\-> { \(dqexecute\(dq: \(dqblockdev\-snapshot\(dq,
     \(dqarguments\(dq: { \(dqnode\(dq: \(dqide\-hd0\(dq,
                    \(dqoverlay\(dq: \(dqnode1534\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  change\-backing\-file  (Since: 2.1)
Change the backing file in the image file metadata.  This does not
cause QEMU to reopen the image file to reparse the backing filename
(it may, however, perform a reopen to change permissions from r/o \->
r/w \-> r/o, if needed).  The new backing file string is written into
the image file metadata, and the QEMU internal strings are updated.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBimage\-node\-name\fP (\fBstring\fP) \-\- The name of the block driver state node of the
image to modify.  The \(dqdevice\(dq argument is used to verify
\(dqimage\-node\-name\(dq is in the chain described by \(dqdevice\(dq.
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The device name or node\-name of the root node that owns
image\-node\-name.
.IP \(bu 2
\fBbacking\-file\fP (\fBstring\fP) \-\- The string to write as the backing file.  This string
is not validated, so care should be taken when specifying the
string or the image chain may not be able to be reopened again.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \(dqdevice\(dq does not exist or cannot be determined,
DeviceNotFound
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-commit  (Since: 1.3)
Live commit of data from overlay image nodes into backing nodes \-
i.e., writes data between \(aqtop\(aq and \(aqbase\(aq into \(aqbase\(aq.
.sp
If top == base, that is an error.  If top has no overlays on top of
it, or if it is in use by a writer, the job will not be completed by
itself.  The user needs to complete the job with the
block\-job\-complete command after getting the ready event.  (Since
2.0)
.sp
If the base image is smaller than top, then the base image will be
resized to be the same size as top.  If top is smaller than the base
image, the base will not be truncated.  If you want the base image
size to match the size of the smaller top, you can safely truncate
it yourself once the commit operation successfully completes.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBjob\-id\fP (\fBstring\fP, \fIoptional\fP) \-\- identifier for the newly\-created block job.  If omitted,
the device name will be used.  (Since 2.7)
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- the device name or node\-name of a root node
.IP \(bu 2
\fBbase\-node\fP (\fBstring\fP, \fIoptional\fP) \-\- The node name of the backing image to write data into.
If not specified, this is the deepest backing image.
(since: 3.1)
.IP \(bu 2
\fBbase\fP (\fBstring\fP, \fIoptional\fP) \-\- Same as \fBbase\-node\fP, except that it is a file name rather than
a node name.  This must be the exact filename string that was
used to open the node; other strings, even if addressing the
same file, are not accepted
.IP \(bu 2
\fBtop\-node\fP (\fBstring\fP, \fIoptional\fP) \-\- The node name of the backing image within the image chain
which contains the topmost data to be committed down.  If not
specified, this is the active layer.  (since: 3.1)
.IP \(bu 2
\fBtop\fP (\fBstring\fP, \fIoptional\fP) \-\- Same as \fBtop\-node\fP, except that it is a file name rather than a
node name.  This must be the exact filename string that was used
to open the node; other strings, even if addressing the same
file, are not accepted
.IP \(bu 2
\fBbacking\-file\fP (\fBstring\fP, \fIoptional\fP) \-\- 
.sp
The backing file string to write into the overlay
image of \(aqtop\(aq.  If \(aqtop\(aq does not have an overlay image, or if
\(aqtop\(aq is in use by a writer, specifying a backing file string is
an error.
.sp
This filename is not validated.  If a pathname string is such
that it cannot be resolved by QEMU, that means that subsequent
QMP or HMP commands must use node\-names for the image in
question, as filename lookup methods will fail.
.sp
If not specified, QEMU will automatically determine the backing
file string to use, or error out if there is no obvious choice.
Care should be taken when specifying the string, to specify a
valid filename or protocol.  (Since 2.1)

.IP \(bu 2
\fBbacking\-mask\-protocol\fP (\fBboolean\fP, \fIoptional\fP) \-\- If true, replace any protocol mentioned in
the \(aqbacking file format\(aq with \(aqraw\(aq, rather than storing the
protocol name as the backing format.  Can be used even when no
image header will be updated (default false; since 9.0).
.IP \(bu 2
\fBspeed\fP (\fBint\fP, \fIoptional\fP) \-\- the maximum speed, in bytes per second
.IP \(bu 2
\fBon\-error\fP (\fI\%BlockdevOnError\fP, \fIoptional\fP) \-\- the action to take on an error.  \(aqignore\(aq means that the
request should be retried.  (default: report; Since: 5.0)
.IP \(bu 2
\fBfilter\-node\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- the node name that should be assigned to the
filter driver that the commit job inserts into the graph above
\fBtop\fP\&.  If this option is not given, a node name is
autogenerated.  (Since: 2.9)
.IP \(bu 2
\fBauto\-finalize\fP (\fBboolean\fP, \fIoptional\fP) \-\- When false, this job will wait in a PENDING state
after it has finished its work, waiting for \fBblock\-job\-finalize\fP
before making any block graph changes.  When true, this job will
automatically perform its abort or commit actions.  Defaults to
true.  (Since 3.1)
.IP \(bu 2
\fBauto\-dismiss\fP (\fBboolean\fP, \fIoptional\fP) \-\- When false, this job will wait in a CONCLUDED state
after it has completely ceased all work, and awaits
\fBblock\-job\-dismiss\fP\&.  When true, this job will automatically
disappear from the query list without user intervention.
Defaults to true.  (Since 3.1)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- Members \fBbase\fP and \fBtop\fP are deprecated.  Use \fBbase\-node\fP
and \fBtop\-node\fP instead.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBdevice\fP does not exist, DeviceNotFound
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock\-commit\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqvirtio0\(dq,
                    \(dqtop\(dq: \(dq/tmp/snap1.qcow2\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  drive\-backup  (Since: 1.6)
This command is deprecated.
.sp
Start a point\-in\-time copy of a block device to a new destination.
The status of ongoing drive\-backup operations can be checked with
query\-block\-jobs where the BlockJobInfo.type field has the value
\(aqbackup\(aq.  The operation can be stopped before it has completed
using the block\-job\-cancel command.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%DriveBackup\fP\&.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- This command is deprecated.  Use \fBblockdev\-backup\fP
instead.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBdevice\fP is not a valid block device, GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqdrive\-backup\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqdrive0\(dq,
                    \(dqsync\(dq: \(dqfull\(dq,
                    \(dqtarget\(dq: \(dqbackup.img\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-backup  (Since: 2.3)
Start a point\-in\-time copy of a block device to a new destination.
The status of ongoing blockdev\-backup operations can be checked with
query\-block\-jobs where the BlockJobInfo.type field has the value
\(aqbackup\(aq.  The operation can be stopped before it has completed
using the block\-job\-cancel command.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockdevBackup\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBdevice\fP is not a valid block device, DeviceNotFound
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-backup\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqsrc\-id\(dq,
                    \(dqsync\(dq: \(dqfull\(dq,
                    \(dqtarget\(dq: \(dqtgt\-id\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-named\-block\-nodes  (Since: 2.0)
Get the named block driver list
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBflat\fP (\fBboolean\fP, \fIoptional\fP) \-\- Omit the nested data about backing image (\(dqbacking\-image\(dq
key) if true.  Default is false (Since 5.0)
.UNINDENT
.TP
.B Return
\fB[\fP\fI\%BlockDeviceInfo\fP\fB]\fP \-\- the list of BlockDeviceInfo
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-named\-block\-nodes\(dq }
<\- { \(dqreturn\(dq: [ { \(dqro\(dq:false,
                   \(dqdrv\(dq:\(dqqcow2\(dq,
                   \(dqencrypted\(dq:false,
                   \(dqfile\(dq:\(dqdisks/test.qcow2\(dq,
                   \(dqnode\-name\(dq: \(dqmy\-node\(dq,
                   \(dqbacking_file_depth\(dq:1,
                   \(dqdetect_zeroes\(dq:\(dqoff\(dq,
                   \(dqbps\(dq:1000000,
                   \(dqbps_rd\(dq:0,
                   \(dqbps_wr\(dq:0,
                   \(dqiops\(dq:1000000,
                   \(dqiops_rd\(dq:0,
                   \(dqiops_wr\(dq:0,
                   \(dqbps_max\(dq: 8000000,
                   \(dqbps_rd_max\(dq: 0,
                   \(dqbps_wr_max\(dq: 0,
                   \(dqiops_max\(dq: 0,
                   \(dqiops_rd_max\(dq: 0,
                   \(dqiops_wr_max\(dq: 0,
                   \(dqiops_size\(dq: 0,
                   \(dqwrite_threshold\(dq: 0,
                   \(dqimage\(dq:{
                      \(dqfilename\(dq:\(dqdisks/test.qcow2\(dq,
                      \(dqformat\(dq:\(dqqcow2\(dq,
                      \(dqvirtual\-size\(dq:2048000,
                      \(dqbacking_file\(dq:\(dqbase.qcow2\(dq,
                      \(dqfull\-backing\-filename\(dq:\(dqdisks/base.qcow2\(dq,
                      \(dqbacking\-filename\-format\(dq:\(dqqcow2\(dq,
                      \(dqsnapshots\(dq:[
                         {
                            \(dqid\(dq: \(dq1\(dq,
                            \(dqname\(dq: \(dqsnapshot1\(dq,
                            \(dqvm\-state\-size\(dq: 0,
                            \(dqdate\-sec\(dq: 10000200,
                            \(dqdate\-nsec\(dq: 12,
                            \(dqvm\-clock\-sec\(dq: 206,
                            \(dqvm\-clock\-nsec\(dq: 30
                         }
                      ],
                      \(dqbacking\-image\(dq:{
                          \(dqfilename\(dq:\(dqdisks/base.qcow2\(dq,
                          \(dqformat\(dq:\(dqqcow2\(dq,
                          \(dqvirtual\-size\(dq:2048000
                      }
                   } } ] }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  XDbgBlockGraphNodeType  (Since: 4.0)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBblock\-backend\fP \-\- corresponds to BlockBackend
.IP \(bu 2
\fBblock\-job\fP \-\- corresponds to BlockJob
.IP \(bu 2
\fBblock\-driver\fP \-\- corresponds to BlockDriverState
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  XDbgBlockGraphNode  (Since: 4.0)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBint\fP) \-\- Block graph node identifier.  This \fBid\fP is generated only for
x\-debug\-query\-block\-graph and does not relate to any other
identifiers in Qemu.
.IP \(bu 2
\fBtype\fP (\fI\%XDbgBlockGraphNodeType\fP) \-\- Type of graph node.  Can be one of block\-backend, block\-job
or block\-driver\-state.
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- Human readable name of the node.  Corresponds to node\-name
for block\-driver\-state nodes; is not guaranteed to be unique in
the whole graph (with block\-jobs and block\-backends).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockPermission  (Since: 4.0)
Enum of base block permissions.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBconsistent\-read\fP \-\- A user that has the \(dqpermission\(dq of consistent
reads is guaranteed that their view of the contents of the block
device is complete and self\-consistent, representing the
contents of a disk at a specific point.  For most block devices
(including their backing files) this is true, but the property
cannot be maintained in a few situations like for intermediate
nodes of a commit block job.
.IP \(bu 2
\fBwrite\fP \-\- This permission is required to change the visible disk
contents.
.IP \(bu 2
\fBwrite\-unchanged\fP \-\- This permission (which is weaker than
BLK_PERM_WRITE) is both enough and required for writes to the
block node when the caller promises that the visible disk
content doesn\(aqt change.  As the BLK_PERM_WRITE permission is
strictly stronger, either is sufficient to perform an unchanging
write.
.IP \(bu 2
\fBresize\fP \-\- This permission is required to change the size of a block
node.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  XDbgBlockGraphEdge  (Since: 4.0)
Block Graph edge description for x\-debug\-query\-block\-graph.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBint\fP) \-\- parent id
.IP \(bu 2
\fBchild\fP (\fBint\fP) \-\- child id
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- name of the relation (examples are \(aqfile\(aq and \(aqbacking\(aq)
.IP \(bu 2
\fBperm\fP (\fB[\fP\fI\%BlockPermission\fP\fB]\fP) \-\- granted permissions for the parent operating on the child
.IP \(bu 2
\fBshared\-perm\fP (\fB[\fP\fI\%BlockPermission\fP\fB]\fP) \-\- permissions that can still be granted to other users
of the child while it is still attached to this parent
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  XDbgBlockGraph  (Since: 4.0)
Block Graph \- list of nodes and list of edges.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnodes\fP (\fB[\fP\fI\%XDbgBlockGraphNode\fP\fB]\fP) \-\- Not documented
.IP \(bu 2
\fBedges\fP (\fB[\fP\fI\%XDbgBlockGraphEdge\fP\fB]\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-debug\-query\-block\-graph  (Since: 4.0)
This command is unstable/experimental.
.sp
Get the block graph.
.INDENT 7.0
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is meant for debugging.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  drive\-mirror  (Since: 1.3)
Start mirroring a block device\(aqs writes to a new destination.
target specifies the target of the new image.  If the file exists,
or if it is a device, it will be used as the new destination for
writes.  If it does not exist, a new file will be created.  \fBformat\fP
specifies the format of the mirror image, default is to probe if
mode=\(aqexisting\(aq, else the format of the source.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%DriveMirror\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBdevice\fP is not a valid block device, GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqdrive\-mirror\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqide\-hd0\(dq,
                    \(dqtarget\(dq: \(dq/some/place/my\-image\(dq,
                    \(dqsync\(dq: \(dqfull\(dq,
                    \(dqformat\(dq: \(dqqcow2\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DriveMirror  (Since: 1.3)
A set of parameters describing drive mirror setup.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBjob\-id\fP (\fBstring\fP, \fIoptional\fP) \-\- identifier for the newly\-created block job.  If omitted,
the device name will be used.  (Since 2.7)
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- the device name or node\-name of a root node whose writes
should be mirrored.
.IP \(bu 2
\fBtarget\fP (\fBstring\fP) \-\- the target of the new image.  If the file exists, or if it
is a device, the existing file/device will be used as the new
destination.  If it does not exist, a new file will be created.
.IP \(bu 2
\fBformat\fP (\fBstring\fP, \fIoptional\fP) \-\- the format of the new destination, default is to probe if
\fBmode\fP is \(aqexisting\(aq, else the format of the source
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- the new block driver state node name in the graph (Since
2.1)
.IP \(bu 2
\fBreplaces\fP (\fBstring\fP, \fIoptional\fP) \-\- with sync=full graph node name to be replaced by the new
image when a whole image copy is done.  This can be used to
repair broken Quorum files.  By default, \fBdevice\fP is replaced,
although implicitly created filters on it are kept.  (Since 2.1)
.IP \(bu 2
\fBmode\fP (\fI\%NewImageMode\fP, \fIoptional\fP) \-\- whether and how QEMU should create a new image, default is
\(aqabsolute\-paths\(aq.
.IP \(bu 2
\fBspeed\fP (\fBint\fP, \fIoptional\fP) \-\- the maximum speed, in bytes per second
.IP \(bu 2
\fBsync\fP (\fI\%MirrorSyncMode\fP) \-\- what parts of the disk image should be copied to the
destination (all the disk, only the sectors allocated in the
topmost image, or only new I/O).
.IP \(bu 2
\fBgranularity\fP (\fBint\fP, \fIoptional\fP) \-\- granularity of the dirty bitmap, default is 64K if the
image format doesn\(aqt have clusters, 4K if the clusters are
smaller than that, else the cluster size.  Must be a power of 2
between 512 and 64M (since 1.4).
.IP \(bu 2
\fBbuf\-size\fP (\fBint\fP, \fIoptional\fP) \-\- maximum amount of data in flight from source to target
(since 1.4).
.IP \(bu 2
\fBon\-source\-error\fP (\fI\%BlockdevOnError\fP, \fIoptional\fP) \-\- the action to take on an error on the source,
default \(aqreport\(aq.  \(aqstop\(aq and \(aqenospc\(aq can only be used if the
block device supports io\-status (see BlockInfo).
.IP \(bu 2
\fBon\-target\-error\fP (\fI\%BlockdevOnError\fP, \fIoptional\fP) \-\- the action to take on an error on the target,
default \(aqreport\(aq (no limitations, since this applies to a
different block device than \fBdevice\fP).
.IP \(bu 2
\fBunmap\fP (\fBboolean\fP, \fIoptional\fP) \-\- Whether to try to unmap target sectors where source has only
zero.  If true, and target unallocated sectors will read as
zero, target image sectors will be unmapped; otherwise, zeroes
will be written.  Both will result in identical contents.
Default is true.  (Since 2.4)
.IP \(bu 2
\fBcopy\-mode\fP (\fI\%MirrorCopyMode\fP, \fIoptional\fP) \-\- when to copy data to the destination; defaults to
\(aqbackground\(aq (Since: 3.0)
.IP \(bu 2
\fBauto\-finalize\fP (\fBboolean\fP, \fIoptional\fP) \-\- When false, this job will wait in a PENDING state
after it has finished its work, waiting for \fBblock\-job\-finalize\fP
before making any block graph changes.  When true, this job will
automatically perform its abort or commit actions.  Defaults to
true.  (Since 3.1)
.IP \(bu 2
\fBauto\-dismiss\fP (\fBboolean\fP, \fIoptional\fP) \-\- When false, this job will wait in a CONCLUDED state
after it has completely ceased all work, and awaits
\fBblock\-job\-dismiss\fP\&.  When true, this job will automatically
disappear from the query list without user intervention.
Defaults to true.  (Since 3.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockDirtyBitmap  (Since: 2.4)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnode\fP (\fBstring\fP) \-\- name of device/node which the bitmap is tracking
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- name of the dirty bitmap
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockDirtyBitmapAdd  (Since: 2.4)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnode\fP (\fBstring\fP) \-\- name of device/node which the bitmap is tracking
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- name of the dirty bitmap (must be less than 1024 bytes)
.IP \(bu 2
\fBgranularity\fP (\fBint\fP, \fIoptional\fP) \-\- the bitmap granularity, default is 64k for
block\-dirty\-bitmap\-add
.IP \(bu 2
\fBpersistent\fP (\fBboolean\fP, \fIoptional\fP) \-\- the bitmap is persistent, i.e. it will be saved to the
corresponding block device image file on its close.  For now
only Qcow2 disks support persistent bitmaps.  Default is false
for block\-dirty\-bitmap\-add.  (Since: 2.10)
.IP \(bu 2
\fBdisabled\fP (\fBboolean\fP, \fIoptional\fP) \-\- the bitmap is created in the disabled state, which means
that it will not track drive changes.  The bitmap may be enabled
with block\-dirty\-bitmap\-enable.  Default is false.  (Since: 4.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Alternate  BlockDirtyBitmapOrStr  (Since: 4.1)
.INDENT 7.0
.TP
.B Alternatives
.INDENT 7.0
.IP \(bu 2
\fBlocal\fP (\fBstring\fP) \-\- name of the bitmap, attached to the same node as target
bitmap.
.IP \(bu 2
\fBexternal\fP (\fI\%BlockDirtyBitmap\fP) \-\- bitmap with specified node
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockDirtyBitmapMerge  (Since: 4.0)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnode\fP (\fBstring\fP) \-\- name of device/node which the \fBtarget\fP bitmap is tracking
.IP \(bu 2
\fBtarget\fP (\fBstring\fP) \-\- name of the destination dirty bitmap
.IP \(bu 2
\fBbitmaps\fP (\fB[\fP\fI\%BlockDirtyBitmapOrStr\fP\fB]\fP) \-\- name(s) of the source dirty bitmap(s) at \fBnode\fP and/or
fully specified BlockDirtyBitmap elements.  The latter are
supported since 4.1.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-dirty\-bitmap\-add  (Since: 2.4)
Create a dirty bitmap with a name on the node, and start tracking
the writes.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockDirtyBitmapAdd\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBnode\fP is not a valid block device or node, DeviceNotFound
.IP \(bu 2
If \fBname\fP is already taken, GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock\-dirty\-bitmap\-add\(dq,
     \(dqarguments\(dq: { \(dqnode\(dq: \(dqdrive0\(dq, \(dqname\(dq: \(dqbitmap0\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-dirty\-bitmap\-remove  (Since: 2.4)
Stop write tracking and remove the dirty bitmap that was created
with block\-dirty\-bitmap\-add.  If the bitmap is persistent, remove it
from its storage too.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockDirtyBitmap\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBnode\fP is not a valid block device or node, DeviceNotFound
.IP \(bu 2
If \fBname\fP is not found, GenericError
.IP \(bu 2
if \fBname\fP is frozen by an operation, GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock\-dirty\-bitmap\-remove\(dq,
     \(dqarguments\(dq: { \(dqnode\(dq: \(dqdrive0\(dq, \(dqname\(dq: \(dqbitmap0\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-dirty\-bitmap\-clear  (Since: 2.4)
Clear (reset) a dirty bitmap on the device, so that an incremental
backup from this point in time forward will only backup clusters
modified after this clear operation.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockDirtyBitmap\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBnode\fP is not a valid block device, DeviceNotFound
.IP \(bu 2
If \fBname\fP is not found, GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock\-dirty\-bitmap\-clear\(dq,
     \(dqarguments\(dq: { \(dqnode\(dq: \(dqdrive0\(dq, \(dqname\(dq: \(dqbitmap0\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-dirty\-bitmap\-enable  (Since: 4.0)
Enables a dirty bitmap so that it will begin tracking disk changes.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockDirtyBitmap\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBnode\fP is not a valid block device, DeviceNotFound
.IP \(bu 2
If \fBname\fP is not found, GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock\-dirty\-bitmap\-enable\(dq,
     \(dqarguments\(dq: { \(dqnode\(dq: \(dqdrive0\(dq, \(dqname\(dq: \(dqbitmap0\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-dirty\-bitmap\-disable  (Since: 4.0)
Disables a dirty bitmap so that it will stop tracking disk changes.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockDirtyBitmap\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBnode\fP is not a valid block device, DeviceNotFound
.IP \(bu 2
If \fBname\fP is not found, GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock\-dirty\-bitmap\-disable\(dq,
     \(dqarguments\(dq: { \(dqnode\(dq: \(dqdrive0\(dq, \(dqname\(dq: \(dqbitmap0\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-dirty\-bitmap\-merge  (Since: 4.0)
Merge dirty bitmaps listed in \fBbitmaps\fP to the \fBtarget\fP dirty bitmap.
Dirty bitmaps in \fBbitmaps\fP will be unchanged, except if it also
appears as the \fBtarget\fP bitmap.  Any bits already set in \fBtarget\fP will
still be set after the merge, i.e., this operation does not clear
the target.  On error, \fBtarget\fP is unchanged.
.sp
The resulting bitmap will count as dirty any clusters that were
dirty in any of the source bitmaps.  This can be used to achieve
backup checkpoints, or in simpler usages, to copy bitmaps.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockDirtyBitmapMerge\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBnode\fP is not a valid block device, DeviceNotFound
.IP \(bu 2
If any bitmap in \fBbitmaps\fP or \fBtarget\fP is not found,
GenericError
.IP \(bu 2
If any of the bitmaps have different sizes or granularities,
GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock\-dirty\-bitmap\-merge\(dq,
     \(dqarguments\(dq: { \(dqnode\(dq: \(dqdrive0\(dq, \(dqtarget\(dq: \(dqbitmap0\(dq,
                    \(dqbitmaps\(dq: [\(dqbitmap1\(dq] } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockDirtyBitmapSha256  (Since: 2.10)
SHA256 hash of dirty bitmap data
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsha256\fP (\fBstring\fP) \-\- ASCII representation of SHA256 bitmap hash
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-debug\-block\-dirty\-bitmap\-sha256  (Since: 2.10)
This command is unstable/experimental.
.sp
Get bitmap SHA256.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockDirtyBitmap\fP\&.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is meant for debugging.
.UNINDENT
.TP
.B Return
\fI\%BlockDirtyBitmapSha256\fP \-\- BlockDirtyBitmapSha256
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBnode\fP is not a valid block device, DeviceNotFound
.IP \(bu 2
If \fBname\fP is not found or if hashing has failed, GenericError
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-mirror  (Since: 2.6)
Start mirroring a block device\(aqs writes to a new destination.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBjob\-id\fP (\fBstring\fP, \fIoptional\fP) \-\- identifier for the newly\-created block job.  If omitted,
the device name will be used.  (Since 2.7)
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The device name or node\-name of a root node whose writes
should be mirrored.
.IP \(bu 2
\fBtarget\fP (\fBstring\fP) \-\- the id or node\-name of the block device to mirror to.  This
mustn\(aqt be attached to guest.
.IP \(bu 2
\fBreplaces\fP (\fBstring\fP, \fIoptional\fP) \-\- with sync=full graph node name to be replaced by the new
image when a whole image copy is done.  This can be used to
repair broken Quorum files.  By default, \fBdevice\fP is replaced,
although implicitly created filters on it are kept.
.IP \(bu 2
\fBspeed\fP (\fBint\fP, \fIoptional\fP) \-\- the maximum speed, in bytes per second
.IP \(bu 2
\fBsync\fP (\fI\%MirrorSyncMode\fP) \-\- what parts of the disk image should be copied to the
destination (all the disk, only the sectors allocated in the
topmost image, or only new I/O).
.IP \(bu 2
\fBgranularity\fP (\fBint\fP, \fIoptional\fP) \-\- granularity of the dirty bitmap, default is 64K if the
image format doesn\(aqt have clusters, 4K if the clusters are
smaller than that, else the cluster size.  Must be a power of 2
between 512 and 64M
.IP \(bu 2
\fBbuf\-size\fP (\fBint\fP, \fIoptional\fP) \-\- maximum amount of data in flight from source to target
.IP \(bu 2
\fBon\-source\-error\fP (\fI\%BlockdevOnError\fP, \fIoptional\fP) \-\- the action to take on an error on the source,
default \(aqreport\(aq.  \(aqstop\(aq and \(aqenospc\(aq can only be used if the
block device supports io\-status (see BlockInfo).
.IP \(bu 2
\fBon\-target\-error\fP (\fI\%BlockdevOnError\fP, \fIoptional\fP) \-\- the action to take on an error on the target,
default \(aqreport\(aq (no limitations, since this applies to a
different block device than \fBdevice\fP).
.IP \(bu 2
\fBfilter\-node\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- the node name that should be assigned to the
filter driver that the mirror job inserts into the graph above
\fBdevice\fP\&.  If this option is not given, a node name is
autogenerated.  (Since: 2.9)
.IP \(bu 2
\fBcopy\-mode\fP (\fI\%MirrorCopyMode\fP, \fIoptional\fP) \-\- when to copy data to the destination; defaults to
\(aqbackground\(aq (Since: 3.0)
.IP \(bu 2
\fBauto\-finalize\fP (\fBboolean\fP, \fIoptional\fP) \-\- When false, this job will wait in a PENDING state
after it has finished its work, waiting for \fBblock\-job\-finalize\fP
before making any block graph changes.  When true, this job will
automatically perform its abort or commit actions.  Defaults to
true.  (Since 3.1)
.IP \(bu 2
\fBauto\-dismiss\fP (\fBboolean\fP, \fIoptional\fP) \-\- When false, this job will wait in a CONCLUDED state
after it has completely ceased all work, and awaits
\fBblock\-job\-dismiss\fP\&.  When true, this job will automatically
disappear from the query list without user intervention.
Defaults to true.  (Since 3.1)
.IP \(bu 2
\fBtarget\-is\-zero\fP (\fBboolean\fP, \fIoptional\fP) \-\- Assume the destination reads as all zeroes before
the mirror started.  Setting this to true can speed up the
mirror.  Setting this to true when the destination is not
actually all zero can corrupt the destination.  (Since 10.1)
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-mirror\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqide\-hd0\(dq,
                    \(dqtarget\(dq: \(dqtarget0\(dq,
                    \(dqsync\(dq: \(dqfull\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockIOThrottle  (Since: 1.1)
A set of parameters describing block throttling.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP, \fIoptional\fP) \-\- Block device name
.IP \(bu 2
\fBid\fP (\fBstring\fP, \fIoptional\fP) \-\- The name or QOM path of the guest device (since: 2.8)
.IP \(bu 2
\fBbps\fP (\fBint\fP) \-\- total throughput limit in bytes per second
.IP \(bu 2
\fBbps_rd\fP (\fBint\fP) \-\- read throughput limit in bytes per second
.IP \(bu 2
\fBbps_wr\fP (\fBint\fP) \-\- write throughput limit in bytes per second
.IP \(bu 2
\fBiops\fP (\fBint\fP) \-\- total I/O operations per second
.IP \(bu 2
\fBiops_rd\fP (\fBint\fP) \-\- read I/O operations per second
.IP \(bu 2
\fBiops_wr\fP (\fBint\fP) \-\- write I/O operations per second
.IP \(bu 2
\fBbps_max\fP (\fBint\fP, \fIoptional\fP) \-\- total throughput limit during bursts, in bytes (Since 1.7)
.IP \(bu 2
\fBbps_rd_max\fP (\fBint\fP, \fIoptional\fP) \-\- read throughput limit during bursts, in bytes (Since
1.7)
.IP \(bu 2
\fBbps_wr_max\fP (\fBint\fP, \fIoptional\fP) \-\- write throughput limit during bursts, in bytes (Since
1.7)
.IP \(bu 2
\fBiops_max\fP (\fBint\fP, \fIoptional\fP) \-\- total I/O operations per second during bursts, in bytes
(Since 1.7)
.IP \(bu 2
\fBiops_rd_max\fP (\fBint\fP, \fIoptional\fP) \-\- read I/O operations per second during bursts, in bytes
(Since 1.7)
.IP \(bu 2
\fBiops_wr_max\fP (\fBint\fP, \fIoptional\fP) \-\- write I/O operations per second during bursts, in
bytes (Since 1.7)
.IP \(bu 2
\fBbps_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBbps_max\fP burst period, in
seconds.  It must only be set if \fBbps_max\fP is set as well.
Defaults to 1.  (Since 2.6)
.IP \(bu 2
\fBbps_rd_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBbps_rd_max\fP burst period,
in seconds.  It must only be set if \fBbps_rd_max\fP is set as well.
Defaults to 1.  (Since 2.6)
.IP \(bu 2
\fBbps_wr_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBbps_wr_max\fP burst period,
in seconds.  It must only be set if \fBbps_wr_max\fP is set as well.
Defaults to 1.  (Since 2.6)
.IP \(bu 2
\fBiops_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBiops\fP burst period, in
seconds.  It must only be set if \fBiops_max\fP is set as well.
Defaults to 1.  (Since 2.6)
.IP \(bu 2
\fBiops_rd_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBiops_rd_max\fP burst
period, in seconds.  It must only be set if \fBiops_rd_max\fP is set
as well.  Defaults to 1.  (Since 2.6)
.IP \(bu 2
\fBiops_wr_max_length\fP (\fBint\fP, \fIoptional\fP) \-\- maximum length of the \fBiops_wr_max\fP burst
period, in seconds.  It must only be set if \fBiops_wr_max\fP is set
as well.  Defaults to 1.  (Since 2.6)
.IP \(bu 2
\fBiops_size\fP (\fBint\fP, \fIoptional\fP) \-\- an I/O size in bytes (Since 1.7)
.IP \(bu 2
\fBgroup\fP (\fBstring\fP, \fIoptional\fP) \-\- throttle group name (Since 2.4)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- Member \fBdevice\fP is deprecated.  Use \fBid\fP instead.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ThrottleLimits  (Since: 2.11)
Limit parameters for throttling.  Since some limit combinations are
illegal, limits should always be set in one transaction.  All fields
are optional.  When setting limits, if a field is missing the
current value is not changed.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBiops\-total\fP (\fBint\fP, \fIoptional\fP) \-\- limit total I/O operations per second
.IP \(bu 2
\fBiops\-total\-max\fP (\fBint\fP, \fIoptional\fP) \-\- I/O operations burst
.IP \(bu 2
\fBiops\-total\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- length of the iops\-total\-max burst period,
in seconds It must only be set if \fBiops\-total\-max\fP is set as
well.
.IP \(bu 2
\fBiops\-read\fP (\fBint\fP, \fIoptional\fP) \-\- limit read operations per second
.IP \(bu 2
\fBiops\-read\-max\fP (\fBint\fP, \fIoptional\fP) \-\- I/O operations read burst
.IP \(bu 2
\fBiops\-read\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- length of the iops\-read\-max burst period, in
seconds It must only be set if \fBiops\-read\-max\fP is set as well.
.IP \(bu 2
\fBiops\-write\fP (\fBint\fP, \fIoptional\fP) \-\- limit write operations per second
.IP \(bu 2
\fBiops\-write\-max\fP (\fBint\fP, \fIoptional\fP) \-\- I/O operations write burst
.IP \(bu 2
\fBiops\-write\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- length of the iops\-write\-max burst period,
in seconds It must only be set if \fBiops\-write\-max\fP is set as
well.
.IP \(bu 2
\fBbps\-total\fP (\fBint\fP, \fIoptional\fP) \-\- limit total bytes per second
.IP \(bu 2
\fBbps\-total\-max\fP (\fBint\fP, \fIoptional\fP) \-\- total bytes burst
.IP \(bu 2
\fBbps\-total\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- length of the bps\-total\-max burst period, in
seconds.  It must only be set if \fBbps\-total\-max\fP is set as well.
.IP \(bu 2
\fBbps\-read\fP (\fBint\fP, \fIoptional\fP) \-\- limit read bytes per second
.IP \(bu 2
\fBbps\-read\-max\fP (\fBint\fP, \fIoptional\fP) \-\- total bytes read burst
.IP \(bu 2
\fBbps\-read\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- length of the bps\-read\-max burst period, in
seconds It must only be set if \fBbps\-read\-max\fP is set as well.
.IP \(bu 2
\fBbps\-write\fP (\fBint\fP, \fIoptional\fP) \-\- limit write bytes per second
.IP \(bu 2
\fBbps\-write\-max\fP (\fBint\fP, \fIoptional\fP) \-\- total bytes write burst
.IP \(bu 2
\fBbps\-write\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- length of the bps\-write\-max burst period, in
seconds It must only be set if \fBbps\-write\-max\fP is set as well.
.IP \(bu 2
\fBiops\-size\fP (\fBint\fP, \fIoptional\fP) \-\- when limiting by iops max size of an I/O in bytes
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ThrottleGroupProperties  (Since: 2.11)
Properties for throttle\-group objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBlimits\fP (\fI\%ThrottleLimits\fP, \fIoptional\fP) \-\- limits to apply for this throttle group
.IP \(bu 2
\fBx\-iops\-total\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-iops\-total\-max\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-iops\-total\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-iops\-read\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-iops\-read\-max\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-iops\-read\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-iops\-write\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-iops\-write\-max\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-iops\-write\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-bps\-total\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-bps\-total\-max\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-bps\-total\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-bps\-read\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-bps\-read\-max\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-bps\-read\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-bps\-write\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-bps\-write\-max\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-bps\-write\-max\-length\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.IP \(bu 2
\fBx\-iops\-size\fP (\fBint\fP, \fIoptional\fP) \-\- Not documented
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- All members starting with x\- are aliases for the same key
without x\- in the \fBlimits\fP object.  This is not a stable
interface and may be removed or changed incompatibly in the
future.  Use \fBlimits\fP for a supported stable interface.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-stream  (Since: 1.1)
Copy data from a backing file into a block device.
.sp
The block streaming operation is performed in the background until
the entire backing file has been copied.  This command returns
immediately once streaming has started.  The status of ongoing block
streaming operations can be checked with query\-block\-jobs.  The
operation can be stopped before it has completed using the
block\-job\-cancel command.
.sp
The node that receives the data is called the top image, can be
located in any part of the chain (but always above the base image;
see below) and can be specified using its device or node name.
Earlier qemu versions only allowed \(aqdevice\(aq to name the top level
node; presence of the \(aqbase\-node\(aq parameter during introspection can
be used as a witness of the enhanced semantics of \(aqdevice\(aq.
.sp
If a base file is specified then sectors are not copied from that
base file and its backing chain.  This can be used to stream a
subset of the backing file chain instead of flattening the entire
image.  When streaming completes the image file will have the base
file as its backing file, unless that node was changed while the job
was running.  In that case, base\(aqs parent\(aqs backing (or filtered,
whichever exists) child (i.e., base at the beginning of the job)
will be the new backing file.
.sp
On successful completion the image file is updated to drop the
backing file and the BLOCK_JOB_COMPLETED event is emitted.
.sp
In case \fBdevice\fP is a filter node, block\-stream modifies the first
non\-filter overlay node below it to point to the new backing node
instead of modifying \fBdevice\fP itself.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBjob\-id\fP (\fBstring\fP, \fIoptional\fP) \-\- identifier for the newly\-created block job.  If omitted,
the device name will be used.  (Since 2.7)
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- the device or node name of the top image
.IP \(bu 2
\fBbase\fP (\fBstring\fP, \fIoptional\fP) \-\- the common backing file name.  It cannot be set if \fBbase\-node\fP
or \fBbottom\fP is also set.
.IP \(bu 2
\fBbase\-node\fP (\fBstring\fP, \fIoptional\fP) \-\- the node name of the backing file.  It cannot be set if
\fBbase\fP or \fBbottom\fP is also set.  (Since 2.8)
.IP \(bu 2
\fBbottom\fP (\fBstring\fP, \fIoptional\fP) \-\- the last node in the chain that should be streamed into
top.  It cannot be set if \fBbase\fP or \fBbase\-node\fP is also set.  It
cannot be filter node.  (Since 6.0)
.IP \(bu 2
\fBbacking\-file\fP (\fBstring\fP, \fIoptional\fP) \-\- 
.sp
The backing file string to write into the top image.
This filename is not validated.
.sp
If a pathname string is such that it cannot be resolved by QEMU,
that means that subsequent QMP or HMP commands must use
node\-names for the image in question, as filename lookup methods
will fail.
.sp
If not specified, QEMU will automatically determine the backing
file string to use, or error out if there is no obvious choice.
Care should be taken when specifying the string, to specify a
valid filename or protocol.  (Since 2.1)

.IP \(bu 2
\fBbacking\-mask\-protocol\fP (\fBboolean\fP, \fIoptional\fP) \-\- If true, replace any protocol mentioned in
the \(aqbacking file format\(aq with \(aqraw\(aq, rather than storing the
protocol name as the backing format.  Can be used even when no
image header will be updated (default false; since 9.0).
.IP \(bu 2
\fBspeed\fP (\fBint\fP, \fIoptional\fP) \-\- the maximum speed, in bytes per second
.IP \(bu 2
\fBon\-error\fP (\fI\%BlockdevOnError\fP, \fIoptional\fP) \-\- the action to take on an error (default report).  \(aqstop\(aq
and \(aqenospc\(aq can only be used if the block device supports
io\-status (see BlockInfo).  (Since 1.3)
.IP \(bu 2
\fBfilter\-node\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- the node name that should be assigned to the
filter driver that the stream job inserts into the graph above
\fBdevice\fP\&.  If this option is not given, a node name is
autogenerated.  (Since: 6.0)
.IP \(bu 2
\fBauto\-finalize\fP (\fBboolean\fP, \fIoptional\fP) \-\- When false, this job will wait in a PENDING state
after it has finished its work, waiting for \fBblock\-job\-finalize\fP
before making any block graph changes.  When true, this job will
automatically perform its abort or commit actions.  Defaults to
true.  (Since 3.1)
.IP \(bu 2
\fBauto\-dismiss\fP (\fBboolean\fP, \fIoptional\fP) \-\- When false, this job will wait in a CONCLUDED state
after it has completely ceased all work, and awaits
\fBblock\-job\-dismiss\fP\&.  When true, this job will automatically
disappear from the query list without user intervention.
Defaults to true.  (Since 3.1)
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBdevice\fP does not exist, DeviceNotFound.
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock\-stream\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqvirtio0\(dq,
                    \(dqbase\(dq: \(dq/tmp/master.qcow2\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-job\-set\-speed  (Since: 1.1)
Set maximum speed for a background block operation.
.sp
This command can only be issued when there is an active block job.
.sp
Throttling can be disabled by setting the speed to 0.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The job identifier.  This used to be a device name (hence
the name of the parameter), but since QEMU 2.7 it can have other
values.
.IP \(bu 2
\fBspeed\fP (\fBint\fP) \-\- the maximum speed, in bytes per second, or 0 for unlimited.
Defaults to 0.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If no background operation is active on this device,
DeviceNotActive
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-job\-cancel  (Since: 1.1)
Stop an active background block operation.
.sp
This command returns immediately after marking the active background
block operation for cancellation.  It is an error to call this
command if no operation is in progress.
.sp
The operation will cancel as soon as possible and then emit the
BLOCK_JOB_CANCELLED event.  Before that happens the job is still
visible when enumerated using query\-block\-jobs.
.sp
Note that if you issue \(aqblock\-job\-cancel\(aq after \(aqdrive\-mirror\(aq has
indicated (via the event BLOCK_JOB_READY) that the source and
destination are synchronized, then the event triggered by this
command changes to BLOCK_JOB_COMPLETED, to indicate that the
mirroring has ended and the destination now has a point\-in\-time copy
tied to the time of the cancellation.
.sp
For streaming, the image file retains its backing file unless the
streaming operation happens to complete just as it is being
cancelled.  A new streaming operation can be started at a later time
to finish copying all data from the backing file.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The job identifier.  This used to be a device name (hence
the name of the parameter), but since QEMU 2.7 it can have other
values.
.IP \(bu 2
\fBforce\fP (\fBboolean\fP, \fIoptional\fP) \-\- If true, and the job has already emitted the event
BLOCK_JOB_READY, abandon the job immediately (even if it is
paused) instead of waiting for the destination to complete its
final synchronization (since 1.3)
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If no background operation is active on this device,
DeviceNotActive
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-job\-pause  (Since: 1.3)
This command is deprecated.
.sp
Pause an active background block operation.
.sp
This command returns immediately after marking the active job for
pausing.  Pausing an already paused job is an error.
.sp
The job will pause as soon as possible, which means transitioning
into the PAUSED state if it was RUNNING, or into STANDBY if it was
READY.  The corresponding JOB_STATUS_CHANGE event will be emitted.
.sp
Cancelling a paused job automatically resumes it.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The job identifier.  This used to be a device name (hence
the name of the parameter), but since QEMU 2.7 it can have other
values.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- This command is deprecated.  Use \fBjob\-pause\fP
instead.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If no background operation is active on this device,
DeviceNotActive
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-job\-resume  (Since: 1.3)
This command is deprecated.
.sp
Resume an active background block operation.
.sp
This command returns immediately after resuming a paused job.
Resuming an already running job is an error.
.sp
This command also clears the error status of the job.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The job identifier.  This used to be a device name (hence
the name of the parameter), but since QEMU 2.7 it can have other
values.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- This command is deprecated.  Use \fBjob\-resume\fP
instead.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If no background operation is active on this device,
DeviceNotActive
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-job\-complete  (Since: 1.3)
This command is deprecated.
.sp
Manually trigger completion of an active job in the READY or STANDBY
state.  Completing the job in any other state is an error.
.sp
This is supported only for drive mirroring, where it also switches
the device to write to the target path only. Note that drive
mirroring includes drive\-mirror, blockdev\-mirror and block\-commit
job (only in case of \(dqactive commit\(dq, when the node being commited
is used by the guest). The ability to complete is signaled with a
BLOCK_JOB_READY event.
.sp
This command completes an active background block operation
synchronously.  The ordering of this command\(aqs return with the
BLOCK_JOB_COMPLETED event is not defined.  Note that if an I/O error
occurs during the processing of this command: 1) the command itself
will fail; 2) the error will be processed according to the
rerror/werror arguments that were specified when starting the
operation.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The job identifier.  This used to be a device name (hence
the name of the parameter), but since QEMU 2.7 it can have other
values.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- This command is deprecated.  Use \fBjob\-complete\fP
instead.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If no background operation is active on this device,
DeviceNotActive
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-job\-dismiss  (Since: 2.12)
This command is deprecated.
.sp
Deletes a job that is in the CONCLUDED state.  This command only
needs to be run explicitly for jobs that don\(aqt have automatic
dismiss enabled. In turn, automatic dismiss may be enabled only
for jobs that have \fBauto\-dismiss\fP option, which are drive\-backup,
blockdev\-backup, drive\-mirror, blockdev\-mirror, block\-commit and
block\-stream. \fBauto\-dismiss\fP is enabled by default for these
jobs.
.sp
This command will refuse to operate on any job that has not yet
reached its terminal state, JOB_STATUS_CONCLUDED.  For jobs that
make use of the BLOCK_JOB_READY event, block\-job\-cancel or
block\-job\-complete will still need to be used as appropriate.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The job identifier.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- This command is deprecated.  Use \fBjob\-dismiss\fP
instead.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-job\-finalize  (Since: 2.12)
This command is deprecated.
.sp
Instructs all jobs in a transaction (or a single job if it is not
part of any transaction) to finalize any graph changes and do any
necessary cleanup.  This command requires that all involved jobs are
in the PENDING state.
.sp
For jobs in a transaction, instructing one job to finalize will
force ALL jobs in the transaction to finalize, so it is only
necessary to instruct a single member job to finalize.
.sp
The command is applicable only to jobs which have \fBauto\-finalize\fP option
and only when this option is set to false.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The job identifier.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- This command is deprecated.  Use \fBjob\-finalize\fP
instead.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockJobChangeOptionsMirror  (Since: 8.2)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcopy\-mode\fP (\fI\%MirrorCopyMode\fP) \-\- Switch to this copy mode.  Currently, only the switch
from \(aqbackground\(aq to \(aqwrite\-blocking\(aq is implemented.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockJobChangeOptions  (Since: 8.2)
Block job options that can be changed after job creation.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The job identifier
.IP \(bu 2
\fBtype\fP (\fI\%JobType\fP) \-\- The job type
.IP \(bu 2
When \fBtype\fP is \fBmirror\fP: The members of \fI\%BlockJobChangeOptionsMirror\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-job\-change  (Since: 8.2)
Change the block job\(aqs options.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockJobChangeOptions\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevDiscardOptions  (Since: 2.9)
Determines how to handle discard requests.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBignore\fP \-\- Ignore the request
.IP \(bu 2
\fBunmap\fP \-\- Forward as an unmap request
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevDetectZeroesOptions  (Since: 2.1)
Describes the operation mode for the automatic conversion of plain
zero writes by the OS to driver specific optimized zero write
commands.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBoff\fP \-\- Disabled (default)
.IP \(bu 2
\fBon\fP \-\- Enabled
.IP \(bu 2
\fBunmap\fP \-\- Enabled and even try to unmap blocks if possible.  This
requires also that \fBBlockdevDiscardOptions\fP is set to unmap for
this device.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevAioOptions  (Since: 2.9)
Selects the AIO backend to handle I/O requests
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBthreads\fP \-\- Use qemu\(aqs thread pool
.IP \(bu 2
\fBnative\fP \-\- Use native AIO backend (only Linux and Windows)
.IP \(bu 2
\fBio_uring\fP \-\- Use linux io_uring (since 5.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCacheOptions  (Since: 2.9)
Includes cache\-related options for block devices
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdirect\fP (\fBboolean\fP, \fIoptional\fP) \-\- enables use of O_DIRECT (bypass the host page cache;
default: false)
.IP \(bu 2
\fBno\-flush\fP (\fBboolean\fP, \fIoptional\fP) \-\- ignore any flush requests for the device (default: false)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevDriver  (Since: 2.9)
Drivers that are supported in block device operations.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBthrottle\fP \-\- Since 2.11
.IP \(bu 2
\fBnvme\fP \-\- Since 2.12
.IP \(bu 2
\fBcopy\-on\-read\fP \-\- Since 3.0
.IP \(bu 2
\fBblklogwrites\fP \-\- Since 3.0
.IP \(bu 2
\fBblkreplay\fP \-\- Since 4.2
.IP \(bu 2
\fBcompress\fP \-\- Since 5.0
.IP \(bu 2
\fBcopy\-before\-write\fP \-\- Since 6.2
.IP \(bu 2
\fBsnapshot\-access\fP \-\- Since 7.0
.IP \(bu 2
\fBblkdebug\fP \-\- Not documented
.IP \(bu 2
\fBblkverify\fP \-\- Not documented
.IP \(bu 2
\fBbochs\fP \-\- Not documented
.IP \(bu 2
\fBcloop\fP \-\- Not documented
.IP \(bu 2
\fBdmg\fP \-\- Not documented
.IP \(bu 2
\fBfile\fP \-\- Not documented
.IP \(bu 2
\fBftp\fP \-\- Not documented
.IP \(bu 2
\fBftps\fP \-\- Not documented
.IP \(bu 2
\fBgluster\fP \-\- Not documented
.IP \(bu 2
\fBhost_cdrom\fP \-\- Not documented
.IP \(bu 2
\fBhost_device\fP \-\- Not documented
.IP \(bu 2
\fBhttp\fP \-\- Not documented
.IP \(bu 2
\fBhttps\fP \-\- Not documented
.IP \(bu 2
\fBio_uring\fP \-\- Not documented
.IP \(bu 2
\fBiscsi\fP \-\- Not documented
.IP \(bu 2
\fBluks\fP \-\- Not documented
.IP \(bu 2
\fBnbd\fP \-\- Not documented
.IP \(bu 2
\fBnfs\fP \-\- Not documented
.IP \(bu 2
\fBnull\-aio\fP \-\- Not documented
.IP \(bu 2
\fBnull\-co\fP \-\- Not documented
.IP \(bu 2
\fBnvme\-io_uring\fP \-\- Not documented
.IP \(bu 2
\fBparallels\fP \-\- Not documented
.IP \(bu 2
\fBpreallocate\fP \-\- Not documented
.IP \(bu 2
\fBqcow\fP \-\- Not documented
.IP \(bu 2
\fBqcow2\fP \-\- Not documented
.IP \(bu 2
\fBqed\fP \-\- Not documented
.IP \(bu 2
\fBquorum\fP \-\- Not documented
.IP \(bu 2
\fBraw\fP \-\- Not documented
.IP \(bu 2
\fBrbd\fP \-\- Not documented
.IP \(bu 2
\fBreplication\fP \-\- Not documented
.IP \(bu 2
\fBssh\fP \-\- Not documented
.IP \(bu 2
\fBvdi\fP \-\- Not documented
.IP \(bu 2
\fBvhdx\fP \-\- Not documented
.IP \(bu 2
\fBvirtio\-blk\-vfio\-pci\fP \-\- Not documented
.IP \(bu 2
\fBvirtio\-blk\-vhost\-user\fP \-\- Not documented
.IP \(bu 2
\fBvirtio\-blk\-vhost\-vdpa\fP \-\- Not documented
.IP \(bu 2
\fBvmdk\fP \-\- Not documented
.IP \(bu 2
\fBvpc\fP \-\- Not documented
.IP \(bu 2
\fBvvfat\fP \-\- Not documented
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- Member \fBgluster\fP is deprecated because GlusterFS
development ceased.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsFile  (Since: 2.9)
Driver specific block device options for the file backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- path to the image file
.IP \(bu 2
\fBpr\-manager\fP (\fBstring\fP, \fIoptional\fP) \-\- the id for the object that will handle persistent
reservations for this device (default: none, forward the
commands via SG_IO; since 2.11)
.IP \(bu 2
\fBaio\fP (\fI\%BlockdevAioOptions\fP, \fIoptional\fP) \-\- AIO backend (default: threads) (since: 2.8)
.IP \(bu 2
\fBaio\-max\-batch\fP (\fBint\fP, \fIoptional\fP) \-\- maximum number of requests to batch together into a
single submission in the AIO backend.  The smallest value
between this and the aio\-max\-batch value of the IOThread object
is chosen.  0 means that the AIO backend will handle it
automatically.  (default: 0, since 6.2)
.IP \(bu 2
\fBlocking\fP (\fI\%OnOffAuto\fP, \fIoptional\fP) \-\- whether to enable file locking.  If set to \(aqauto\(aq, only
enable when Open File Descriptor (OFD) locking API is available
(default: auto, since 2.10)
.IP \(bu 2
\fBdrop\-cache\fP (\fBboolean\fP, \fIoptional\fP) \-\- invalidate page cache during live migration.  This
prevents stale data on the migration destination with
cache.direct=off.  Currently only supported on Linux hosts.
(default: on, since: 4.0)
.IP \(bu 2
\fBx\-check\-cache\-dropped\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether to check that page cache was dropped
on live migration.  May cause noticeable delays if the image
file is large, do not use in production.  (default: off)
(since: 3.0)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdynamic\-auto\-read\-only\fP \-\- If present, enabled auto\-read\-only means
that the driver will open the image read\-only at first,
dynamically reopen the image file read\-write when the first
writer is attached to the node and reopen read\-only when the
last writer is detached.  This allows giving QEMU write
permissions only on demand when an operation actually needs
write access.
.IP \(bu 2
\fBunstable\fP \-\- Member x\-check\-cache\-dropped is meant for debugging.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsNull  (Since: 2.9)
Driver specific block device options for the null backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsize\fP (\fBint\fP, \fIoptional\fP) \-\- size of the device in bytes.
.IP \(bu 2
\fBlatency\-ns\fP (\fBint\fP, \fIoptional\fP) \-\- emulated latency (in nanoseconds) in processing
requests.  Default to zero which completes requests immediately.
(Since 2.4)
.IP \(bu 2
\fBread\-zeroes\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, reads from the device produce zeroes; if
false, the buffer is left unchanged.
(default: false; since: 4.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsNVMe  (Since: 2.12)
Driver specific block device options for the NVMe backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- PCI controller address of the NVMe device in format
hhhh:bb:ss.f (host:bus:slot.function)
.IP \(bu 2
\fBnamespace\fP (\fBint\fP) \-\- namespace number of the device, starting from 1.
.UNINDENT
.UNINDENT
.sp
Note that the PCI \fBdevice\fP must have been unbound from any host
kernel driver before instructing QEMU to add the blockdev.
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsVVFAT  (Since: 2.9)
Driver specific block device options for the vvfat protocol.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdir\fP (\fBstring\fP) \-\- directory to be exported as FAT image
.IP \(bu 2
\fBfat\-type\fP (\fBint\fP, \fIoptional\fP) \-\- FAT type: 12, 16 or 32
.IP \(bu 2
\fBfloppy\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether to export a floppy image (true) or partitioned hard
disk (false; default)
.IP \(bu 2
\fBlabel\fP (\fBstring\fP, \fIoptional\fP) \-\- set the volume label, limited to 11 bytes.  FAT16 and FAT32
traditionally have some restrictions on labels, which are
ignored by most operating systems.  Defaults to \(dqQEMU VVFAT\(dq.
(since 2.4)
.IP \(bu 2
\fBrw\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether to allow write operations (default: false)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsGenericFormat  (Since: 2.9)
Driver specific block device options for image format that have no
option besides their data source.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP) \-\- reference to or definition of the data source block device
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsLUKS  (Since: 2.9)
Driver specific block device options for LUKS.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBkey\-secret\fP (\fBstring\fP, \fIoptional\fP) \-\- the ID of a QCryptoSecret object providing the
decryption key (since 2.6).  Mandatory except when doing a
metadata\-only probe of the image.
.IP \(bu 2
\fBheader\fP (\fI\%BlockdevRef\fP, \fIoptional\fP) \-\- block device holding a detached LUKS header.  (since 9.0)
.IP \(bu 2
The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsGenericCOWFormat  (Since: 2.9)
Driver specific block device options for image format that have no
option besides their data source and an optional backing file.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBbacking\fP (\fI\%BlockdevRefOrNull\fP, \fIoptional\fP) \-\- reference to or definition of the backing file block
device, null disables the backing file entirely.  Defaults to
the backing file stored the image file.
.IP \(bu 2
The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  Qcow2OverlapCheckMode  (Since: 2.9)
General overlap check modes.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnone\fP \-\- Do not perform any checks
.IP \(bu 2
\fBconstant\fP \-\- Perform only checks which can be done in constant time
and without reading anything from disk
.IP \(bu 2
\fBcached\fP \-\- Perform only checks which can be done without reading
anything from disk
.IP \(bu 2
\fBall\fP \-\- Perform all available overlap checks
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  Qcow2OverlapCheckFlags  (Since: 2.9)
Structure of flags for each metadata structure.  Setting a field to
\(aqtrue\(aq makes QEMU guard that Qcow2 format structure against
unintended overwriting.  See Qcow2 format specification for detailed
information on these structures.  The default value is chosen
according to the template given.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtemplate\fP (\fI\%Qcow2OverlapCheckMode\fP, \fIoptional\fP) \-\- Specifies a template mode which can be adjusted using the
other flags, defaults to \(aqcached\(aq
.IP \(bu 2
\fBmain\-header\fP (\fBboolean\fP, \fIoptional\fP) \-\- Qcow2 format header
.IP \(bu 2
\fBactive\-l1\fP (\fBboolean\fP, \fIoptional\fP) \-\- Qcow2 active L1 table
.IP \(bu 2
\fBactive\-l2\fP (\fBboolean\fP, \fIoptional\fP) \-\- Qcow2 active L2 table
.IP \(bu 2
\fBrefcount\-table\fP (\fBboolean\fP, \fIoptional\fP) \-\- Qcow2 refcount table
.IP \(bu 2
\fBrefcount\-block\fP (\fBboolean\fP, \fIoptional\fP) \-\- Qcow2 refcount blocks
.IP \(bu 2
\fBsnapshot\-table\fP (\fBboolean\fP, \fIoptional\fP) \-\- Qcow2 snapshot table
.IP \(bu 2
\fBinactive\-l1\fP (\fBboolean\fP, \fIoptional\fP) \-\- Qcow2 inactive L1 tables
.IP \(bu 2
\fBinactive\-l2\fP (\fBboolean\fP, \fIoptional\fP) \-\- Qcow2 inactive L2 tables
.IP \(bu 2
\fBbitmap\-directory\fP (\fBboolean\fP, \fIoptional\fP) \-\- Qcow2 bitmap directory (since 3.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Alternate  Qcow2OverlapChecks  (Since: 2.9)
Specifies which metadata structures should be guarded against
unintended overwriting.
.INDENT 7.0
.TP
.B Alternatives
.INDENT 7.0
.IP \(bu 2
\fBflags\fP (\fI\%Qcow2OverlapCheckFlags\fP) \-\- set of flags for separate specification of each metadata
structure type
.IP \(bu 2
\fBmode\fP (\fI\%Qcow2OverlapCheckMode\fP) \-\- named mode which chooses a specific set of flags
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevQcowEncryptionFormat  (Since: 2.10)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBaes\fP \-\- AES\-CBC with plain64 initialization vectors
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevQcowEncryption  (Since: 2.10)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBformat\fP (\fI\%BlockdevQcowEncryptionFormat\fP) \-\- encryption format
.IP \(bu 2
When \fBformat\fP is \fBaes\fP: The members of \fI\%QCryptoBlockOptionsQCow\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsQcow  (Since: 2.10)
Driver specific block device options for qcow.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBencrypt\fP (\fI\%BlockdevQcowEncryption\fP, \fIoptional\fP) \-\- Image decryption options.  Mandatory for encrypted images,
except when doing a metadata\-only probe of the image.
.IP \(bu 2
The members of \fI\%BlockdevOptionsGenericCOWFormat\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevQcow2EncryptionFormat  (Since: 2.10)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBaes\fP \-\- AES\-CBC with plain64 initialization vectors
.IP \(bu 2
\fBluks\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevQcow2Encryption  (Since: 2.10)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBformat\fP (\fI\%BlockdevQcow2EncryptionFormat\fP) \-\- encryption format
.IP \(bu 2
When \fBformat\fP is \fBaes\fP: The members of \fI\%QCryptoBlockOptionsQCow\fP\&.
.IP \(bu 2
When \fBformat\fP is \fBluks\fP: The members of \fI\%QCryptoBlockOptionsLUKS\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsPreallocate  (Since: 6.0)
Filter driver intended to be inserted between format and protocol
node and do preallocation in protocol node on write.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBprealloc\-align\fP (\fBint\fP, \fIoptional\fP) \-\- on preallocation, align file length to this number,
default 1048576 (1M)
.IP \(bu 2
\fBprealloc\-size\fP (\fBint\fP, \fIoptional\fP) \-\- how much to preallocate, default 134217728 (128M)
.IP \(bu 2
The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsQcow2  (Since: 2.9)
Driver specific block device options for qcow2.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBlazy\-refcounts\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether to enable the lazy refcounts feature
(default is taken from the image file)
.IP \(bu 2
\fBpass\-discard\-request\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether discard requests to the qcow2 device
should be forwarded to the data source
.IP \(bu 2
\fBpass\-discard\-snapshot\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether discard requests for the data source
should be issued when a snapshot operation (e.g. deleting a
snapshot) frees clusters in the qcow2 file
.IP \(bu 2
\fBpass\-discard\-other\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether discard requests for the data source
should be issued on other occasions where a cluster gets freed
.IP \(bu 2
\fBdiscard\-no\-unref\fP (\fBboolean\fP, \fIoptional\fP) \-\- when enabled, data clusters will remain
preallocated when they are no longer used, e.g. because they are
discarded or converted to zero clusters.  As usual, whether the
old data is discarded or kept on the protocol level (i.e. in the
image file) depends on the setting of the pass\-discard\-request
option.  Keeping the clusters preallocated prevents qcow2
fragmentation that would otherwise be caused by freeing and
re\-allocating them later.  Besides potential performance
degradation, such fragmentation can lead to increased allocation
of clusters past the end of the image file, resulting in image
files whose file length can grow much larger than their guest
disk size would suggest.  If image file length is of concern
(e.g. when storing qcow2 images directly on block devices), you
should consider enabling this option.  (since 8.1)
.IP \(bu 2
\fBoverlap\-check\fP (\fI\%Qcow2OverlapChecks\fP, \fIoptional\fP) \-\- which overlap checks to perform for writes to the
image, defaults to \(aqcached\(aq (since 2.2)
.IP \(bu 2
\fBcache\-size\fP (\fBint\fP, \fIoptional\fP) \-\- the maximum total size of the L2 table and refcount
block caches in bytes (since 2.2)
.IP \(bu 2
\fBl2\-cache\-size\fP (\fBint\fP, \fIoptional\fP) \-\- the maximum size of the L2 table cache in bytes
(since 2.2)
.IP \(bu 2
\fBl2\-cache\-entry\-size\fP (\fBint\fP, \fIoptional\fP) \-\- the size of each entry in the L2 cache in
bytes.  It must be a power of two between 512 and the cluster
size.  The default value is the cluster size (since 2.12)
.IP \(bu 2
\fBrefcount\-cache\-size\fP (\fBint\fP, \fIoptional\fP) \-\- the maximum size of the refcount block cache
in bytes (since 2.2)
.IP \(bu 2
\fBcache\-clean\-interval\fP (\fBint\fP, \fIoptional\fP) \-\- clean unused entries in the L2 and refcount
caches.  The interval is in seconds.  The default value is 600
on supporting platforms, and 0 on other platforms.  0 disables
this feature.  (since 2.5)
.IP \(bu 2
\fBencrypt\fP (\fI\%BlockdevQcow2Encryption\fP, \fIoptional\fP) \-\- Image decryption options.  Mandatory for encrypted images,
except when doing a metadata\-only probe of the image.  (since
2.10)
.IP \(bu 2
\fBdata\-file\fP (\fI\%BlockdevRef\fP, \fIoptional\fP) \-\- reference to or definition of the external data file.
This may only be specified for images that require an external
data file.  If it is not specified for such an image, the data
file name is loaded from the image file.  (since 4.0)
.IP \(bu 2
The members of \fI\%BlockdevOptionsGenericCOWFormat\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  SshHostKeyCheckMode  (Since: 2.12)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnone\fP \-\- Don\(aqt check the host key at all
.IP \(bu 2
\fBhash\fP \-\- Compare the host key with a given hash
.IP \(bu 2
\fBknown_hosts\fP \-\- Check the host key against the known_hosts file
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  SshHostKeyCheckHashType  (Since: 2.12)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBmd5\fP \-\- The given hash is an md5 hash
.IP \(bu 2
\fBsha1\fP \-\- The given hash is an sha1 hash
.IP \(bu 2
\fBsha256\fP \-\- The given hash is an sha256 hash
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SshHostKeyHash  (Since: 2.12)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%SshHostKeyCheckHashType\fP) \-\- The hash algorithm used for the hash
.IP \(bu 2
\fBhash\fP (\fBstring\fP) \-\- The expected hash value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SshHostKeyCheck  (Since: 2.12)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmode\fP (\fI\%SshHostKeyCheckMode\fP) \-\- How to check the host key
.IP \(bu 2
When \fBmode\fP is \fBhash\fP: The members of \fI\%SshHostKeyHash\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsSsh  (Since: 2.9)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBserver\fP (\fI\%InetSocketAddress\fP) \-\- host address
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- path to the image on the host
.IP \(bu 2
\fBuser\fP (\fBstring\fP, \fIoptional\fP) \-\- user as which to connect, defaults to current local user name
.IP \(bu 2
\fBhost\-key\-check\fP (\fI\%SshHostKeyCheck\fP, \fIoptional\fP) \-\- Defines how and what to check the host key against
(default: known_hosts)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlkdebugEvent  (Since: 2.9)
Trigger events supported by blkdebug.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBl1_shrink_write_table\fP \-\- write zeros to the l1 table to shrink image.
(since 2.11)
.IP \(bu 2
\fBl1_shrink_free_l2_clusters\fP \-\- discard the l2 tables.  (since 2.11)
.IP \(bu 2
\fBcor_write\fP \-\- a write due to copy\-on\-read (since 2.11)
.IP \(bu 2
\fBcluster_alloc_space\fP \-\- an allocation of file space for a cluster
(since 4.1)
.IP \(bu 2
\fBnone\fP \-\- triggers once at creation of the blkdebug node (since 4.1)
.IP \(bu 2
\fBl1_update\fP \-\- Not documented
.IP \(bu 2
\fBl1_grow_alloc_table\fP \-\- Not documented
.IP \(bu 2
\fBl1_grow_write_table\fP \-\- Not documented
.IP \(bu 2
\fBl1_grow_activate_table\fP \-\- Not documented
.IP \(bu 2
\fBl2_load\fP \-\- Not documented
.IP \(bu 2
\fBl2_update\fP \-\- Not documented
.IP \(bu 2
\fBl2_update_compressed\fP \-\- Not documented
.IP \(bu 2
\fBl2_alloc_cow_read\fP \-\- Not documented
.IP \(bu 2
\fBl2_alloc_write\fP \-\- Not documented
.IP \(bu 2
\fBread_aio\fP \-\- Not documented
.IP \(bu 2
\fBread_backing_aio\fP \-\- Not documented
.IP \(bu 2
\fBread_compressed\fP \-\- Not documented
.IP \(bu 2
\fBwrite_aio\fP \-\- Not documented
.IP \(bu 2
\fBwrite_compressed\fP \-\- Not documented
.IP \(bu 2
\fBvmstate_load\fP \-\- Not documented
.IP \(bu 2
\fBvmstate_save\fP \-\- Not documented
.IP \(bu 2
\fBcow_read\fP \-\- Not documented
.IP \(bu 2
\fBcow_write\fP \-\- Not documented
.IP \(bu 2
\fBreftable_load\fP \-\- Not documented
.IP \(bu 2
\fBreftable_grow\fP \-\- Not documented
.IP \(bu 2
\fBreftable_update\fP \-\- Not documented
.IP \(bu 2
\fBrefblock_load\fP \-\- Not documented
.IP \(bu 2
\fBrefblock_update\fP \-\- Not documented
.IP \(bu 2
\fBrefblock_update_part\fP \-\- Not documented
.IP \(bu 2
\fBrefblock_alloc\fP \-\- Not documented
.IP \(bu 2
\fBrefblock_alloc_hookup\fP \-\- Not documented
.IP \(bu 2
\fBrefblock_alloc_write\fP \-\- Not documented
.IP \(bu 2
\fBrefblock_alloc_write_blocks\fP \-\- Not documented
.IP \(bu 2
\fBrefblock_alloc_write_table\fP \-\- Not documented
.IP \(bu 2
\fBrefblock_alloc_switch_table\fP \-\- Not documented
.IP \(bu 2
\fBcluster_alloc\fP \-\- Not documented
.IP \(bu 2
\fBcluster_alloc_bytes\fP \-\- Not documented
.IP \(bu 2
\fBcluster_free\fP \-\- Not documented
.IP \(bu 2
\fBflush_to_os\fP \-\- Not documented
.IP \(bu 2
\fBflush_to_disk\fP \-\- Not documented
.IP \(bu 2
\fBpwritev_rmw_head\fP \-\- Not documented
.IP \(bu 2
\fBpwritev_rmw_after_head\fP \-\- Not documented
.IP \(bu 2
\fBpwritev_rmw_tail\fP \-\- Not documented
.IP \(bu 2
\fBpwritev_rmw_after_tail\fP \-\- Not documented
.IP \(bu 2
\fBpwritev\fP \-\- Not documented
.IP \(bu 2
\fBpwritev_zero\fP \-\- Not documented
.IP \(bu 2
\fBpwritev_done\fP \-\- Not documented
.IP \(bu 2
\fBempty_image_prepare\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlkdebugIOType  (Since: 4.1)
Kinds of I/O that blkdebug can inject errors in.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBread\fP \-\- \&.bdrv_co_preadv()
.IP \(bu 2
\fBwrite\fP \-\- \&.bdrv_co_pwritev()
.IP \(bu 2
\fBwrite\-zeroes\fP \-\- \&.bdrv_co_pwrite_zeroes()
.IP \(bu 2
\fBdiscard\fP \-\- \&.bdrv_co_pdiscard()
.IP \(bu 2
\fBflush\fP \-\- \&.bdrv_co_flush_to_disk()
.IP \(bu 2
\fBblock\-status\fP \-\- \&.bdrv_co_block_status()
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlkdebugInjectErrorOptions  (Since: 2.9)
Describes a single error injection for blkdebug.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBevent\fP (\fI\%BlkdebugEvent\fP) \-\- trigger event
.IP \(bu 2
\fBstate\fP (\fBint\fP, \fIoptional\fP) \-\- the state identifier blkdebug needs to be in to actually
trigger the event; defaults to \(dqany\(dq
.IP \(bu 2
\fBiotype\fP (\fI\%BlkdebugIOType\fP, \fIoptional\fP) \-\- the type of I/O operations on which this error should be
injected; defaults to \(dqall read, write, write\-zeroes, discard,
and flush operations\(dq (since: 4.1)
.IP \(bu 2
\fBerrno\fP (\fBint\fP, \fIoptional\fP) \-\- error identifier (errno) to be returned; defaults to EIO
.IP \(bu 2
\fBsector\fP (\fBint\fP, \fIoptional\fP) \-\- specifies the sector index which has to be affected in
order to actually trigger the event; defaults to \(dqany sector\(dq
.IP \(bu 2
\fBonce\fP (\fBboolean\fP, \fIoptional\fP) \-\- disables further events after this one has been triggered;
defaults to false
.IP \(bu 2
\fBimmediately\fP (\fBboolean\fP, \fIoptional\fP) \-\- fail immediately; defaults to false
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlkdebugSetStateOptions  (Since: 2.9)
Describes a single state\-change event for blkdebug.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBevent\fP (\fI\%BlkdebugEvent\fP) \-\- trigger event
.IP \(bu 2
\fBstate\fP (\fBint\fP, \fIoptional\fP) \-\- the current state identifier blkdebug needs to be in;
defaults to \(dqany\(dq
.IP \(bu 2
\fBnew_state\fP (\fBint\fP) \-\- the state identifier blkdebug is supposed to assume if
this event is triggered
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsBlkdebug  (Since: 2.9)
Driver specific block device options for blkdebug.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBimage\fP (\fI\%BlockdevRef\fP) \-\- underlying raw block device (or image file)
.IP \(bu 2
\fBconfig\fP (\fBstring\fP, \fIoptional\fP) \-\- filename of the configuration file
.IP \(bu 2
\fBalign\fP (\fBint\fP, \fIoptional\fP) \-\- required alignment for requests in bytes, must be positive
power of 2, or 0 for default
.IP \(bu 2
\fBmax\-transfer\fP (\fBint\fP, \fIoptional\fP) \-\- maximum size for I/O transfers in bytes, must be
positive multiple of \fBalign\fP and of the underlying file\(aqs request
alignment (but need not be a power of 2), or 0 for default
(since 2.10)
.IP \(bu 2
\fBopt\-write\-zero\fP (\fBint\fP, \fIoptional\fP) \-\- preferred alignment for write zero requests in
bytes, must be positive multiple of \fBalign\fP and of the underlying
file\(aqs request alignment (but need not be a power of 2), or 0
for default (since 2.10)
.IP \(bu 2
\fBmax\-write\-zero\fP (\fBint\fP, \fIoptional\fP) \-\- maximum size for write zero requests in bytes, must
be positive multiple of \fBalign\fP, of \fBopt\-write\-zero\fP, and of the
underlying file\(aqs request alignment (but need not be a power of
2), or 0 for default (since 2.10)
.IP \(bu 2
\fBopt\-discard\fP (\fBint\fP, \fIoptional\fP) \-\- preferred alignment for discard requests in bytes,
must be positive multiple of \fBalign\fP and of the underlying file\(aqs
request alignment (but need not be a power of 2), or 0 for
default (since 2.10)
.IP \(bu 2
\fBmax\-discard\fP (\fBint\fP, \fIoptional\fP) \-\- maximum size for discard requests in bytes, must be
positive multiple of \fBalign\fP, of \fBopt\-discard\fP, and of the
underlying file\(aqs request alignment (but need not be a power of
2), or 0 for default (since 2.10)
.IP \(bu 2
\fBinject\-error\fP (\fB[\fP\fI\%BlkdebugInjectErrorOptions\fP\fB]\fP, \fIoptional\fP) \-\- array of error injection descriptions
.IP \(bu 2
\fBset\-state\fP (\fB[\fP\fI\%BlkdebugSetStateOptions\fP\fB]\fP, \fIoptional\fP) \-\- array of state\-change descriptions
.IP \(bu 2
\fBtake\-child\-perms\fP (\fB[\fP\fI\%BlockPermission\fP\fB]\fP, \fIoptional\fP) \-\- Permissions to take on \fBimage\fP in addition to what
is necessary anyway (which depends on how the blkdebug node is
used).  Defaults to none.  (since 5.0)
.IP \(bu 2
\fBunshare\-child\-perms\fP (\fB[\fP\fI\%BlockPermission\fP\fB]\fP, \fIoptional\fP) \-\- Permissions not to share on \fBimage\fP in addition
to what cannot be shared anyway (which depends on how the
blkdebug node is used).  Defaults to none.  (since 5.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsBlklogwrites  (Since: 3.0)
Driver specific block device options for blklogwrites.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP) \-\- block device
.IP \(bu 2
\fBlog\fP (\fI\%BlockdevRef\fP) \-\- block device used to log writes to \fBfile\fP
.IP \(bu 2
\fBlog\-sector\-size\fP (\fBint\fP, \fIoptional\fP) \-\- sector size used in logging writes to \fBfile\fP,
determines granularity of offsets and sizes of writes
(default: 512)
.IP \(bu 2
\fBlog\-append\fP (\fBboolean\fP, \fIoptional\fP) \-\- append to an existing log (default: false)
.IP \(bu 2
\fBlog\-super\-update\-interval\fP (\fBint\fP, \fIoptional\fP) \-\- interval of write requests after which
the log super block is updated to disk (default: 4096)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsBlkverify  (Since: 2.9)
Driver specific block device options for blkverify.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtest\fP (\fI\%BlockdevRef\fP) \-\- block device to be tested
.IP \(bu 2
\fBraw\fP (\fI\%BlockdevRef\fP) \-\- raw image used for verification
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsBlkreplay  (Since: 4.2)
Driver specific block device options for blkreplay.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBimage\fP (\fI\%BlockdevRef\fP) \-\- disk image which should be controlled with blkreplay
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QuorumReadPattern  (Since: 2.9)
An enumeration of quorum read patterns.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBquorum\fP \-\- read all the children and do a quorum vote on reads
.IP \(bu 2
\fBfifo\fP \-\- read only from the first child that has not failed
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsQuorum  (Since: 2.9)
Driver specific block device options for Quorum
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBblkverify\fP (\fBboolean\fP, \fIoptional\fP) \-\- true if the driver must print content mismatch set to
false by default
.IP \(bu 2
\fBchildren\fP (\fB[\fP\fI\%BlockdevRef\fP\fB]\fP) \-\- the children block devices to use
.IP \(bu 2
\fBvote\-threshold\fP (\fBint\fP) \-\- the vote limit under which a read will fail
.IP \(bu 2
\fBrewrite\-corrupted\fP (\fBboolean\fP, \fIoptional\fP) \-\- rewrite corrupted data when quorum is reached
(Since 2.1)
.IP \(bu 2
\fBread\-pattern\fP (\fI\%QuorumReadPattern\fP, \fIoptional\fP) \-\- choose read pattern and set to quorum by default
(Since 2.2)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsGluster  (Since: 2.9)
Driver specific block device options for Gluster
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBvolume\fP (\fBstring\fP) \-\- name of gluster volume where VM image resides
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- absolute path to image file in gluster volume
.IP \(bu 2
\fBserver\fP (\fB[\fP\fI\%SocketAddress\fP\fB]\fP) \-\- gluster servers description
.IP \(bu 2
\fBdebug\fP (\fBint\fP, \fIoptional\fP) \-\- libgfapi log level (default \(aq4\(aq which is Error) (Since 2.8)
.IP \(bu 2
\fBlogfile\fP (\fBstring\fP, \fIoptional\fP) \-\- libgfapi log file (default /dev/stderr) (Since 2.8)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsIoUring  (Since: 7.2)
\fIAvailability\fP: \fBCONFIG_BLKIO\fP
.sp
Driver specific block device options for the io_uring backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- path to the image file
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsNvmeIoUring  (Since: 7.2)
\fIAvailability\fP: \fBCONFIG_BLKIO\fP
.sp
Driver specific block device options for the nvme\-io_uring backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- path to the NVMe namespace\(aqs character device (e.g.
/dev/ng0n1).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsVirtioBlkVfioPci  (Since: 7.2)
\fIAvailability\fP: \fBCONFIG_BLKIO\fP
.sp
Driver specific block device options for the virtio\-blk\-vfio\-pci
backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- path to the PCI device\(aqs sysfs directory (e.g.
/sys/bus/pci/devices/0000:00:01.0).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsVirtioBlkVhostUser  (Since: 7.2)
\fIAvailability\fP: \fBCONFIG_BLKIO\fP
.sp
Driver specific block device options for the virtio\-blk\-vhost\-user
backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- path to the vhost\-user UNIX domain socket.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsVirtioBlkVhostVdpa  (Since: 7.2)
\fIAvailability\fP: \fBCONFIG_BLKIO\fP
.sp
Driver specific block device options for the virtio\-blk\-vhost\-vdpa
backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- path to the vhost\-vdpa character device.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBfdset\fP \-\- Member \fBpath\fP supports the special \(dq/dev/fdset/N\(dq path
(since 8.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  IscsiTransport  (Since: 2.9)
An enumeration of libiscsi transport types
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBtcp\fP \-\- Not documented
.IP \(bu 2
\fBiser\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  IscsiHeaderDigest  (Since: 2.9)
An enumeration of header digests supported by libiscsi
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBcrc32c\fP \-\- Not documented
.IP \(bu 2
\fBnone\fP \-\- Not documented
.IP \(bu 2
\fBcrc32c\-none\fP \-\- Not documented
.IP \(bu 2
\fBnone\-crc32c\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsIscsi  (Since: 2.9)
Driver specific block device options for iscsi
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtransport\fP (\fI\%IscsiTransport\fP) \-\- The iscsi transport type
.IP \(bu 2
\fBportal\fP (\fBstring\fP) \-\- The address of the iscsi portal
.IP \(bu 2
\fBtarget\fP (\fBstring\fP) \-\- The target iqn name
.IP \(bu 2
\fBlun\fP (\fBint\fP, \fIoptional\fP) \-\- LUN to connect to.  Defaults to 0.
.IP \(bu 2
\fBuser\fP (\fBstring\fP, \fIoptional\fP) \-\- User name to log in with.  If omitted, no CHAP authentication
is performed.
.IP \(bu 2
\fBpassword\-secret\fP (\fBstring\fP, \fIoptional\fP) \-\- The ID of a QCryptoSecret object providing the
password for the login.  This option is required if \fBuser\fP is
specified.
.IP \(bu 2
\fBinitiator\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- The iqn name we want to identify to the target as.
If this option is not specified, an initiator name is generated
automatically.
.IP \(bu 2
\fBheader\-digest\fP (\fI\%IscsiHeaderDigest\fP, \fIoptional\fP) \-\- The desired header digest.  Defaults to none\-crc32c.
.IP \(bu 2
\fBtimeout\fP (\fBint\fP, \fIoptional\fP) \-\- Timeout in seconds after which a request will timeout.  0
means no timeout and is the default.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  RbdAuthMode  (Since: 3.0)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBcephx\fP \-\- Not documented
.IP \(bu 2
\fBnone\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  RbdImageEncryptionFormat  (Since: 6.1)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBluks\-any\fP \-\- Used for opening either luks or luks2 (Since 8.0)
.IP \(bu 2
\fBluks\fP \-\- Not documented
.IP \(bu 2
\fBluks2\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RbdEncryptionOptionsLUKSBase  (Since: 6.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBkey\-secret\fP (\fBstring\fP) \-\- ID of a QCryptoSecret object providing a passphrase for
unlocking the encryption
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RbdEncryptionCreateOptionsLUKSBase  (Since: 6.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcipher\-alg\fP (\fI\%QCryptoCipherAlgo\fP, \fIoptional\fP) \-\- The encryption algorithm
.IP \(bu 2
The members of \fI\%RbdEncryptionOptionsLUKSBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RbdEncryptionOptionsLUKS  (Since: 6.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%RbdEncryptionOptionsLUKSBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RbdEncryptionOptionsLUKS2  (Since: 6.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%RbdEncryptionOptionsLUKSBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RbdEncryptionOptionsLUKSAny  (Since: 8.0)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%RbdEncryptionOptionsLUKSBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RbdEncryptionCreateOptionsLUKS  (Since: 6.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%RbdEncryptionCreateOptionsLUKSBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RbdEncryptionCreateOptionsLUKS2  (Since: 6.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%RbdEncryptionCreateOptionsLUKSBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RbdEncryptionOptions  (Since: 6.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBformat\fP (\fI\%RbdImageEncryptionFormat\fP) \-\- Encryption format.
.IP \(bu 2
\fBparent\fP (\fI\%RbdEncryptionOptions\fP, \fIoptional\fP) \-\- Parent image encryption options (for cloned images).  Can
be left unspecified if this cloned image is encrypted using the
same format and secret as its parent image (i.e. not explicitly
formatted) or if its parent image is not encrypted.  (Since 8.0)
.IP \(bu 2
When \fBformat\fP is \fBluks\fP: The members of \fI\%RbdEncryptionOptionsLUKS\fP\&.
.IP \(bu 2
When \fBformat\fP is \fBluks2\fP: The members of \fI\%RbdEncryptionOptionsLUKS2\fP\&.
.IP \(bu 2
When \fBformat\fP is \fBluks\-any\fP: The members of \fI\%RbdEncryptionOptionsLUKSAny\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RbdEncryptionCreateOptions  (Since: 6.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBformat\fP (\fI\%RbdImageEncryptionFormat\fP) \-\- Encryption format.
.IP \(bu 2
When \fBformat\fP is \fBluks\fP: The members of \fI\%RbdEncryptionCreateOptionsLUKS\fP\&.
.IP \(bu 2
When \fBformat\fP is \fBluks2\fP: The members of \fI\%RbdEncryptionCreateOptionsLUKS2\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsRbd  (Since: 2.9)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpool\fP (\fBstring\fP) \-\- Ceph pool name.
.IP \(bu 2
\fBnamespace\fP (\fBstring\fP, \fIoptional\fP) \-\- Rados namespace name in the Ceph pool.  (Since 5.0)
.IP \(bu 2
\fBimage\fP (\fBstring\fP) \-\- Image name in the Ceph pool.
.IP \(bu 2
\fBconf\fP (\fBstring\fP, \fIoptional\fP) \-\- path to Ceph configuration file.  Values in the configuration
file will be overridden by options specified via QAPI.
.IP \(bu 2
\fBsnapshot\fP (\fBstring\fP, \fIoptional\fP) \-\- Ceph snapshot name.
.IP \(bu 2
\fBencrypt\fP (\fI\%RbdEncryptionOptions\fP, \fIoptional\fP) \-\- Image encryption options.  (Since 6.1)
.IP \(bu 2
\fBuser\fP (\fBstring\fP, \fIoptional\fP) \-\- Ceph id name.
.IP \(bu 2
\fBauth\-client\-required\fP (\fB[\fP\fI\%RbdAuthMode\fP\fB]\fP, \fIoptional\fP) \-\- Acceptable authentication modes.  This maps
to Ceph configuration option \(dqauth_client_required\(dq.  (Since
3.0)
.IP \(bu 2
\fBkey\-secret\fP (\fBstring\fP, \fIoptional\fP) \-\- ID of a QCryptoSecret object providing a key for cephx
authentication.  This maps to Ceph configuration option \(dqkey\(dq.
(Since 3.0)
.IP \(bu 2
\fBserver\fP (\fB[\fP\fI\%InetSocketAddressBase\fP\fB]\fP, \fIoptional\fP) \-\- Monitor host address and port.  This maps to the \(dqmon_host\(dq
Ceph option.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  ReplicationMode  (Since: 2.9)
\fIAvailability\fP: \fBCONFIG_REPLICATION\fP
.sp
An enumeration of replication modes.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBprimary\fP \-\- Primary mode, the vm\(aqs state will be sent to secondary
QEMU.
.IP \(bu 2
\fBsecondary\fP \-\- Secondary mode, receive the vm\(aqs state from primary
QEMU.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsReplication  (Since: 2.9)
\fIAvailability\fP: \fBCONFIG_REPLICATION\fP
.sp
Driver specific block device options for replication
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmode\fP (\fI\%ReplicationMode\fP) \-\- the replication mode
.IP \(bu 2
\fBtop\-id\fP (\fBstring\fP, \fIoptional\fP) \-\- In secondary mode, node name or device ID of the root node
who owns the replication node chain.  Must not be given in
primary mode.
.IP \(bu 2
The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  NFSTransport  (Since: 2.9)
An enumeration of NFS transport types
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBinet\fP \-\- TCP transport
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NFSServer  (Since: 2.9)
Captures the address of the socket
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%NFSTransport\fP) \-\- transport type used for NFS (only TCP supported)
.IP \(bu 2
\fBhost\fP (\fBstring\fP) \-\- host address for NFS server
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsNfs  (Since: 2.9)
Driver specific block device option for NFS
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBserver\fP (\fI\%NFSServer\fP) \-\- host address
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- path of the image on the host
.IP \(bu 2
\fBuser\fP (\fBint\fP, \fIoptional\fP) \-\- UID value to use when talking to the server (defaults to
65534 on Windows and getuid() on unix)
.IP \(bu 2
\fBgroup\fP (\fBint\fP, \fIoptional\fP) \-\- GID value to use when talking to the server (defaults to
65534 on Windows and getgid() in unix)
.IP \(bu 2
\fBtcp\-syn\-count\fP (\fBint\fP, \fIoptional\fP) \-\- number of SYNs during the session establishment
(defaults to libnfs default)
.IP \(bu 2
\fBreadahead\-size\fP (\fBint\fP, \fIoptional\fP) \-\- set the readahead size in bytes (defaults to libnfs
default)
.IP \(bu 2
\fBpage\-cache\-size\fP (\fBint\fP, \fIoptional\fP) \-\- set the pagecache size in bytes (defaults to
libnfs default)
.IP \(bu 2
\fBdebug\fP (\fBint\fP, \fIoptional\fP) \-\- set the NFS debug level (max 2) (defaults to libnfs default)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsCurlBase  (Since: 2.9)
Driver specific block device options shared by all protocols
supported by the curl backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBurl\fP (\fBstring\fP) \-\- URL of the image file
.IP \(bu 2
\fBreadahead\fP (\fBint\fP, \fIoptional\fP) \-\- Size of the read\-ahead cache; must be a multiple of 512
(defaults to 256 kB)
.IP \(bu 2
\fBtimeout\fP (\fBint\fP, \fIoptional\fP) \-\- Timeout for connections, in seconds (defaults to 5)
.IP \(bu 2
\fBusername\fP (\fBstring\fP, \fIoptional\fP) \-\- Username for authentication (defaults to none)
.IP \(bu 2
\fBpassword\-secret\fP (\fBstring\fP, \fIoptional\fP) \-\- ID of a QCryptoSecret object providing a password
for authentication (defaults to no password)
.IP \(bu 2
\fBproxy\-username\fP (\fBstring\fP, \fIoptional\fP) \-\- Username for proxy authentication (defaults to
none)
.IP \(bu 2
\fBproxy\-password\-secret\fP (\fBstring\fP, \fIoptional\fP) \-\- ID of a QCryptoSecret object providing a
password for proxy authentication (defaults to no password)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsCurlHttp  (Since: 2.9)
Driver specific block device options for HTTP connections over the
curl backend.  URLs must start with \(dq\fI\%http://\fP\(dq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcookie\fP (\fBstring\fP, \fIoptional\fP) \-\- List of cookies to set; format is \(dqname1=content1;
name2=content2;\(dq as explained by CURLOPT_COOKIE(3).  Defaults to
no cookies.
.IP \(bu 2
\fBcookie\-secret\fP (\fBstring\fP, \fIoptional\fP) \-\- ID of a QCryptoSecret object providing the cookie
data in a secure way.  See \fBcookie\fP for the format.  (since 2.10)
.IP \(bu 2
The members of \fI\%BlockdevOptionsCurlBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsCurlHttps  (Since: 2.9)
Driver specific block device options for HTTPS connections over the
curl backend.  URLs must start with \(dq\fI\%https://\fP\(dq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcookie\fP (\fBstring\fP, \fIoptional\fP) \-\- List of cookies to set; format is \(dqname1=content1;
name2=content2;\(dq as explained by CURLOPT_COOKIE(3).  Defaults to
no cookies.
.IP \(bu 2
\fBsslverify\fP (\fBboolean\fP, \fIoptional\fP) \-\- Whether to verify the SSL certificate\(aqs validity
(defaults to true)
.IP \(bu 2
\fBcookie\-secret\fP (\fBstring\fP, \fIoptional\fP) \-\- ID of a QCryptoSecret object providing the cookie
data in a secure way.  See \fBcookie\fP for the format.  (since 2.10)
.IP \(bu 2
The members of \fI\%BlockdevOptionsCurlBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsCurlFtp  (Since: 2.9)
Driver specific block device options for FTP connections over the
curl backend.  URLs must start with \(dq\fI\%ftp://\fP\(dq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockdevOptionsCurlBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsCurlFtps  (Since: 2.9)
Driver specific block device options for FTPS connections over the
curl backend.  URLs must start with \(dqftps://\(dq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsslverify\fP (\fBboolean\fP, \fIoptional\fP) \-\- Whether to verify the SSL certificate\(aqs validity
(defaults to true)
.IP \(bu 2
The members of \fI\%BlockdevOptionsCurlBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsNbd  (Since: 2.9)
Driver specific block device options for NBD.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBserver\fP (\fI\%SocketAddress\fP) \-\- NBD server address
.IP \(bu 2
\fBexport\fP (\fBstring\fP, \fIoptional\fP) \-\- export name
.IP \(bu 2
\fBtls\-creds\fP (\fBstring\fP, \fIoptional\fP) \-\- TLS credentials ID
.IP \(bu 2
\fBtls\-hostname\fP (\fBstring\fP, \fIoptional\fP) \-\- TLS hostname override for certificate validation
(Since 7.0)
.IP \(bu 2
\fBx\-dirty\-bitmap\fP (\fBstring\fP, \fIoptional\fP) \-\- A metadata context name such as
\(dqqemu:dirty\-bitmap:NAME\(dq or \(dqqemu:allocation\-depth\(dq to query in
place of the traditional \(dqbase:allocation\(dq block status (see
NBD_OPT_LIST_META_CONTEXT in the NBD protocol; and yes, naming
this option x\-context would have made more sense) (since 3.0)
.IP \(bu 2
\fBreconnect\-delay\fP (\fBint\fP, \fIoptional\fP) \-\- On an unexpected disconnect, the nbd client tries
to connect again until succeeding or encountering a serious
error.  During the first \fBreconnect\-delay\fP seconds, all requests
are paused and will be rerun on a successful reconnect.  After
that time, any delayed requests and all future requests before a
successful reconnect will immediately fail.  Default 0 (Since
4.2)
.IP \(bu 2
\fBopen\-timeout\fP (\fBint\fP, \fIoptional\fP) \-\- In seconds.  If zero, the nbd driver tries the
connection only once, and fails to open if the connection fails.
If non\-zero, the nbd driver will repeat connection attempts
until successful or until \fBopen\-timeout\fP seconds have elapsed.
Default 0 (Since 7.0)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- Member \fBx\-dirty\-bitmap\fP is experimental.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsRaw  (Since: 2.9)
Driver specific block device options for the raw driver.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBoffset\fP (\fBint\fP, \fIoptional\fP) \-\- position where the block device starts
.IP \(bu 2
\fBsize\fP (\fBint\fP, \fIoptional\fP) \-\- the assumed size of the device
.IP \(bu 2
The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsThrottle  (Since: 2.11)
Driver specific block device options for the throttle driver
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBthrottle\-group\fP (\fBstring\fP) \-\- the name of the throttle\-group object to use.  It
must already exist.
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP) \-\- reference to or definition of the data source block device
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsCor  (Since: 6.0)
Driver specific block device options for the copy\-on\-read driver.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBbottom\fP (\fBstring\fP, \fIoptional\fP) \-\- The name of a non\-filter node (allocation\-bearing layer)
that limits the COR operations in the backing chain (inclusive),
so that no data below this node will be copied by this filter.
If option is absent, the limit is not applied, so that data from
all backing layers may be copied.
.IP \(bu 2
The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  OnCbwError  (Since: 7.1)
An enumeration of possible behaviors for copy\-before\-write operation
failures.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBbreak\-guest\-write\fP \-\- report the error to the guest.  This way, the
guest will not be able to overwrite areas that cannot be backed
up, so the backup process remains valid.
.IP \(bu 2
\fBbreak\-snapshot\fP \-\- continue guest write.  Doing so will make the
provided snapshot state invalid and any backup or export process
based on it will finally fail.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptionsCbw  (Since: 6.2)
Driver specific block device options for the copy\-before\-write
driver, which does so called copy\-before\-write operations: when data
is written to the filter, the filter first reads corresponding
blocks from its file child and copies them to \fBtarget\fP child.  After
successfully copying, the write request is propagated to file child.
If copying fails, the original write request is failed too and no
data is written to file child.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtarget\fP (\fI\%BlockdevRef\fP) \-\- The target for copy\-before\-write operations.
.IP \(bu 2
\fBbitmap\fP (\fI\%BlockDirtyBitmap\fP, \fIoptional\fP) \-\- If specified, copy\-before\-write filter will do
copy\-before\-write operations only for dirty regions of the
bitmap.  Bitmap size must be equal to length of file and target
child of the filter.  Note also, that bitmap is used only to
initialize internal bitmap of the process, so further
modifications (or removing) of specified bitmap doesn\(aqt
influence the filter.  (Since 7.0)
.IP \(bu 2
\fBon\-cbw\-error\fP (\fI\%OnCbwError\fP, \fIoptional\fP) \-\- Behavior on failure of copy\-before\-write operation.
Default is \fBbreak\-guest\-write\fP\&.  (Since 7.1)
.IP \(bu 2
\fBcbw\-timeout\fP (\fBint\fP, \fIoptional\fP) \-\- Zero means no limit.  Non\-zero sets the timeout in
seconds for copy\-before\-write operation.  When a timeout occurs,
the respective copy\-before\-write operation will fail, and the
\fBon\-cbw\-error\fP parameter will decide how this failure is handled.
Default 0.  (Since 7.1)
.IP \(bu 2
\fBmin\-cluster\-size\fP (\fBint\fP, \fIoptional\fP) \-\- Minimum size of blocks used by copy\-before\-write
operations.  Has to be a power of 2.  No effect if smaller than
the maximum of the target\(aqs cluster size and 64 KiB.  Default 0.
(Since 9.2)
.IP \(bu 2
The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevOptions  (Since: 2.9)
Options for creating a block device.  Many options are available for
all block devices, independent of the block driver:
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdriver\fP (\fI\%BlockdevDriver\fP) \-\- block driver name
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- the node name of the new node (Since 2.0).  This option
is required on the top level of blockdev\-add.  Valid node names
start with an alphabetic character and may contain only
alphanumeric characters, \(aq\-\(aq, \(aq.\(aq and \(aq_\(aq.  Their maximum length
is 31 characters.
.IP \(bu 2
\fBdiscard\fP (\fI\%BlockdevDiscardOptions\fP, \fIoptional\fP) \-\- discard\-related options (default: ignore)
.IP \(bu 2
\fBcache\fP (\fI\%BlockdevCacheOptions\fP, \fIoptional\fP) \-\- cache\-related options
.IP \(bu 2
\fBactive\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether the block node should be activated (default: true).
Having inactive block nodes is useful primarily for migration because it
allows opening an image on the destination while the source is still
holding locks for it. (Since 10.0)
.IP \(bu 2
\fBread\-only\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether the block device should be read\-only (default:
false).  Note that some block drivers support only read\-only
access, either generally or in certain configurations.  In this
case, the default value does not work and the option must be
specified explicitly.
.IP \(bu 2
\fBauto\-read\-only\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true and \fBread\-only\fP is false, QEMU may
automatically decide not to open the image read\-write as
requested, but fall back to read\-only instead (and switch
between the modes later), e.g. depending on whether the image
file is writable or whether a writing user is attached to the
node (default: false, since 3.1)
.IP \(bu 2
\fBdetect\-zeroes\fP (\fI\%BlockdevDetectZeroesOptions\fP, \fIoptional\fP) \-\- detect and optimize zero writes (Since 2.1)
(default: off)
.IP \(bu 2
\fBforce\-share\fP (\fBboolean\fP, \fIoptional\fP) \-\- force share all permission on added nodes.  Requires
read\-only=true.  (Since 2.10)
.IP \(bu 2
When \fBdriver\fP is \fBblkdebug\fP: The members of \fI\%BlockdevOptionsBlkdebug\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBblklogwrites\fP: The members of \fI\%BlockdevOptionsBlklogwrites\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBblkverify\fP: The members of \fI\%BlockdevOptionsBlkverify\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBblkreplay\fP: The members of \fI\%BlockdevOptionsBlkreplay\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBbochs\fP: The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBcloop\fP: The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBcompress\fP: The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBcopy\-before\-write\fP: The members of \fI\%BlockdevOptionsCbw\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBcopy\-on\-read\fP: The members of \fI\%BlockdevOptionsCor\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBdmg\fP: The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBfile\fP: The members of \fI\%BlockdevOptionsFile\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBftp\fP: The members of \fI\%BlockdevOptionsCurlFtp\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBftps\fP: The members of \fI\%BlockdevOptionsCurlFtps\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBgluster\fP: The members of \fI\%BlockdevOptionsGluster\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBhost_cdrom\fP: The members of \fI\%BlockdevOptionsFile\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBhost_device\fP: The members of \fI\%BlockdevOptionsFile\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBhttp\fP: The members of \fI\%BlockdevOptionsCurlHttp\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBhttps\fP: The members of \fI\%BlockdevOptionsCurlHttps\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBio_uring\fP: The members of \fI\%BlockdevOptionsIoUring\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBiscsi\fP: The members of \fI\%BlockdevOptionsIscsi\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBluks\fP: The members of \fI\%BlockdevOptionsLUKS\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBnbd\fP: The members of \fI\%BlockdevOptionsNbd\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBnfs\fP: The members of \fI\%BlockdevOptionsNfs\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBnull\-aio\fP: The members of \fI\%BlockdevOptionsNull\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBnull\-co\fP: The members of \fI\%BlockdevOptionsNull\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBnvme\fP: The members of \fI\%BlockdevOptionsNVMe\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBnvme\-io_uring\fP: The members of \fI\%BlockdevOptionsNvmeIoUring\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBparallels\fP: The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBpreallocate\fP: The members of \fI\%BlockdevOptionsPreallocate\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBqcow2\fP: The members of \fI\%BlockdevOptionsQcow2\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBqcow\fP: The members of \fI\%BlockdevOptionsQcow\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBqed\fP: The members of \fI\%BlockdevOptionsGenericCOWFormat\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBquorum\fP: The members of \fI\%BlockdevOptionsQuorum\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBraw\fP: The members of \fI\%BlockdevOptionsRaw\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBrbd\fP: The members of \fI\%BlockdevOptionsRbd\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBreplication\fP: The members of \fI\%BlockdevOptionsReplication\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBsnapshot\-access\fP: The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBssh\fP: The members of \fI\%BlockdevOptionsSsh\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBthrottle\fP: The members of \fI\%BlockdevOptionsThrottle\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvdi\fP: The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvhdx\fP: The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvirtio\-blk\-vfio\-pci\fP: The members of \fI\%BlockdevOptionsVirtioBlkVfioPci\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvirtio\-blk\-vhost\-user\fP: The members of \fI\%BlockdevOptionsVirtioBlkVhostUser\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvirtio\-blk\-vhost\-vdpa\fP: The members of \fI\%BlockdevOptionsVirtioBlkVhostVdpa\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvmdk\fP: The members of \fI\%BlockdevOptionsGenericCOWFormat\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvpc\fP: The members of \fI\%BlockdevOptionsGenericFormat\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvvfat\fP: The members of \fI\%BlockdevOptionsVVFAT\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Alternate  BlockdevRef  (Since: 2.9)
Reference to a block device.
.INDENT 7.0
.TP
.B Alternatives
.INDENT 7.0
.IP \(bu 2
\fBdefinition\fP (\fI\%BlockdevOptions\fP) \-\- defines a new block device inline
.IP \(bu 2
\fBreference\fP (\fBstring\fP) \-\- references the ID of an existing block device
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Alternate  BlockdevRefOrNull  (Since: 2.9)
Reference to a block device.
.INDENT 7.0
.TP
.B Alternatives
.INDENT 7.0
.IP \(bu 2
\fBdefinition\fP (\fI\%BlockdevOptions\fP) \-\- defines a new block device inline
.IP \(bu 2
\fBreference\fP (\fBstring\fP) \-\- references the ID of an existing block device.  An empty
string means that no block device should be referenced.
Deprecated; use null instead.
.IP \(bu 2
\fBnull\fP (\fBnull\fP) \-\- No block device should be referenced (since 2.10)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-add  (Since: 2.9)
Creates a new block device.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockdevOptions\fP\&.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-add\(dq,
     \(dqarguments\(dq: {
          \(dqdriver\(dq: \(dqqcow2\(dq,
          \(dqnode\-name\(dq: \(dqtest1\(dq,
          \(dqfile\(dq: {
              \(dqdriver\(dq: \(dqfile\(dq,
              \(dqfilename\(dq: \(dqtest.qcow2\(dq
           }
      }
    }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-add\(dq,
     \(dqarguments\(dq: {
          \(dqdriver\(dq: \(dqqcow2\(dq,
          \(dqnode\-name\(dq: \(dqnode0\(dq,
          \(dqdiscard\(dq: \(dqunmap\(dq,
          \(dqcache\(dq: {
             \(dqdirect\(dq: true
           },
           \(dqfile\(dq: {
             \(dqdriver\(dq: \(dqfile\(dq,
             \(dqfilename\(dq: \(dq/tmp/test.qcow2\(dq
           },
           \(dqbacking\(dq: {
              \(dqdriver\(dq: \(dqraw\(dq,
              \(dqfile\(dq: {
                 \(dqdriver\(dq: \(dqfile\(dq,
                 \(dqfilename\(dq: \(dq/dev/fdset/4\(dq
               }
           }
       }
     }

<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-reopen  (Since: 6.1)
Reopens one or more block devices using the given set of options.
Any option not specified will be reset to its default value
regardless of its previous status.  If an option cannot be changed
or a particular driver does not support reopening then the command
will return an error.  All devices in the list are reopened in one
transaction, so if one of them fails then the whole transaction is
cancelled.
.sp
The command receives a list of block devices to reopen.  For each
one of them, the top\-level \fBnode\-name\fP option (from BlockdevOptions)
must be specified and is used to select the block device to be
reopened.  Other \fBnode\-name\fP options must be either omitted or set to
the current name of the appropriate node.  This command won\(aqt change
any node name and any attempt to do it will result in an error.
.sp
In the case of options that refer to child nodes, the behavior of
this command depends on the value:
.INDENT 7.0
.INDENT 3.5
.INDENT 0.0
.IP 1. 3
A set of options (BlockdevOptions): the child is reopened with
the specified set of options.
.IP 2. 3
A reference to the current child: the child is reopened using
its existing set of options.
.IP 3. 3
A reference to a different node: the current child is replaced
with the specified one.
.IP 4. 3
NULL: the current child (if any) is detached.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Options (1) and (2) are supported in all cases.  Option (3) is
supported for \fBfile\fP and \fBbacking\fP, and option (4) for \fBbacking\fP only.
.sp
Unlike with blockdev\-add, the \fBbacking\fP option must always be present
unless the node being reopened does not have a backing file and its
image does not have a default backing file name as part of its
metadata.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fB[\fP\fI\%BlockdevOptions\fP\fB]\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-del  (Since: 2.9)
Deletes a block device that has been added using blockdev\-add.  The
command will fail if the node is attached to a device or is
otherwise being used.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP) \-\- Name of the graph node to delete.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-add\(dq,
     \(dqarguments\(dq: {
          \(dqdriver\(dq: \(dqqcow2\(dq,
          \(dqnode\-name\(dq: \(dqnode0\(dq,
          \(dqfile\(dq: {
              \(dqdriver\(dq: \(dqfile\(dq,
              \(dqfilename\(dq: \(dqtest.qcow2\(dq
          }
     }
   }
<\- { \(dqreturn\(dq: {} }

\-> { \(dqexecute\(dq: \(dqblockdev\-del\(dq,
     \(dqarguments\(dq: { \(dqnode\-name\(dq: \(dqnode0\(dq }
   }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-set\-active  (Since: 10.0)
Activate or inactivate a block device. Use this to manage the handover of
block devices on migration with qemu\-storage\-daemon.
.sp
Activating a node automatically activates all of its child nodes first.
Inactivating a node automatically inactivates any of its child nodes that are
not in use by a still active node.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- Name of the graph node to activate or inactivate. By default, all
nodes are affected by the operation.
.IP \(bu 2
\fBactive\fP (\fBboolean\fP) \-\- true if the nodes should be active when the command returns success,
false if they should be inactive.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-set\-active\(dq,
     \(dqarguments\(dq: {
          \(dqnode\-name\(dq: \(dqnode0\(dq,
          \(dqactive\(dq: false
     }
   }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsFile  (Since: 2.12)
Driver specific image creation options for file.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- Filename for the new image file
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBpreallocation\fP (\fI\%PreallocMode\fP, \fIoptional\fP) \-\- Preallocation mode for the new image (default: off;
allowed values: off, falloc (if CONFIG_POSIX_FALLOCATE), full
(if CONFIG_POSIX))
.IP \(bu 2
\fBnocow\fP (\fBboolean\fP, \fIoptional\fP) \-\- Turn off copy\-on\-write (valid only on btrfs; default: off)
.IP \(bu 2
\fBextent\-size\-hint\fP (\fBint\fP, \fIoptional\fP) \-\- Extent size hint to add to the image file; 0 for
not adding an extent size hint (default: 1 MB, since 5.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsGluster  (Since: 2.12)
Driver specific image creation options for gluster.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBlocation\fP (\fI\%BlockdevOptionsGluster\fP) \-\- Where to store the new image file
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBpreallocation\fP (\fI\%PreallocMode\fP, \fIoptional\fP) \-\- Preallocation mode for the new image (default: off;
allowed values: off, falloc (if CONFIG_GLUSTERFS_FALLOCATE),
full (if CONFIG_GLUSTERFS_ZEROFILL))
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsLUKS  (Since: 2.12)
Driver specific image creation options for LUKS.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP, \fIoptional\fP) \-\- Node to create the image format on, mandatory except when
\(aqpreallocation\(aq is not requested
.IP \(bu 2
\fBheader\fP (\fI\%BlockdevRef\fP, \fIoptional\fP) \-\- Block device holding a detached LUKS header.  (since 9.0)
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBpreallocation\fP (\fI\%PreallocMode\fP, \fIoptional\fP) \-\- Preallocation mode for the new image (since: 4.2)
(default: off; allowed values: off, metadata, falloc, full)
.IP \(bu 2
The members of \fI\%QCryptoBlockCreateOptionsLUKS\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsNfs  (Since: 2.12)
Driver specific image creation options for NFS.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBlocation\fP (\fI\%BlockdevOptionsNfs\fP) \-\- Where to store the new image file
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsParallels  (Since: 2.12)
Driver specific image creation options for parallels.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP) \-\- Node to create the image format on
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBcluster\-size\fP (\fBint\fP, \fIoptional\fP) \-\- Cluster size in bytes (default: 1 MB)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsQcow  (Since: 2.12)
Driver specific image creation options for qcow.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP) \-\- Node to create the image format on
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBbacking\-file\fP (\fBstring\fP, \fIoptional\fP) \-\- File name of the backing file if a backing file
should be used
.IP \(bu 2
\fBencrypt\fP (\fI\%QCryptoBlockCreateOptions\fP, \fIoptional\fP) \-\- Encryption options if the image should be encrypted
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevQcow2Version  (Since: 2.12)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBv2\fP \-\- The original QCOW2 format as introduced in qemu 0.10 (version
2)
.IP \(bu 2
\fBv3\fP \-\- The extended QCOW2 format as introduced in qemu 1.1 (version 3)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  Qcow2CompressionType  (Since: 5.1)
Compression type used in qcow2 image file
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBzlib\fP \-\- zlib compression, see <\fI\%http://zlib.net/\fP>
.IP \(bu 2
\fBzstd\fP \-\- zstd compression, see <\fI\%http://github.com/facebook/zstd\fP>
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsQcow2  (Since: 2.12)
Driver specific image creation options for qcow2.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP) \-\- Node to create the image format on
.IP \(bu 2
\fBdata\-file\fP (\fI\%BlockdevRef\fP, \fIoptional\fP) \-\- Node to use as an external data file in which all guest
data is stored so that only metadata remains in the qcow2 file
(since: 4.0)
.IP \(bu 2
\fBdata\-file\-raw\fP (\fBboolean\fP, \fIoptional\fP) \-\- True if the external data file must stay valid as a
standalone (read\-only) raw image without looking at qcow2
metadata (default: false; since: 4.0)
.IP \(bu 2
\fBextended\-l2\fP (\fBboolean\fP, \fIoptional\fP) \-\- True to make the image have extended L2 entries
(default: false; since 5.2)
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBversion\fP (\fI\%BlockdevQcow2Version\fP, \fIoptional\fP) \-\- Compatibility level (default: v3)
.IP \(bu 2
\fBbacking\-file\fP (\fBstring\fP, \fIoptional\fP) \-\- File name of the backing file if a backing file
should be used
.IP \(bu 2
\fBbacking\-fmt\fP (\fI\%BlockdevDriver\fP, \fIoptional\fP) \-\- Name of the block driver to use for the backing file
.IP \(bu 2
\fBencrypt\fP (\fI\%QCryptoBlockCreateOptions\fP, \fIoptional\fP) \-\- Encryption options if the image should be encrypted
.IP \(bu 2
\fBcluster\-size\fP (\fBint\fP, \fIoptional\fP) \-\- qcow2 cluster size in bytes (default: 65536)
.IP \(bu 2
\fBpreallocation\fP (\fI\%PreallocMode\fP, \fIoptional\fP) \-\- Preallocation mode for the new image (default: off;
allowed values: off, falloc, full, metadata)
.IP \(bu 2
\fBlazy\-refcounts\fP (\fBboolean\fP, \fIoptional\fP) \-\- True if refcounts may be updated lazily
(default: off)
.IP \(bu 2
\fBrefcount\-bits\fP (\fBint\fP, \fIoptional\fP) \-\- Width of reference counts in bits (default: 16)
.IP \(bu 2
\fBcompression\-type\fP (\fI\%Qcow2CompressionType\fP, \fIoptional\fP) \-\- The image cluster compression method
(default: zlib, since 5.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsQed  (Since: 2.12)
Driver specific image creation options for qed.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP) \-\- Node to create the image format on
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBbacking\-file\fP (\fBstring\fP, \fIoptional\fP) \-\- File name of the backing file if a backing file
should be used
.IP \(bu 2
\fBbacking\-fmt\fP (\fI\%BlockdevDriver\fP, \fIoptional\fP) \-\- Name of the block driver to use for the backing file
.IP \(bu 2
\fBcluster\-size\fP (\fBint\fP, \fIoptional\fP) \-\- Cluster size in bytes (default: 65536)
.IP \(bu 2
\fBtable\-size\fP (\fBint\fP, \fIoptional\fP) \-\- L1/L2 table size (in clusters)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsRbd  (Since: 2.12)
Driver specific image creation options for rbd/Ceph.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBlocation\fP (\fI\%BlockdevOptionsRbd\fP) \-\- Where to store the new image file.  This location cannot
point to a snapshot.
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBcluster\-size\fP (\fBint\fP, \fIoptional\fP) \-\- RBD object size
.IP \(bu 2
\fBencrypt\fP (\fI\%RbdEncryptionCreateOptions\fP, \fIoptional\fP) \-\- Image encryption options.  (Since 6.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevVmdkSubformat  (Since: 4.0)
Subformat options for VMDK images
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBmonolithicSparse\fP \-\- Single file image with sparse cluster allocation
.IP \(bu 2
\fBmonolithicFlat\fP \-\- Single flat data image and a descriptor file
.IP \(bu 2
\fBtwoGbMaxExtentSparse\fP \-\- Data is split into 2GB (per virtual LBA)
sparse extent files, in addition to a descriptor file
.IP \(bu 2
\fBtwoGbMaxExtentFlat\fP \-\- Data is split into 2GB (per virtual LBA) flat
extent files, in addition to a descriptor file
.IP \(bu 2
\fBstreamOptimized\fP \-\- Single file image sparse cluster allocation,
optimized for streaming over network.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevVmdkAdapterType  (Since: 4.0)
Adapter type info for VMDK images
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBide\fP \-\- Not documented
.IP \(bu 2
\fBbuslogic\fP \-\- Not documented
.IP \(bu 2
\fBlsilogic\fP \-\- Not documented
.IP \(bu 2
\fBlegacyESX\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsVmdk  (Since: 4.0)
Driver specific image creation options for VMDK.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP) \-\- Where to store the new image file.  This refers to the image
file for monolithcSparse and streamOptimized format, or the
descriptor file for other formats.
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBextents\fP (\fB[\fP\fI\%BlockdevRef\fP\fB]\fP, \fIoptional\fP) \-\- Where to store the data extents.  Required for
monolithcFlat, twoGbMaxExtentSparse and twoGbMaxExtentFlat
formats.  For monolithicFlat, only one entry is required; for
twoGbMaxExtent* formats, the number of entries required is
calculated as extent_number = virtual_size / 2GB.  Providing
more extents than will be used is an error.
.IP \(bu 2
\fBsubformat\fP (\fI\%BlockdevVmdkSubformat\fP, \fIoptional\fP) \-\- The subformat of the VMDK image.  Default:
\(dqmonolithicSparse\(dq.
.IP \(bu 2
\fBbacking\-file\fP (\fBstring\fP, \fIoptional\fP) \-\- The path of backing file.  Default: no backing file
is used.
.IP \(bu 2
\fBadapter\-type\fP (\fI\%BlockdevVmdkAdapterType\fP, \fIoptional\fP) \-\- The adapter type used to fill in the descriptor.
Default: ide.
.IP \(bu 2
\fBhwversion\fP (\fBstring\fP, \fIoptional\fP) \-\- Hardware version.  The meaningful options are \(dq4\(dq or
\(dq6\(dq.  Default: \(dq4\(dq.
.IP \(bu 2
\fBtoolsversion\fP (\fBstring\fP, \fIoptional\fP) \-\- VMware guest tools version.  Default: \(dq2147483647\(dq
(Since 6.2)
.IP \(bu 2
\fBzeroed\-grain\fP (\fBboolean\fP, \fIoptional\fP) \-\- Whether to enable zeroed\-grain feature for sparse
subformats.  Default: false.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsSsh  (Since: 2.12)
Driver specific image creation options for SSH.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBlocation\fP (\fI\%BlockdevOptionsSsh\fP) \-\- Where to store the new image file
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsVdi  (Since: 2.12)
Driver specific image creation options for VDI.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP) \-\- Node to create the image format on
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBpreallocation\fP (\fI\%PreallocMode\fP, \fIoptional\fP) \-\- Preallocation mode for the new image (default: off;
allowed values: off, metadata)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevVhdxSubformat  (Since: 2.12)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBdynamic\fP \-\- Growing image file
.IP \(bu 2
\fBfixed\fP \-\- Preallocated fixed\-size image file
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsVhdx  (Since: 2.12)
Driver specific image creation options for vhdx.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP) \-\- Node to create the image format on
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBlog\-size\fP (\fBint\fP, \fIoptional\fP) \-\- Log size in bytes, must be a multiple of 1 MB (default: 1
MB)
.IP \(bu 2
\fBblock\-size\fP (\fBint\fP, \fIoptional\fP) \-\- Block size in bytes, must be a multiple of 1 MB and not
larger than 256 MB (default: automatically choose a block size
depending on the image size)
.IP \(bu 2
\fBsubformat\fP (\fI\%BlockdevVhdxSubformat\fP, \fIoptional\fP) \-\- vhdx subformat (default: dynamic)
.IP \(bu 2
\fBblock\-state\-zero\fP (\fBboolean\fP, \fIoptional\fP) \-\- Force use of payload blocks of type \(aqZERO\(aq.
Non\-standard, but default.  Do not set to \(aqoff\(aq when using
\(aqqemu\-img convert\(aq with subformat=dynamic.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevVpcSubformat  (Since: 2.12)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBdynamic\fP \-\- Growing image file
.IP \(bu 2
\fBfixed\fP \-\- Preallocated fixed\-size image file
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptionsVpc  (Since: 2.12)
Driver specific image creation options for vpc (VHD).
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fI\%BlockdevRef\fP) \-\- Node to create the image format on
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the virtual disk in bytes
.IP \(bu 2
\fBsubformat\fP (\fI\%BlockdevVpcSubformat\fP, \fIoptional\fP) \-\- vhdx subformat (default: dynamic)
.IP \(bu 2
\fBforce\-size\fP (\fBboolean\fP, \fIoptional\fP) \-\- Force use of the exact byte size instead of rounding to
the next size that can be represented in CHS geometry
(default: false)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevCreateOptions  (Since: 2.12)
Options for creating an image format on a given node.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdriver\fP (\fI\%BlockdevDriver\fP) \-\- block driver to create the image format
.IP \(bu 2
When \fBdriver\fP is \fBfile\fP: The members of \fI\%BlockdevCreateOptionsFile\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBgluster\fP: The members of \fI\%BlockdevCreateOptionsGluster\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBluks\fP: The members of \fI\%BlockdevCreateOptionsLUKS\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBnfs\fP: The members of \fI\%BlockdevCreateOptionsNfs\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBparallels\fP: The members of \fI\%BlockdevCreateOptionsParallels\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBqcow\fP: The members of \fI\%BlockdevCreateOptionsQcow\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBqcow2\fP: The members of \fI\%BlockdevCreateOptionsQcow2\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBqed\fP: The members of \fI\%BlockdevCreateOptionsQed\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBrbd\fP: The members of \fI\%BlockdevCreateOptionsRbd\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBssh\fP: The members of \fI\%BlockdevCreateOptionsSsh\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvdi\fP: The members of \fI\%BlockdevCreateOptionsVdi\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvhdx\fP: The members of \fI\%BlockdevCreateOptionsVhdx\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvmdk\fP: The members of \fI\%BlockdevCreateOptionsVmdk\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBvpc\fP: The members of \fI\%BlockdevCreateOptionsVpc\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-create  (Since: 3.0)
Starts a job to create an image format on a given node.  The job is
automatically finalized, but a manual job\-dismiss is required.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBjob\-id\fP (\fBstring\fP) \-\- Identifier for the newly created job.
.IP \(bu 2
\fBoptions\fP (\fI\%BlockdevCreateOptions\fP) \-\- Options for the image creation.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevAmendOptionsLUKS  (Since: 5.1)
Driver specific image amend options for LUKS.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%QCryptoBlockAmendOptionsLUKS\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevAmendOptionsQcow2  (Since: 5.1)
Driver specific image amend options for qcow2.  For now, only
encryption options can be amended
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBencrypt\fP (\fI\%QCryptoBlockAmendOptions\fP, \fIoptional\fP) \-\- Encryption options to be amended
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevAmendOptions  (Since: 5.1)
Options for amending an image format
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdriver\fP (\fI\%BlockdevDriver\fP) \-\- Block driver of the node to amend.
.IP \(bu 2
When \fBdriver\fP is \fBluks\fP: The members of \fI\%BlockdevAmendOptionsLUKS\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBqcow2\fP: The members of \fI\%BlockdevAmendOptionsQcow2\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-blockdev\-amend  (Since: 5.1)
This command is unstable/experimental.
.sp
Starts a job to amend format specific options of an existing open
block device The job is automatically finalized, but a manual
job\-dismiss is required.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBjob\-id\fP (\fBstring\fP) \-\- Identifier for the newly created job.
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP) \-\- Name of the block node to work on
.IP \(bu 2
\fBoptions\fP (\fI\%BlockdevAmendOptions\fP) \-\- Options (driver specific)
.IP \(bu 2
\fBforce\fP (\fBboolean\fP, \fIoptional\fP) \-\- Allow unsafe operations, format specific For luks that
allows erase of the last active keyslot (permanent loss of
data), and replacement of an active keyslot (possible loss of
data if IO error happens)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is experimental.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockErrorAction  (Since: 2.1)
An enumeration of action that has been taken when a DISK I/O occurs
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBignore\fP \-\- error has been ignored
.IP \(bu 2
\fBreport\fP \-\- error has been reported to the device
.IP \(bu 2
\fBstop\fP \-\- error caused VM to be stopped
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  BLOCK_IMAGE_CORRUPTED  (Since: 1.7)
Emitted when a disk image is being marked corrupt.  The image can be
identified by its device or node name.  The \(aqdevice\(aq field is always
present for compatibility reasons, but it can be empty (\(dq\(dq) if the
image does not have a device name associated.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- device name.  This is always present for compatibility
reasons, but it can be empty (\(dq\(dq) if the image does not have a
device name associated.
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- node name (Since: 2.4)
.IP \(bu 2
\fBmsg\fP (\fBstring\fP) \-\- informative message for human consumption, such as the kind of
corruption being detected.  It should not be parsed by machine
as it is not guaranteed to be stable
.IP \(bu 2
\fBoffset\fP (\fBint\fP, \fIoptional\fP) \-\- if the corruption resulted from an image access, this is
the host\(aqs access offset into the image
.IP \(bu 2
\fBsize\fP (\fBint\fP, \fIoptional\fP) \-\- if the corruption resulted from an image access, this is the
access size
.IP \(bu 2
\fBfatal\fP (\fBboolean\fP) \-\- if set, the image is marked corrupt and therefore unusable
after this event and must be repaired (Since 2.2; before, every
BLOCK_IMAGE_CORRUPTED event was fatal)
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
If action is \(dqstop\(dq, a STOP event will eventually follow
the BLOCK_IO_ERROR event.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqBLOCK_IMAGE_CORRUPTED\(dq,
     \(dqdata\(dq: { \(dqdevice\(dq: \(dq\(dq, \(dqnode\-name\(dq: \(dqdrive\(dq, \(dqfatal\(dq: false,
               \(dqmsg\(dq: \(dqL2 table offset 0x2a2a2a00 unaligned (L1 index: 0)\(dq },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1648243240, \(dqmicroseconds\(dq: 906060 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  BLOCK_IO_ERROR  (Since: 0.13)
Emitted when a disk I/O error occurs
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBqom\-path\fP (\fBstring\fP) \-\- path to the device object in the QOM tree (since 9.2)
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- device name.  This is always present for compatibility
reasons, but it can be empty (\(dq\(dq) if the image does not have a
device name associated.
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- node name.  Note that errors may be reported for the
root node that is directly attached to a guest device rather
than for the node where the error occurred.  The node name is
not present if the drive is empty.  (Since: 2.8)
.IP \(bu 2
\fBoperation\fP (\fI\%IoOperationType\fP) \-\- I/O operation
.IP \(bu 2
\fBaction\fP (\fI\%BlockErrorAction\fP) \-\- action that has been taken
.IP \(bu 2
\fBnospace\fP (\fBboolean\fP, \fIoptional\fP) \-\- true if I/O error was caused due to a no\-space condition.
This key is only present if query\-block\(aqs io\-status is present,
please see query\-block documentation for more information
(since: 2.2)
.IP \(bu 2
\fBreason\fP (\fBstring\fP) \-\- human readable string describing the error cause.  (This
field is a debugging aid for humans, it should not be parsed by
applications) (since: 2.2)
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
If action is \(dqstop\(dq, a STOP event will eventually follow
the BLOCK_IO_ERROR event.
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
This event is rate\-limited.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqBLOCK_IO_ERROR\(dq,
     \(dqdata\(dq: { \(dqqom\-path\(dq: \(dq/machine/unattached/device[0]\(dq,
               \(dqdevice\(dq: \(dqide0\-hd1\(dq,
               \(dqnode\-name\(dq: \(dq#block212\(dq,
               \(dqoperation\(dq: \(dqwrite\(dq,
               \(dqaction\(dq: \(dqstop\(dq,
               \(dqreason\(dq: \(dqNo space left on device\(dq },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1265044230, \(dqmicroseconds\(dq: 450486 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  BLOCK_JOB_COMPLETED  (Since: 1.1)
Emitted when a block job has completed
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%JobType\fP) \-\- job type
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The job identifier.  Originally the device name but other
values are allowed since QEMU 2.7
.IP \(bu 2
\fBlen\fP (\fBint\fP) \-\- maximum progress value
.IP \(bu 2
\fBoffset\fP (\fBint\fP) \-\- current progress value.  On success this is equal to len.
On failure this is less than len
.IP \(bu 2
\fBspeed\fP (\fBint\fP) \-\- rate limit, bytes per second
.IP \(bu 2
\fBerror\fP (\fBstring\fP, \fIoptional\fP) \-\- error message.  Only present on failure.  This field
contains a human\-readable error message.  There are no semantics
other than that streaming has failed and clients should not try
to interpret the error string
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqBLOCK_JOB_COMPLETED\(dq,
     \(dqdata\(dq: { \(dqtype\(dq: \(dqstream\(dq, \(dqdevice\(dq: \(dqvirtio\-disk0\(dq,
               \(dqlen\(dq: 10737418240, \(dqoffset\(dq: 10737418240,
               \(dqspeed\(dq: 0 },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1267061043, \(dqmicroseconds\(dq: 959568 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  BLOCK_JOB_CANCELLED  (Since: 1.1)
Emitted when a block job has been cancelled
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%JobType\fP) \-\- job type
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The job identifier.  Originally the device name but other
values are allowed since QEMU 2.7
.IP \(bu 2
\fBlen\fP (\fBint\fP) \-\- maximum progress value
.IP \(bu 2
\fBoffset\fP (\fBint\fP) \-\- current progress value.  On success this is equal to len.
On failure this is less than len
.IP \(bu 2
\fBspeed\fP (\fBint\fP) \-\- rate limit, bytes per second
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqBLOCK_JOB_CANCELLED\(dq,
     \(dqdata\(dq: { \(dqtype\(dq: \(dqstream\(dq, \(dqdevice\(dq: \(dqvirtio\-disk0\(dq,
               \(dqlen\(dq: 10737418240, \(dqoffset\(dq: 134217728,
               \(dqspeed\(dq: 0 },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1267061043, \(dqmicroseconds\(dq: 959568 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  BLOCK_JOB_ERROR  (Since: 1.3)
Emitted when a block job encounters an error
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The job identifier.  Originally the device name but other
values are allowed since QEMU 2.7
.IP \(bu 2
\fBoperation\fP (\fI\%IoOperationType\fP) \-\- I/O operation
.IP \(bu 2
\fBaction\fP (\fI\%BlockErrorAction\fP) \-\- action that has been taken
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqBLOCK_JOB_ERROR\(dq,
     \(dqdata\(dq: { \(dqdevice\(dq: \(dqide0\-hd1\(dq,
               \(dqoperation\(dq: \(dqwrite\(dq,
               \(dqaction\(dq: \(dqstop\(dq },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1265044230, \(dqmicroseconds\(dq: 450486 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  BLOCK_JOB_READY  (Since: 1.3)
Emitted when a block job is ready to complete
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%JobType\fP) \-\- job type
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The job identifier.  Originally the device name but other
values are allowed since QEMU 2.7
.IP \(bu 2
\fBlen\fP (\fBint\fP) \-\- maximum progress value
.IP \(bu 2
\fBoffset\fP (\fBint\fP) \-\- current progress value.  On success this is equal to len.
On failure this is less than len
.IP \(bu 2
\fBspeed\fP (\fBint\fP) \-\- rate limit, bytes per second
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
The \(dqready to complete\(dq status is always reset by a
\fBBLOCK_JOB_ERROR\fP event.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqBLOCK_JOB_READY\(dq,
     \(dqdata\(dq: { \(dqdevice\(dq: \(dqdrive0\(dq, \(dqtype\(dq: \(dqmirror\(dq, \(dqspeed\(dq: 0,
               \(dqlen\(dq: 2097152, \(dqoffset\(dq: 2097152 },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1265044230, \(dqmicroseconds\(dq: 450486 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  BLOCK_JOB_PENDING  (Since: 2.12)
Emitted when a block job is awaiting explicit authorization to
finalize graph changes via \fBblock\-job\-finalize\fP\&.  If this job is part
of a transaction, it will not emit this event until the transaction
has converged first.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%JobType\fP) \-\- job type
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The job identifier.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqBLOCK_JOB_PENDING\(dq,
     \(dqdata\(dq: { \(dqtype\(dq: \(dqmirror\(dq, \(dqid\(dq: \(dqbackup_1\(dq },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1265044230, \(dqmicroseconds\(dq: 450486 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  PreallocMode  (Since: 2.2)
Preallocation mode of QEMU image file
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBoff\fP \-\- no preallocation
.IP \(bu 2
\fBmetadata\fP \-\- preallocate only for metadata
.IP \(bu 2
\fBfalloc\fP \-\- like \fBfull\fP preallocation but allocate disk space by
posix_fallocate() rather than writing data.
.IP \(bu 2
\fBfull\fP \-\- preallocate all data by writing it to the device to ensure
disk space is really available.  This data may or may not be
zero, depending on the image format and storage.  \fBfull\fP
preallocation also sets up metadata correctly.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  BLOCK_WRITE_THRESHOLD  (Since: 2.3)
Emitted when writes on block device reaches or exceeds the
configured write threshold.  For thin\-provisioned devices, this
means the device should be extended to avoid pausing for disk
exhaustion.  The event is one shot.  Once triggered, it needs to be
re\-registered with another block\-set\-write\-threshold command.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP) \-\- graph node name on which the threshold was exceeded.
.IP \(bu 2
\fBamount\-exceeded\fP (\fBint\fP) \-\- amount of data which exceeded the threshold, in
bytes.
.IP \(bu 2
\fBwrite\-threshold\fP (\fBint\fP) \-\- last configured threshold, in bytes.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-set\-write\-threshold  (Since: 2.3)
Change the write threshold for a block drive.  An event will be
delivered if a write to this block drive crosses the configured
threshold.  The threshold is an offset, thus must be non\-negative.
Default is no write threshold.  Setting the threshold to zero
disables it.
.sp
This is useful to transparently resize thin\-provisioned drives
without the guest OS noticing.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP) \-\- graph node name on which the threshold must be set.
.IP \(bu 2
\fBwrite\-threshold\fP (\fBint\fP) \-\- configured threshold for the block device, bytes.
Use 0 to disable the threshold.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock\-set\-write\-threshold\(dq,
     \(dqarguments\(dq: { \(dqnode\-name\(dq: \(dqmydev\(dq,
                    \(dqwrite\-threshold\(dq: 17179869184 } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-blockdev\-change  (Since: 2.7)
This command is unstable/experimental.
.sp
Dynamically reconfigure the block driver state graph.
.sp
Currently only supports adding and deleting quorum children.  A
child will be added at the end of the list of children.  Its
contents \fImust\fP be consistent with the other childrens\(aq contents.
Deleting a child that is not last in the list of children is
problematic, because it \(dqrenumbers\(dq the children following it.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBstring\fP) \-\- the id or name of the parent node.
.IP \(bu 2
\fBchild\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of a child to be deleted.  Mutually exclusive with
\fBnode\fP\&.
.IP \(bu 2
\fBnode\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of the node to be added.  Mutually exclusive with
\fBchild\fP\&.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is experimental.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Add a new node to a quorum"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqblockdev\-add\(dq,
      \(dqarguments\(dq: {
          \(dqdriver\(dq: \(dqraw\(dq,
          \(dqnode\-name\(dq: \(dqnew_node\(dq,
          \(dqfile\(dq: { \(dqdriver\(dq: \(dqfile\(dq,
                    \(dqfilename\(dq: \(dqtest.raw\(dq } } }
 <\- { \(dqreturn\(dq: {} }
 \-> { \(dqexecute\(dq: \(dqx\-blockdev\-change\(dq,
      \(dqarguments\(dq: { \(dqparent\(dq: \(dqdisk1\(dq,
                     \(dqnode\(dq: \(dqnew_node\(dq } }
 <\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Delete a quorum\(aqs node"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqx\-blockdev\-change\(dq,
      \(dqarguments\(dq: { \(dqparent\(dq: \(dqdisk1\(dq,
                     \(dqchild\(dq: \(dqchildren.1\(dq } }
 <\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-blockdev\-set\-iothread  (Since: 2.12)
This command is unstable/experimental.
.sp
Move \fBnode\fP and its children into the \fBiothread\fP\&.  If \fBiothread\fP is
null then move \fBnode\fP and its children into the main loop.
.sp
The node must not be attached to a BlockBackend.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP) \-\- the name of the block driver node
.IP \(bu 2
\fBiothread\fP (\fI\%StrOrNull\fP) \-\- the name of the IOThread object or null for the main loop
.IP \(bu 2
\fBforce\fP (\fBboolean\fP, \fIoptional\fP) \-\- true if the node and its children should be moved when a
BlockBackend is already attached
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is experimental and intended for test cases
that need control over IOThreads only.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Move a node into an IOThread"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqx\-blockdev\-set\-iothread\(dq,
      \(dqarguments\(dq: { \(dqnode\-name\(dq: \(dqdisk1\(dq,
                     \(dqiothread\(dq: \(dqiothread0\(dq } }
 <\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Move a node into the main loop"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqx\-blockdev\-set\-iothread\(dq,
      \(dqarguments\(dq: { \(dqnode\-name\(dq: \(dqdisk1\(dq,
                     \(dqiothread\(dq: null } }
 <\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QuorumOpType  (Since: 2.6)
An enumeration of the quorum operation types
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBread\fP \-\- read operation
.IP \(bu 2
\fBwrite\fP \-\- write operation
.IP \(bu 2
\fBflush\fP \-\- flush operation
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  QUORUM_FAILURE  (Since: 2.0)
Emitted by the Quorum block driver if it fails to establish a quorum
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBreference\fP (\fBstring\fP) \-\- device name if defined else node name
.IP \(bu 2
\fBsector\-num\fP (\fBint\fP) \-\- number of the first sector of the failed read operation
.IP \(bu 2
\fBsectors\-count\fP (\fBint\fP) \-\- failed read operation sector count
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
This event is rate\-limited.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqQUORUM_FAILURE\(dq,
     \(dqdata\(dq: { \(dqreference\(dq: \(dqusr1\(dq, \(dqsector\-num\(dq: 345435, \(dqsectors\-count\(dq: 5 },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1344522075, \(dqmicroseconds\(dq: 745528 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  QUORUM_REPORT_BAD  (Since: 2.0)
Emitted to report a corruption of a Quorum file
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%QuorumOpType\fP) \-\- quorum operation type (Since 2.6)
.IP \(bu 2
\fBerror\fP (\fBstring\fP, \fIoptional\fP) \-\- error message.  Only present on failure.  This field
contains a human\-readable error message.  There are no semantics
other than that the block layer reported an error and clients
should not try to interpret the error string.
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP) \-\- the graph node name of the block driver state
.IP \(bu 2
\fBsector\-num\fP (\fBint\fP) \-\- number of the first sector of the failed read operation
.IP \(bu 2
\fBsectors\-count\fP (\fBint\fP) \-\- failed read operation sector count
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
This event is rate\-limited.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Read operation"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 <\- { \(dqevent\(dq: \(dqQUORUM_REPORT_BAD\(dq,
      \(dqdata\(dq: { \(dqnode\-name\(dq: \(dqnode0\(dq, \(dqsector\-num\(dq: 345435, \(dqsectors\-count\(dq: 5,
                \(dqtype\(dq: \(dqread\(dq },
      \(dqtimestamp\(dq: { \(dqseconds\(dq: 1344522075, \(dqmicroseconds\(dq: 745528 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Flush operation"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 <\- { \(dqevent\(dq: \(dqQUORUM_REPORT_BAD\(dq,
      \(dqdata\(dq: { \(dqnode\-name\(dq: \(dqnode0\(dq, \(dqsector\-num\(dq: 0, \(dqsectors\-count\(dq: 2097120,
                \(dqtype\(dq: \(dqflush\(dq, \(dqerror\(dq: \(dqBroken pipe\(dq },
      \(dqtimestamp\(dq: { \(dqseconds\(dq: 1456406829, \(dqmicroseconds\(dq: 291763 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevSnapshotInternal  (Since: 1.7)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- the device name or node\-name of a root node to generate the
snapshot from
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the name of the internal snapshot to be created
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-snapshot\-internal\-sync  (Since: 1.7)
Synchronously take an internal snapshot of a block device, when the
format of the image used supports it.  If the name is an empty
string, or a snapshot with name already exists, the operation will
fail.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockdevSnapshotInternal\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBdevice\fP is not a valid block device, GenericError
.IP \(bu 2
If any snapshot matching \fBname\fP exists, or \fBname\fP is empty,
GenericError
.IP \(bu 2
If the format of the image used does not support it,
GenericError
.UNINDENT

.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
Only some image formats such as qcow2 and rbd support
internal snapshots.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-snapshot\-internal\-sync\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqide\-hd0\(dq,
                    \(dqname\(dq: \(dqsnapshot0\(dq }
   }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-snapshot\-delete\-internal\-sync  (Since: 1.7)
Synchronously delete an internal snapshot of a block device, when
the format of the image used support it.  The snapshot is identified
by name or id or both.  One of the name or id is required.  Return
SnapshotInfo for the successfully deleted snapshot.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- the device name or node\-name of a root node to delete the
snapshot from
.IP \(bu 2
\fBid\fP (\fBstring\fP, \fIoptional\fP) \-\- optional the snapshot\(aqs ID to be deleted
.IP \(bu 2
\fBname\fP (\fBstring\fP, \fIoptional\fP) \-\- optional the snapshot\(aqs name to be deleted
.UNINDENT
.TP
.B Return
\fI\%SnapshotInfo\fP \-\- SnapshotInfo
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBdevice\fP is not a valid block device, GenericError
.IP \(bu 2
If snapshot not found, GenericError
.IP \(bu 2
If the format of the image used does not support it,
GenericError
.IP \(bu 2
If \fBid\fP and \fBname\fP are both not specified, GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-snapshot\-delete\-internal\-sync\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqide\-hd0\(dq,
                    \(dqname\(dq: \(dqsnapshot0\(dq }
   }
<\- { \(dqreturn\(dq: {
                   \(dqid\(dq: \(dq1\(dq,
                   \(dqname\(dq: \(dqsnapshot0\(dq,
                   \(dqvm\-state\-size\(dq: 0,
                   \(dqdate\-sec\(dq: 1000012,
                   \(dqdate\-nsec\(dq: 10,
                   \(dqvm\-clock\-sec\(dq: 100,
                   \(dqvm\-clock\-nsec\(dq: 20,
                   \(dqicount\(dq: 220414
     }
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DummyBlockCoreForceArrays  (Since: 8.0)
Not used by QMP; hack to let us use BlockGraphInfoList internally
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBunused\-block\-graph\-info\fP (\fB[\fP\fI\%BlockGraphInfo\fP\fB]\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.SS Additional block stuff (VM related)
.INDENT 0.0
.TP
.B Enum  BiosAtaTranslation  (Since: 2.0)
Policy that BIOS should use to interpret cylinder/head/sector
addresses.  Note that Bochs BIOS and SeaBIOS will not actually
translate logical CHS to physical; instead, they will use logical
block addressing.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBauto\fP \-\- If cylinder/heads/sizes are passed, choose between none and
LBA depending on the size of the disk.  If they are not passed,
choose none if QEMU can guess that the disk had 16 or fewer
heads, large if QEMU can guess that the disk had 131072 or fewer
tracks across all heads (i.e. cylinders*heads<131072), otherwise
LBA.
.IP \(bu 2
\fBnone\fP \-\- The physical disk geometry is equal to the logical geometry.
.IP \(bu 2
\fBlba\fP \-\- Assume 63 sectors per track and one of 16, 32, 64, 128 or 255
heads (if fewer than 255 are enough to cover the whole disk with
1024 cylinders/head).  The number of cylinders/head is then
computed based on the number of sectors and heads.
.IP \(bu 2
\fBlarge\fP \-\- The number of cylinders per head is scaled down to 1024 by
correspondingly scaling up the number of heads.
.IP \(bu 2
\fBrechs\fP \-\- Same as \fBlarge\fP, but first convert a 16\-head geometry to
15\-head, by proportionally scaling up the number of
cylinders/head.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  FloppyDriveType  (Since: 2.6)
Type of Floppy drive to be emulated by the Floppy Disk Controller.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fB144\fP \-\- 1.44MB 3.5\(dq drive
.IP \(bu 2
\fB288\fP \-\- 2.88MB 3.5\(dq drive
.IP \(bu 2
\fB120\fP \-\- 1.2MB 5.25\(dq drive
.IP \(bu 2
\fBnone\fP \-\- No drive connected
.IP \(bu 2
\fBauto\fP \-\- Automatically determined by inserted media at boot
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  PRManagerInfo  (Since: 3.0)
Information about a persistent reservation manager
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- the identifier of the persistent reservation manager
.IP \(bu 2
\fBconnected\fP (\fBboolean\fP) \-\- true if the persistent reservation manager is connected
to the underlying storage or helper
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-pr\-managers  (Since: 3.0)
Return a list of information about each persistent reservation
manager.
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%PRManagerInfo\fP\fB]\fP \-\- a list of \fBPRManagerInfo\fP for each persistent reservation
manager
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  eject  (Since: 0.14)
Ejects the medium from a removable drive.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP, \fIoptional\fP) \-\- Block device name
.IP \(bu 2
\fBid\fP (\fBstring\fP, \fIoptional\fP) \-\- The name or QOM path of the guest device (since: 2.8)
.IP \(bu 2
\fBforce\fP (\fBboolean\fP, \fIoptional\fP) \-\- If true, eject regardless of whether the drive is locked.
If not specified, the default value is false.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- Member \fBdevice\fP is deprecated.  Use \fBid\fP instead.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBdevice\fP is not a valid block device, DeviceNotFound
.UNINDENT

.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
Ejecting a device with no media results in success.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqeject\(dq, \(dqarguments\(dq: { \(dqid\(dq: \(dqide1\-0\-1\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-open\-tray  (Since: 2.5)
Opens a block device\(aqs tray.  If there is a block driver state tree
inserted as a medium, it will become inaccessible to the guest (but
it will remain associated to the block device, so closing the tray
will make it accessible again).
.sp
If the tray was already open before, this will be a no\-op.
.sp
Once the tray opens, a DEVICE_TRAY_MOVED event is emitted.  There
are cases in which no such event will be generated, these include:
.INDENT 7.0
.IP \(bu 2
if the guest has locked the tray, \fBforce\fP is false and the guest
does not respond to the eject request
.IP \(bu 2
if the BlockBackend denoted by \fBdevice\fP does not have a guest
device attached to it
.IP \(bu 2
if the guest device does not have an actual tray
.UNINDENT
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP, \fIoptional\fP) \-\- Block device name
.IP \(bu 2
\fBid\fP (\fBstring\fP, \fIoptional\fP) \-\- The name or QOM path of the guest device (since: 2.8)
.IP \(bu 2
\fBforce\fP (\fBboolean\fP, \fIoptional\fP) \-\- if false (the default), an eject request will be sent to the
guest if it has locked the tray (and the tray will not be opened
immediately); if true, the tray will be opened regardless of
whether it is locked
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- Member \fBdevice\fP is deprecated.  Use \fBid\fP instead.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-open\-tray\(dq,
     \(dqarguments\(dq: { \(dqid\(dq: \(dqide0\-1\-0\(dq } }

<\- { \(dqtimestamp\(dq: { \(dqseconds\(dq: 1418751016,
                    \(dqmicroseconds\(dq: 716996 },
     \(dqevent\(dq: \(dqDEVICE_TRAY_MOVED\(dq,
     \(dqdata\(dq: { \(dqdevice\(dq: \(dqide1\-cd0\(dq,
               \(dqid\(dq: \(dqide0\-1\-0\(dq,
               \(dqtray\-open\(dq: true } }

<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-close\-tray  (Since: 2.5)
Closes a block device\(aqs tray.  If there is a block driver state tree
associated with the block device (which is currently ejected), that
tree will be loaded as the medium.
.sp
If the tray was already closed before, this will be a no\-op.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP, \fIoptional\fP) \-\- Block device name
.IP \(bu 2
\fBid\fP (\fBstring\fP, \fIoptional\fP) \-\- The name or QOM path of the guest device (since: 2.8)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- Member \fBdevice\fP is deprecated.  Use \fBid\fP instead.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-close\-tray\(dq,
     \(dqarguments\(dq: { \(dqid\(dq: \(dqide0\-1\-0\(dq } }

<\- { \(dqtimestamp\(dq: { \(dqseconds\(dq: 1418751345,
                    \(dqmicroseconds\(dq: 272147 },
     \(dqevent\(dq: \(dqDEVICE_TRAY_MOVED\(dq,
     \(dqdata\(dq: { \(dqdevice\(dq: \(dqide1\-cd0\(dq,
               \(dqid\(dq: \(dqide0\-1\-0\(dq,
               \(dqtray\-open\(dq: false } }

<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-remove\-medium  (Since: 2.12)
Removes a medium (a block driver state tree) from a block device.
That block device\(aqs tray must currently be open (unless there is no
attached guest device).
.sp
If the tray is open and there is no medium inserted, this will be a
no\-op.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The name or QOM path of the guest device
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-remove\-medium\(dq,
     \(dqarguments\(dq: { \(dqid\(dq: \(dqide0\-1\-0\(dq } }

<\- { \(dqerror\(dq: { \(dqclass\(dq: \(dqGenericError\(dq,
                \(dqdesc\(dq: \(dqTray of device \(aqide0\-1\-0\(aq is not open\(dq } }

\-> { \(dqexecute\(dq: \(dqblockdev\-open\-tray\(dq,
     \(dqarguments\(dq: { \(dqid\(dq: \(dqide0\-1\-0\(dq } }

<\- { \(dqtimestamp\(dq: { \(dqseconds\(dq: 1418751627,
                    \(dqmicroseconds\(dq: 549958 },
     \(dqevent\(dq: \(dqDEVICE_TRAY_MOVED\(dq,
     \(dqdata\(dq: { \(dqdevice\(dq: \(dqide1\-cd0\(dq,
               \(dqid\(dq: \(dqide0\-1\-0\(dq,
               \(dqtray\-open\(dq: true } }

<\- { \(dqreturn\(dq: {} }

\-> { \(dqexecute\(dq: \(dqblockdev\-remove\-medium\(dq,
     \(dqarguments\(dq: { \(dqid\(dq: \(dqide0\-1\-0\(dq } }

<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-insert\-medium  (Since: 2.12)
Inserts a medium (a block driver state tree) into a block device.
That block device\(aqs tray must currently be open (unless there is no
attached guest device) and there must be no medium inserted already.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The name or QOM path of the guest device
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP) \-\- name of a node in the block driver state graph
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblockdev\-add\(dq,
     \(dqarguments\(dq: {
         \(dqnode\-name\(dq: \(dqnode0\(dq,
         \(dqdriver\(dq: \(dqraw\(dq,
         \(dqfile\(dq: { \(dqdriver\(dq: \(dqfile\(dq,
                   \(dqfilename\(dq: \(dqfedora.iso\(dq } } }
<\- { \(dqreturn\(dq: {} }

\-> { \(dqexecute\(dq: \(dqblockdev\-insert\-medium\(dq,
     \(dqarguments\(dq: { \(dqid\(dq: \(dqide0\-1\-0\(dq,
                    \(dqnode\-name\(dq: \(dqnode0\(dq } }

<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockdevChangeReadOnlyMode  (Since: 2.3)
Specifies the new read\-only mode of a block device subject to the
\fBblockdev\-change\-medium\fP command.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBretain\fP \-\- Retains the current read\-only mode
.IP \(bu 2
\fBread\-only\fP \-\- Makes the device read\-only
.IP \(bu 2
\fBread\-write\fP \-\- Makes the device writable
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  blockdev\-change\-medium  (Since: 2.5)
Changes the medium inserted into a block device by ejecting the
current medium and loading a new image file which is inserted as the
new medium (this command combines blockdev\-open\-tray,
blockdev\-remove\-medium, blockdev\-insert\-medium and
blockdev\-close\-tray).
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP, \fIoptional\fP) \-\- Block device name
.IP \(bu 2
\fBid\fP (\fBstring\fP, \fIoptional\fP) \-\- The name or QOM path of the guest device (since: 2.8)
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- filename of the new image to be loaded
.IP \(bu 2
\fBformat\fP (\fBstring\fP, \fIoptional\fP) \-\- format to open the new image with (defaults to the probed
format)
.IP \(bu 2
\fBread\-only\-mode\fP (\fI\%BlockdevChangeReadOnlyMode\fP, \fIoptional\fP) \-\- change the read\-only mode of the device; defaults
to \(aqretain\(aq
.IP \(bu 2
\fBforce\fP (\fBboolean\fP, \fIoptional\fP) \-\- if false (the default), an eject request through
blockdev\-open\-tray will be sent to the guest if it has locked
the tray (and the tray will not be opened immediately); if true,
the tray will be opened regardless of whether it is locked.
(since 7.1)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- Member \fBdevice\fP is deprecated.  Use \fBid\fP instead.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Change a removable medium"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqblockdev\-change\-medium\(dq,
      \(dqarguments\(dq: { \(dqid\(dq: \(dqide0\-1\-0\(dq,
                     \(dqfilename\(dq: \(dq/srv/images/Fedora\-12\-x86_64\-DVD.iso\(dq,
                     \(dqformat\(dq: \(dqraw\(dq } }
 <\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Load a read\-only medium into a writable drive"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqblockdev\-change\-medium\(dq,
      \(dqarguments\(dq: { \(dqid\(dq: \(dqfloppyA\(dq,
                     \(dqfilename\(dq: \(dq/srv/images/ro.img\(dq,
                     \(dqformat\(dq: \(dqraw\(dq,
                     \(dqread\-only\-mode\(dq: \(dqretain\(dq } }

 <\- { \(dqerror\(dq:
      { \(dqclass\(dq: \(dqGenericError\(dq,
        \(dqdesc\(dq: \(dqCould not open \(aq/srv/images/ro.img\(aq: Permission denied\(dq } }

 \-> { \(dqexecute\(dq: \(dqblockdev\-change\-medium\(dq,
      \(dqarguments\(dq: { \(dqid\(dq: \(dqfloppyA\(dq,
                     \(dqfilename\(dq: \(dq/srv/images/ro.img\(dq,
                     \(dqformat\(dq: \(dqraw\(dq,
                     \(dqread\-only\-mode\(dq: \(dqread\-only\(dq } }

 <\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  DEVICE_TRAY_MOVED  (Since: 1.1)
Emitted whenever the tray of a removable device is moved by the
guest or by HMP/QMP commands
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- Block device name.  This is always present for
compatibility reasons, but it can be empty (\(dq\(dq) if the image
does not have a device name associated.
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The name or QOM path of the guest device (since 2.8)
.IP \(bu 2
\fBtray\-open\fP (\fBboolean\fP) \-\- true if the tray has been opened or false if it has been
closed
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqDEVICE_TRAY_MOVED\(dq,
     \(dqdata\(dq: { \(dqdevice\(dq: \(dqide1\-cd0\(dq,
               \(dqid\(dq: \(dq/machine/unattached/device[22]\(dq,
               \(dqtray\-open\(dq: true
     },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1265044230, \(dqmicroseconds\(dq: 450486 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  PR_MANAGER_STATUS_CHANGED  (Since: 3.0)
Emitted whenever the connected status of a persistent reservation
manager changes.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The id of the PR manager object
.IP \(bu 2
\fBconnected\fP (\fBboolean\fP) \-\- true if the PR manager is connected to a backend
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqPR_MANAGER_STATUS_CHANGED\(dq,
     \(dqdata\(dq: { \(dqid\(dq: \(dqpr\-helper0\(dq,
               \(dqconnected\(dq: true
     },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1519840375, \(dqmicroseconds\(dq: 450486 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block_set_io_throttle  (Since: 1.1)
Change I/O throttle limits for a block drive.
.sp
Since QEMU 2.4, each device with I/O limits is member of a throttle
group.
.sp
If two or more devices are members of the same group, the limits
will apply to the combined I/O of the whole group in a round\-robin
fashion.  Therefore, setting new I/O limits to a device will affect
the whole group.
.sp
The name of the group can be specified using the \(aqgroup\(aq parameter.
If the parameter is unset, it is assumed to be the current group of
that device.  If it\(aqs not in any group yet, the name of the device
will be used as the name for its group.
.sp
The \(aqgroup\(aq parameter can also be used to move a device to a
different group.  In this case the limits specified in the
parameters will be applied to the new group only.
.sp
I/O limits can be disabled by setting all of them to 0.  In this
case the device will be removed from its group and the rest of its
members will not be affected.  The \(aqgroup\(aq parameter is ignored.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockIOThrottle\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBdevice\fP is not a valid block device, DeviceNotFound
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock_set_io_throttle\(dq,
     \(dqarguments\(dq: { \(dqid\(dq: \(dqvirtio\-blk\-pci0/virtio\-backend\(dq,
                    \(dqbps\(dq: 0,
                    \(dqbps_rd\(dq: 0,
                    \(dqbps_wr\(dq: 0,
                    \(dqiops\(dq: 512,
                    \(dqiops_rd\(dq: 0,
                    \(dqiops_wr\(dq: 0,
                    \(dqbps_max\(dq: 0,
                    \(dqbps_rd_max\(dq: 0,
                    \(dqbps_wr_max\(dq: 0,
                    \(dqiops_max\(dq: 0,
                    \(dqiops_rd_max\(dq: 0,
                    \(dqiops_wr_max\(dq: 0,
                    \(dqbps_max_length\(dq: 0,
                    \(dqiops_size\(dq: 0 } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock_set_io_throttle\(dq,
     \(dqarguments\(dq: { \(dqid\(dq: \(dqide0\-1\-0\(dq,
                    \(dqbps\(dq: 1000000,
                    \(dqbps_rd\(dq: 0,
                    \(dqbps_wr\(dq: 0,
                    \(dqiops\(dq: 0,
                    \(dqiops_rd\(dq: 0,
                    \(dqiops_wr\(dq: 0,
                    \(dqbps_max\(dq: 8000000,
                    \(dqbps_rd_max\(dq: 0,
                    \(dqbps_wr_max\(dq: 0,
                    \(dqiops_max\(dq: 0,
                    \(dqiops_rd_max\(dq: 0,
                    \(dqiops_wr_max\(dq: 0,
                    \(dqbps_max_length\(dq: 60,
                    \(dqiops_size\(dq: 0 } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-latency\-histogram\-set  (Since: 4.0)
Manage read, write and flush latency histograms for the device.
.sp
If only \fBid\fP parameter is specified, remove all present latency
histograms for the device.  Otherwise, add/reset some of (or all)
latency histograms.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The name or QOM path of the guest device.
.IP \(bu 2
\fBboundaries\fP (\fB[\fP\fBint\fP\fB]\fP, \fIoptional\fP) \-\- list of interval boundary values (see description in
BlockLatencyHistogramInfo definition).  If specified, all
latency histograms are removed, and empty ones created for all
io types with intervals corresponding to \fBboundaries\fP (except for
io types, for which specific boundaries are set through the
following parameters).
.IP \(bu 2
\fBboundaries\-read\fP (\fB[\fP\fBint\fP\fB]\fP, \fIoptional\fP) \-\- list of interval boundary values for read latency
histogram.  If specified, old read latency histogram is removed,
and empty one created with intervals corresponding to
\fBboundaries\-read\fP\&.  The parameter has higher priority then
\fBboundaries\fP\&.
.IP \(bu 2
\fBboundaries\-write\fP (\fB[\fP\fBint\fP\fB]\fP, \fIoptional\fP) \-\- list of interval boundary values for write
latency histogram.
.IP \(bu 2
\fBboundaries\-zap\fP (\fB[\fP\fBint\fP\fB]\fP, \fIoptional\fP) \-\- list of interval boundary values for zone append
write latency histogram.
.IP \(bu 2
\fBboundaries\-flush\fP (\fB[\fP\fBint\fP\fB]\fP, \fIoptional\fP) \-\- list of interval boundary values for flush
latency histogram.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
if device is not found or any boundary arrays are invalid.
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.sp
Set new histograms for all io types with intervals
[0, 10), [10, 50), [50, 100), [100, +inf):
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock\-latency\-histogram\-set\(dq,
     \(dqarguments\(dq: { \(dqid\(dq: \(dqdrive0\(dq,
                    \(dqboundaries\(dq: [10, 50, 100] } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.sp
Set new histogram only for write, other histograms will remain
not changed (or not created):
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock\-latency\-histogram\-set\(dq,
     \(dqarguments\(dq: { \(dqid\(dq: \(dqdrive0\(dq,
                    \(dqboundaries\-write\(dq: [10, 50, 100] } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.sp
Set new histograms with the following intervals:
.INDENT 0.0
.IP \(bu 2
read, flush: [0, 10), [10, 50), [50, 100), [100, +inf)
.IP \(bu 2
write: [0, 1000), [1000, 5000), [5000, +inf)
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock\-latency\-histogram\-set\(dq,
     \(dqarguments\(dq: { \(dqid\(dq: \(dqdrive0\(dq,
                    \(dqboundaries\(dq: [10, 50, 100],
                    \(dqboundaries\-write\(dq: [1000, 5000] } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.sp
Remove all latency histograms:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqblock\-latency\-histogram\-set\(dq,
     \(dqarguments\(dq: { \(dqid\(dq: \(dqdrive0\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS Block device exports
.INDENT 0.0
.TP
.B Object  NbdServerOptionsBase
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBhandshake\-max\-seconds\fP (\fBint\fP, \fIoptional\fP) \-\- Time limit, in seconds, at which a client
that has not completed the negotiation handshake will be
disconnected, or 0 for no limit (since 10.0; default: 10).
.IP \(bu 2
\fBtls\-creds\fP (\fBstring\fP, \fIoptional\fP) \-\- ID of the TLS credentials object (since 2.6).
.IP \(bu 2
\fBtls\-authz\fP (\fBstring\fP, \fIoptional\fP) \-\- ID of the QAuthZ authorization object used to validate
the client\(aqs x509 distinguished name.  This object is is only
resolved at time of use, so can be deleted and recreated on the
fly while the NBD server is active.  If missing, it will default
to denying access (since 4.0).
.IP \(bu 2
\fBmax\-connections\fP (\fBint\fP, \fIoptional\fP) \-\- The maximum number of connections to allow at the
same time, 0 for unlimited.  Setting this to 1 also stops the
server from advertising multiple client support (since 5.2;
default: 100).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NbdServerOptions
Keep this type consistent with the NbdServerOptionsLegacy type.  The
only intended difference is using SocketAddress instead of
SocketAddressLegacy.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBaddr\fP (\fI\%SocketAddress\fP) \-\- Address on which to listen (since 4.2).
.IP \(bu 2
The members of \fI\%NbdServerOptionsBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NbdServerOptionsLegacy
Keep this type consistent with the NbdServerOptions type.  The only
intended difference is using SocketAddressLegacy instead of
SocketAddress.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBaddr\fP (\fI\%SocketAddressLegacy\fP) \-\- Address on which to listen (since 1.3).
.IP \(bu 2
The members of \fI\%NbdServerOptionsBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  nbd\-server\-start  (Since: 1.3)
Start an NBD server listening on the given host and port.  Block
devices can then be exported using \fBnbd\-server\-add\fP\&.  The NBD server
will present them as named exports; for example, another QEMU
instance could refer to them as \(dqnbd:HOST:PORT:exportname=NAME\(dq.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%NbdServerOptionsLegacy\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
if the server is already running
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockExportOptionsNbdBase  (Since: 5.0)
An NBD block export (common options shared between nbd\-server\-add
and the NBD branch of block\-export\-add).
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP, \fIoptional\fP) \-\- Export name.  If unspecified, the \fBdevice\fP parameter is used
as the export name.  (Since 2.12)
.IP \(bu 2
\fBdescription\fP (\fBstring\fP, \fIoptional\fP) \-\- Free\-form description of the export, up to 4096 bytes.
(Since 5.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockExportOptionsNbd  (Since: 5.2)
An NBD block export (distinct options used in the NBD branch of
block\-export\-add).
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBbitmaps\fP (\fB[\fP\fI\%BlockDirtyBitmapOrStr\fP\fB]\fP, \fIoptional\fP) \-\- Also export each of the named dirty bitmaps reachable from
\fBdevice\fP, so the NBD client can use NBD_OPT_SET_META_CONTEXT with
the metadata context name \(dqqemu:dirty\-bitmap:BITMAP\(dq to inspect
each bitmap.  Since 7.1 bitmap may be specified by node/name
pair.
.IP \(bu 2
\fBallocation\-depth\fP (\fBboolean\fP, \fIoptional\fP) \-\- Also export the allocation depth map for \fBdevice\fP,
so the NBD client can use NBD_OPT_SET_META_CONTEXT with the
metadata context name \(dqqemu:allocation\-depth\(dq to inspect
allocation details.  (since 5.2)
.IP \(bu 2
The members of \fI\%BlockExportOptionsNbdBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockExportOptionsVhostUserBlk  (Since: 5.2)
A vhost\-user\-blk block export.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBaddr\fP (\fI\%SocketAddress\fP) \-\- The vhost\-user socket on which to listen.  Both \(aqunix\(aq and
\(aqfd\(aq SocketAddress types are supported.  Passed fds must be UNIX
domain sockets.
.IP \(bu 2
\fBlogical\-block\-size\fP (\fBint\fP, \fIoptional\fP) \-\- Logical block size in bytes.  Defaults to 512
bytes.
.IP \(bu 2
\fBnum\-queues\fP (\fBint\fP, \fIoptional\fP) \-\- Number of request virtqueues.  Must be greater than 0.
Defaults to 1.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  FuseExportAllowOther  (Since: 6.1)
Possible allow_other modes for FUSE exports.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBoff\fP \-\- Do not pass allow_other as a mount option.
.IP \(bu 2
\fBon\fP \-\- Pass allow_other as a mount option.
.IP \(bu 2
\fBauto\fP \-\- Try mounting with allow_other first, and if that fails, retry
without allow_other.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockExportOptionsFuse  (Since: 6.0)
\fIAvailability\fP: \fBCONFIG_FUSE\fP
.sp
Options for exporting a block graph node on some (file) mountpoint
as a raw image.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmountpoint\fP (\fBstring\fP) \-\- Path on which to export the block device via FUSE.
This must point to an existing regular file.
.IP \(bu 2
\fBgrowable\fP (\fBboolean\fP, \fIoptional\fP) \-\- Whether writes beyond the EOF should grow the block node
accordingly.  (default: false)
.IP \(bu 2
\fBallow\-other\fP (\fI\%FuseExportAllowOther\fP, \fIoptional\fP) \-\- If this is off, only qemu\(aqs user is allowed access to
this export.  That cannot be changed even with chmod or chown.
Enabling this option will allow other users access to the export
with the FUSE mount option \(dqallow_other\(dq.  Note that using
allow_other as a non\-root user requires user_allow_other to be
enabled in the global fuse.conf configuration file.  In auto
mode (the default), the FUSE export driver will first attempt to
mount the export with allow_other, and if that fails, try again
without.  (since 6.1; default: auto)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockExportOptionsVduseBlk  (Since: 7.1)
A vduse\-blk block export.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the name of VDUSE device (must be unique across the host).
.IP \(bu 2
\fBnum\-queues\fP (\fBint\fP, \fIoptional\fP) \-\- the number of virtqueues.  Defaults to 1.
.IP \(bu 2
\fBqueue\-size\fP (\fBint\fP, \fIoptional\fP) \-\- the size of virtqueue.  Defaults to 256.
.IP \(bu 2
\fBlogical\-block\-size\fP (\fBint\fP, \fIoptional\fP) \-\- Logical block size in bytes.  Range [512,
PAGE_SIZE] and must be power of 2.  Defaults to 512 bytes.
.IP \(bu 2
\fBserial\fP (\fBstring\fP, \fIoptional\fP) \-\- the serial number of virtio block device.  Defaults to
empty string.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NbdServerAddOptions  (Since: 5.0)
An NBD block export, per legacy nbd\-server\-add command.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The device name or node name of the node to be exported
.IP \(bu 2
\fBwritable\fP (\fBboolean\fP, \fIoptional\fP) \-\- Whether clients should be able to write to the device via
the NBD connection (default false).
.IP \(bu 2
\fBbitmap\fP (\fBstring\fP, \fIoptional\fP) \-\- Also export a single dirty bitmap reachable from \fBdevice\fP,
so the NBD client can use NBD_OPT_SET_META_CONTEXT with the
metadata context name \(dqqemu:dirty\-bitmap:BITMAP\(dq to inspect the
bitmap (since 4.0).
.IP \(bu 2
The members of \fI\%BlockExportOptionsNbdBase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  nbd\-server\-add  (Since: 1.3)
This command is deprecated.
.sp
Export a block node to QEMU\(aqs embedded NBD server.
.sp
The export name will be used as the id for the resulting block
export.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%NbdServerAddOptions\fP\&.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- This command is deprecated.  Use \fBblock\-export\-add\fP
instead.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
if the server is not running
.IP \(bu 2
if an export with the same name already exists
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockExportRemoveMode  (Since: 2.12)
Mode for removing a block export.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBsafe\fP \-\- Remove export if there are no existing connections, fail
otherwise.
.IP \(bu 2
\fBhard\fP \-\- Drop all connections immediately and remove export.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  nbd\-server\-remove  (Since: 2.12)
This command is deprecated.
.sp
Remove NBD export by name.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- Block export id.
.IP \(bu 2
\fBmode\fP (\fI\%BlockExportRemoveMode\fP, \fIoptional\fP) \-\- Mode of command operation.  See \fBBlockExportRemoveMode\fP
description.  Default is \(aqsafe\(aq.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- This command is deprecated.  Use \fBblock\-export\-del\fP
instead.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
if the server is not running
.IP \(bu 2
if export is not found
.IP \(bu 2
if mode is \(aqsafe\(aq and there are existing connections
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  nbd\-server\-stop  (Since: 1.3)
Stop QEMU\(aqs embedded NBD server, and unregister all devices
previously added via \fBnbd\-server\-add\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B Enum  BlockExportType  (Since: 4.2)
An enumeration of block export types
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnbd\fP \-\- NBD export
.IP \(bu 2
\fBvhost\-user\-blk\fP \-\- vhost\-user\-blk export (since 5.2)
.IP \(bu 2
\fBfuse\fP \-\- FUSE export (since: 6.0)
.IP \(bu 2
\fBvduse\-blk\fP \-\- vduse\-blk export (since 7.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockExportOptions  (Since: 4.2)
Describes a block export, i.e. how single node should be exported on
an external interface.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%BlockExportType\fP) \-\- Block export type
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- A unique identifier for the block export (across all export
types)
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP) \-\- The node name of the block node to be exported
(since: 5.2)
.IP \(bu 2
\fBwritable\fP (\fBboolean\fP, \fIoptional\fP) \-\- True if clients should be able to write to the export
(default false)
.IP \(bu 2
\fBwritethrough\fP (\fBboolean\fP, \fIoptional\fP) \-\- If true, caches are flushed after every write request
to the export before completion is signalled.  (since: 5.2;
default: false)
.IP \(bu 2
\fBiothread\fP (\fBstring\fP, \fIoptional\fP) \-\- The name of the iothread object where the export will
run.  The default is to use the thread currently associated with
the block node.  (since: 5.2)
.IP \(bu 2
\fBfixed\-iothread\fP (\fBboolean\fP, \fIoptional\fP) \-\- True prevents the block node from being moved to
another thread while the export is active.  If true and
\fBiothread\fP is given, export creation fails if the block node
cannot be moved to the iothread.  The default is false.
(since: 5.2)
.IP \(bu 2
\fBallow\-inactive\fP (\fBboolean\fP, \fIoptional\fP) \-\- If true, the export allows the exported node to be inactive.
If it is created for an inactive block node, the node remains inactive. If
the export type doesn\(aqt support running on an inactive node, an error is
returned. If false, inactive block nodes are automatically activated before
creating the export and trying to inactivate them later fails.
(since: 10.0; default: false)
.IP \(bu 2
When \fBtype\fP is \fBnbd\fP: The members of \fI\%BlockExportOptionsNbd\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBvhost\-user\-blk\fP: The members of \fI\%BlockExportOptionsVhostUserBlk\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBfuse\fP: The members of \fI\%BlockExportOptionsFuse\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBvduse\-blk\fP: The members of \fI\%BlockExportOptionsVduseBlk\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-export\-add  (Since: 5.2)
Creates a new block export.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%BlockExportOptions\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  block\-export\-del  (Since: 5.2)
Request to remove a block export.  This drops the user\(aqs reference
to the export, but the export may still stay around after this
command returns until the shutdown of the export has completed.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- Block export id.
.IP \(bu 2
\fBmode\fP (\fI\%BlockExportRemoveMode\fP, \fIoptional\fP) \-\- Mode of command operation.  See \fBBlockExportRemoveMode\fP
description.  Default is \(aqsafe\(aq.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
if the export is not found
.IP \(bu 2
if \fBmode\fP is \(aqsafe\(aq and the export is still in use (e.g. by
existing client connections)
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  BLOCK_EXPORT_DELETED  (Since: 5.2)
Emitted when a block export is removed and its id can be reused.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- Block export id.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockExportInfo  (Since: 5.2)
Information about a single block export.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The unique identifier for the block export
.IP \(bu 2
\fBtype\fP (\fI\%BlockExportType\fP) \-\- The block export type
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP) \-\- The node name of the block node that is exported
.IP \(bu 2
\fBshutting\-down\fP (\fBboolean\fP) \-\- True if the export is shutting down (e.g. after a
block\-export\-del command, but before the shutdown has completed)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-block\-exports  (Since: 5.2)
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%BlockExportInfo\fP\fB]\fP \-\- A list of BlockExportInfo describing all block exports
.UNINDENT
.UNINDENT
.SH CHARACTER DEVICES
.INDENT 0.0
.TP
.B Object  ChardevInfo  (Since: 0.14)
Information about a character device.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBlabel\fP (\fBstring\fP) \-\- the label of the character device
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- the filename of the character device
.IP \(bu 2
\fBfrontend\-open\fP (\fBboolean\fP) \-\- shows whether the frontend device attached to this
backend (e.g. with the chardev=... option) is in open or closed
state (since 2.1)
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
\fBfilename\fP is encoded using the QEMU command line character
device encoding.  See the QEMU man page for details.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-chardev  (Since: 0.14)
Return information about current character devices.
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%ChardevInfo\fP\fB]\fP \-\- a list of \fBChardevInfo\fP
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-chardev\(dq }
<\- {
      \(dqreturn\(dq: [
         {
            \(dqlabel\(dq: \(dqcharchannel0\(dq,
            \(dqfilename\(dq: \(dqunix:/var/lib/libvirt/qemu/seabios.rhel6.agent,server=on\(dq,
            \(dqfrontend\-open\(dq: false
         },
         {
            \(dqlabel\(dq: \(dqcharmonitor\(dq,
            \(dqfilename\(dq: \(dqunix:/var/lib/libvirt/qemu/seabios.rhel6.monitor,server=on\(dq,
            \(dqfrontend\-open\(dq: true
         },
         {
            \(dqlabel\(dq: \(dqcharserial0\(dq,
            \(dqfilename\(dq: \(dqpty:/dev/pts/2\(dq,
            \(dqfrontend\-open\(dq: true
         }
      ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevBackendInfo  (Since: 2.0)
Information about a character device backend
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- The backend name
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-chardev\-backends  (Since: 2.0)
Return information about character device backends.
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%ChardevBackendInfo\fP\fB]\fP \-\- a list of \fBChardevBackendInfo\fP
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-chardev\-backends\(dq }
<\- {
      \(dqreturn\(dq:[
         {
            \(dqname\(dq:\(dqudp\(dq
         },
         {
            \(dqname\(dq:\(dqtcp\(dq
         },
         {
            \(dqname\(dq:\(dqunix\(dq
         },
         {
            \(dqname\(dq:\(dqspiceport\(dq
         }
      ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  DataFormat  (Since: 1.4)
An enumeration of data format.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fButf8\fP \-\- Data is a UTF\-8 string (RFC 3629)
.IP \(bu 2
\fBbase64\fP \-\- Data is Base64 encoded binary (RFC 3548)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  ringbuf\-write  (Since: 1.4)
Write to a ring buffer character device.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- the ring buffer character device name
.IP \(bu 2
\fBdata\fP (\fBstring\fP) \-\- data to write
.IP \(bu 2
\fBformat\fP (\fI\%DataFormat\fP, \fIoptional\fP) \-\- 
.sp
data encoding (default \(aqutf8\(aq).
.INDENT 2.0
.IP \(bu 2
base64: data must be base64 encoded text.  Its binary decoding
gets written.
.IP \(bu 2
utf8: data\(aqs UTF\-8 encoding is written
.IP \(bu 2
data itself is always Unicode regardless of format, like any
other string.
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqringbuf\-write\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqfoo\(dq,
                    \(dqdata\(dq: \(dqabcdefgh\(dq,
                    \(dqformat\(dq: \(dqutf8\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  ringbuf\-read  (Since: 1.4)
Read from a ring buffer character device.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- the ring buffer character device name
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- how many bytes to read at most
.IP \(bu 2
\fBformat\fP (\fI\%DataFormat\fP, \fIoptional\fP) \-\- 
.sp
data encoding (default \(aqutf8\(aq).
.INDENT 2.0
.IP \(bu 2
base64: the data read is returned in base64 encoding.
.IP \(bu 2
utf8: the data read is interpreted as UTF\-8.
Bug: can screw up when the buffer contains invalid UTF\-8
sequences, NUL characters, after the ring buffer lost data,
and when reading stops because the size limit is reached.
.IP \(bu 2
The return value is always Unicode regardless of format, like
any other string.
.UNINDENT

.UNINDENT
.TP
.B Return
\fBstring\fP \-\- data read from the device
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqringbuf\-read\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqfoo\(dq,
                    \(dqsize\(dq: 1000,
                    \(dqformat\(dq: \(dqutf8\(dq } }
<\- { \(dqreturn\(dq: \(dqabcdefgh\(dq }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevCommon  (Since: 2.6)
Configuration shared across all chardev backends
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBlogfile\fP (\fBstring\fP, \fIoptional\fP) \-\- The name of a logfile to save output
.IP \(bu 2
\fBlogappend\fP (\fBboolean\fP, \fIoptional\fP) \-\- true to append instead of truncate (default to false to
truncate)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevFile  (Since: 1.4)
Configuration info for file chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBin\fP (\fBstring\fP, \fIoptional\fP) \-\- The name of the input file
.IP \(bu 2
\fBout\fP (\fBstring\fP) \-\- The name of the output file
.IP \(bu 2
\fBappend\fP (\fBboolean\fP, \fIoptional\fP) \-\- Open the file in append mode (default false to truncate)
(Since 2.6)
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevHostdev  (Since: 1.4)
Configuration info for device and pipe chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- The name of the special file for the device, i.e.
/dev/ttyS0 on Unix or COM1: on Windows
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevSocket  (Since: 1.4)
Configuration info for (stream) socket chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBaddr\fP (\fI\%SocketAddressLegacy\fP) \-\- socket address to listen on (server=true) or connect to
(server=false)
.IP \(bu 2
\fBtls\-creds\fP (\fBstring\fP, \fIoptional\fP) \-\- the ID of the TLS credentials object (since 2.6)
.IP \(bu 2
\fBtls\-authz\fP (\fBstring\fP, \fIoptional\fP) \-\- the ID of the QAuthZ authorization object against which
the client\(aqs x509 distinguished name will be validated.  This
object is only resolved at time of use, so can be deleted and
recreated on the fly while the chardev server is active.  If
missing, it will default to denying access (since 4.0)
.IP \(bu 2
\fBserver\fP (\fBboolean\fP, \fIoptional\fP) \-\- create server socket (default: true)
.IP \(bu 2
\fBwait\fP (\fBboolean\fP, \fIoptional\fP) \-\- wait for incoming connection on server sockets (default:
false).  Silently ignored with server: false.  This use is
deprecated.
.IP \(bu 2
\fBnodelay\fP (\fBboolean\fP, \fIoptional\fP) \-\- set TCP_NODELAY socket option (default: false)
.IP \(bu 2
\fBtelnet\fP (\fBboolean\fP, \fIoptional\fP) \-\- enable telnet protocol on server sockets (default: false)
.IP \(bu 2
\fBtn3270\fP (\fBboolean\fP, \fIoptional\fP) \-\- enable tn3270 protocol on server sockets (default: false)
(Since: 2.10)
.IP \(bu 2
\fBwebsocket\fP (\fBboolean\fP, \fIoptional\fP) \-\- enable websocket protocol on server sockets
(default: false) (Since: 3.1)
.IP \(bu 2
\fBreconnect\fP (\fBint\fP, \fIoptional\fP) \-\- For a client socket, if a socket is disconnected, then
attempt a reconnect after the given number of seconds.  Setting
this to zero disables this function.  The use of this member is
deprecated, use \fBreconnect\-ms\fP instead. (default: 0) (Since: 2.2)
.IP \(bu 2
\fBreconnect\-ms\fP (\fBint\fP, \fIoptional\fP) \-\- For a client socket, if a socket is disconnected,
then attempt a reconnect after the given number of milliseconds.
Setting this to zero disables this function.  This member is
mutually exclusive with \fBreconnect\fP\&.
(default: 0) (Since: 9.2)
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- Member \fBreconnect\fP is deprecated.  Use \fBreconnect\-ms\fP
instead.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevUdp  (Since: 1.5)
Configuration info for datagram socket chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBremote\fP (\fI\%SocketAddressLegacy\fP) \-\- remote address
.IP \(bu 2
\fBlocal\fP (\fI\%SocketAddressLegacy\fP, \fIoptional\fP) \-\- local address
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevMux  (Since: 1.5)
Configuration info for mux chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBchardev\fP (\fBstring\fP) \-\- name of the base chardev.
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevHub  (Since: 10.0)
Configuration info for hub chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBchardevs\fP (\fB[\fP\fBstring\fP\fB]\fP) \-\- IDs to be added to this hub (maximum 4 devices).
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevStdio  (Since: 1.5)
Configuration info for stdio chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsignal\fP (\fBboolean\fP, \fIoptional\fP) \-\- Allow signals (such as SIGINT triggered by ^C) be delivered
to qemu.  Default: true.
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevSpiceChannel  (Since: 1.5)
\fIAvailability\fP: \fBCONFIG_SPICE\fP
.sp
Configuration info for spice vm channel chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fBstring\fP) \-\- kind of channel (for example vdagent).
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevSpicePort  (Since: 1.5)
\fIAvailability\fP: \fBCONFIG_SPICE\fP
.sp
Configuration info for spice port chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfqdn\fP (\fBstring\fP) \-\- name of the channel (see docs/spice\-port\-fqdn.txt)
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevDBus  (Since: 7.0)
\fIAvailability\fP: \fBCONFIG_DBUS_DISPLAY\fP
.sp
Configuration info for DBus chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- name of the channel (following docs/spice\-port\-fqdn.txt)
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevVC  (Since: 1.5)
Configuration info for virtual console chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBwidth\fP (\fBint\fP, \fIoptional\fP) \-\- console width, in pixels
.IP \(bu 2
\fBheight\fP (\fBint\fP, \fIoptional\fP) \-\- console height, in pixels
.IP \(bu 2
\fBcols\fP (\fBint\fP, \fIoptional\fP) \-\- console width, in chars
.IP \(bu 2
\fBrows\fP (\fBint\fP, \fIoptional\fP) \-\- console height, in chars
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
The options are only effective when the VNC or SDL
graphical display backend is active.  They are ignored with the
GTK, Spice, VNC and D\-Bus display backends.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevRingbuf  (Since: 1.5)
Configuration info for ring buffer chardevs.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsize\fP (\fBint\fP, \fIoptional\fP) \-\- ring buffer size, must be power of two, default is 65536
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevQemuVDAgent  (Since: 6.1)
\fIAvailability\fP: \fBCONFIG_SPICE_PROTOCOL\fP
.sp
Configuration info for qemu vdagent implementation.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmouse\fP (\fBboolean\fP, \fIoptional\fP) \-\- enable/disable mouse, default is enabled.
.IP \(bu 2
\fBclipboard\fP (\fBboolean\fP, \fIoptional\fP) \-\- enable/disable clipboard, default is disabled.
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevPty  (Since: 9.2)
Configuration info for pty implementation.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP, \fIoptional\fP) \-\- optional path to create a symbolic link that points to the
allocated PTY
.IP \(bu 2
The members of \fI\%ChardevCommon\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  ChardevBackendKind  (Since: 1.4)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBfile\fP \-\- regular files
.IP \(bu 2
\fBserial\fP \-\- serial host device
.IP \(bu 2
\fBparallel\fP \-\- parallel host device
.IP \(bu 2
\fBpipe\fP \-\- pipes (since 1.5)
.IP \(bu 2
\fBsocket\fP \-\- stream socket
.IP \(bu 2
\fBudp\fP \-\- datagram socket (since 1.5)
.IP \(bu 2
\fBpty\fP \-\- pseudo\-terminal
.IP \(bu 2
\fBnull\fP \-\- provides no input, throws away output
.IP \(bu 2
\fBmux\fP \-\- (since 1.5)
.IP \(bu 2
\fBhub\fP \-\- (since 10.0)
.IP \(bu 2
\fBmsmouse\fP \-\- emulated Microsoft serial mouse (since 1.5)
.IP \(bu 2
\fBwctablet\fP \-\- emulated Wacom Penpartner serial tablet (since 2.9)
.IP \(bu 2
\fBbraille\fP \-\- Baum Braille device (since 1.5)
.IP \(bu 2
\fBtestdev\fP \-\- device for test\-suite control (since 2.2)
.IP \(bu 2
\fBstdio\fP \-\- standard I/O (since 1.5)
.IP \(bu 2
\fBconsole\fP \-\- Windows console (since 1.5)
.IP \(bu 2
\fBspicevmc\fP \-\- spice vm channel (since 1.5)
.IP \(bu 2
\fBspiceport\fP \-\- Spice port channel (since 1.5)
.IP \(bu 2
\fBqemu\-vdagent\fP \-\- Spice vdagent (since 6.1)
.IP \(bu 2
\fBdbus\fP \-\- D\-Bus channel (since 7.0)
.IP \(bu 2
\fBvc\fP \-\- virtual console (since 1.5)
.IP \(bu 2
\fBringbuf\fP \-\- memory ring buffer (since 1.6)
.IP \(bu 2
\fBmemory\fP \-\- synonym for \fBringbuf\fP (since 1.5)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- Member \fBmemory\fP is deprecated.  Use \fBringbuf\fP instead.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevFileWrapper  (Since: 1.4)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevFile\fP) \-\- Configuration info for file chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevHostdevWrapper  (Since: 1.4)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevHostdev\fP) \-\- Configuration info for device and pipe chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevSocketWrapper  (Since: 1.4)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevSocket\fP) \-\- Configuration info for (stream) socket chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevUdpWrapper  (Since: 1.5)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevUdp\fP) \-\- Configuration info for datagram socket chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevCommonWrapper  (Since: 2.6)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevCommon\fP) \-\- Configuration shared across all chardev backends
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevMuxWrapper  (Since: 1.5)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevMux\fP) \-\- Configuration info for mux chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevHubWrapper  (Since: 10.0)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevHub\fP) \-\- Configuration info for hub chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevStdioWrapper  (Since: 1.5)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevStdio\fP) \-\- Configuration info for stdio chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevSpiceChannelWrapper  (Since: 1.5)
\fIAvailability\fP: \fBCONFIG_SPICE\fP.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevSpiceChannel\fP) \-\- Configuration info for spice vm channel chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevSpicePortWrapper  (Since: 1.5)
\fIAvailability\fP: \fBCONFIG_SPICE\fP.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevSpicePort\fP) \-\- Configuration info for spice port chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevQemuVDAgentWrapper  (Since: 6.1)
\fIAvailability\fP: \fBCONFIG_SPICE_PROTOCOL\fP.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevQemuVDAgent\fP) \-\- Configuration info for qemu vdagent implementation
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevDBusWrapper  (Since: 7.0)
\fIAvailability\fP: \fBCONFIG_DBUS_DISPLAY\fP.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevDBus\fP) \-\- Configuration info for DBus chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevVCWrapper  (Since: 1.5)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevVC\fP) \-\- Configuration info for virtual console chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevRingbufWrapper  (Since: 1.5)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevRingbuf\fP) \-\- Configuration info for ring buffer chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevPtyWrapper  (Since: 9.2)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%ChardevPty\fP) \-\- Configuration info for pty chardevs
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevBackend  (Since: 1.4)
Configuration info for the new chardev backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%ChardevBackendKind\fP) \-\- backend type
.IP \(bu 2
When \fBtype\fP is \fBfile\fP: The members of \fI\%ChardevFileWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBserial\fP: The members of \fI\%ChardevHostdevWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBparallel\fP: The members of \fI\%ChardevHostdevWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBpipe\fP: The members of \fI\%ChardevHostdevWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBsocket\fP: The members of \fI\%ChardevSocketWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBudp\fP: The members of \fI\%ChardevUdpWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBpty\fP: The members of \fI\%ChardevPtyWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBnull\fP: The members of \fI\%ChardevCommonWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBmux\fP: The members of \fI\%ChardevMuxWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBhub\fP: The members of \fI\%ChardevHubWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBmsmouse\fP: The members of \fI\%ChardevCommonWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBwctablet\fP: The members of \fI\%ChardevCommonWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBbraille\fP: The members of \fI\%ChardevCommonWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBtestdev\fP: The members of \fI\%ChardevCommonWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBstdio\fP: The members of \fI\%ChardevStdioWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBconsole\fP: The members of \fI\%ChardevCommonWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBspicevmc\fP: The members of \fI\%ChardevSpiceChannelWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBspiceport\fP: The members of \fI\%ChardevSpicePortWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBqemu\-vdagent\fP: The members of \fI\%ChardevQemuVDAgentWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBdbus\fP: The members of \fI\%ChardevDBusWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBvc\fP: The members of \fI\%ChardevVCWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBringbuf\fP: The members of \fI\%ChardevRingbufWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBmemory\fP: The members of \fI\%ChardevRingbufWrapper\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ChardevReturn  (Since: 1.4)
Return info about the chardev backend just created.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpty\fP (\fBstring\fP, \fIoptional\fP) \-\- name of the slave pseudoterminal device, present if and only
if a chardev of type \(aqpty\(aq was created
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  chardev\-add  (Since: 1.4)
Add a character device backend
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- the chardev\(aqs ID, must be unique
.IP \(bu 2
\fBbackend\fP (\fI\%ChardevBackend\fP) \-\- backend type and parameters
.UNINDENT
.TP
.B Return
\fI\%ChardevReturn\fP \-\- ChardevReturn.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq : \(dqchardev\-add\(dq,
     \(dqarguments\(dq : { \(dqid\(dq : \(dqfoo\(dq,
                     \(dqbackend\(dq : { \(dqtype\(dq : \(dqnull\(dq, \(dqdata\(dq : {} } } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq : \(dqchardev\-add\(dq,
     \(dqarguments\(dq : { \(dqid\(dq : \(dqbar\(dq,
                     \(dqbackend\(dq : { \(dqtype\(dq : \(dqfile\(dq,
                                   \(dqdata\(dq : { \(dqout\(dq : \(dq/tmp/bar.log\(dq } } } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq : \(dqchardev\-add\(dq,
     \(dqarguments\(dq : { \(dqid\(dq : \(dqbaz\(dq,
                     \(dqbackend\(dq : { \(dqtype\(dq : \(dqpty\(dq, \(dqdata\(dq : {} } } }
<\- { \(dqreturn\(dq: { \(dqpty\(dq : \(dq/dev/pty/42\(dq } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  chardev\-change  (Since: 2.10)
Change a character device backend
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- the chardev\(aqs ID, must exist
.IP \(bu 2
\fBbackend\fP (\fI\%ChardevBackend\fP) \-\- new backend type and parameters
.UNINDENT
.TP
.B Return
\fI\%ChardevReturn\fP \-\- ChardevReturn.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq : \(dqchardev\-change\(dq,
     \(dqarguments\(dq : { \(dqid\(dq : \(dqbaz\(dq,
                     \(dqbackend\(dq : { \(dqtype\(dq : \(dqpty\(dq, \(dqdata\(dq : {} } } }
<\- { \(dqreturn\(dq: { \(dqpty\(dq : \(dq/dev/pty/42\(dq } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> {\(dqexecute\(dq : \(dqchardev\-change\(dq,
    \(dqarguments\(dq : {
        \(dqid\(dq : \(dqcharchannel2\(dq,
        \(dqbackend\(dq : {
            \(dqtype\(dq : \(dqsocket\(dq,
            \(dqdata\(dq : {
                \(dqaddr\(dq : {
                    \(dqtype\(dq : \(dqunix\(dq ,
                    \(dqdata\(dq : {
                        \(dqpath\(dq : \(dq/tmp/charchannel2.socket\(dq
                    }
                 },
                 \(dqserver\(dq : true,
                 \(dqwait\(dq : false }}}}
<\- {\(dqreturn\(dq: {}}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  chardev\-remove  (Since: 1.4)
Remove a character device backend
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- the chardev\(aqs ID, must exist and not be in use
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqchardev\-remove\(dq, \(dqarguments\(dq: { \(dqid\(dq : \(dqfoo\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  chardev\-send\-break  (Since: 2.10)
Send a break to a character device
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- the chardev\(aqs ID, must exist
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqchardev\-send\-break\(dq, \(dqarguments\(dq: { \(dqid\(dq : \(dqfoo\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  VSERPORT_CHANGE  (Since: 2.1)
Emitted when the guest opens or closes a virtio\-serial port.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- device identifier of the virtio\-serial port
.IP \(bu 2
\fBopen\fP (\fBboolean\fP) \-\- true if the guest has opened the virtio\-serial port
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
This event is rate\-limited.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqVSERPORT_CHANGE\(dq,
     \(dqdata\(dq: { \(dqid\(dq: \(dqchannel0\(dq, \(dqopen\(dq: true },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1401385907, \(dqmicroseconds\(dq: 422329 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH DUMP GUEST MEMORY
.INDENT 0.0
.TP
.B Enum  DumpGuestMemoryFormat  (Since: 2.0)
An enumeration of guest\-memory\-dump\(aqs format.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBelf\fP \-\- elf format
.IP \(bu 2
\fBkdump\-zlib\fP \-\- makedumpfile flattened, kdump\-compressed format with
zlib compression
.IP \(bu 2
\fBkdump\-lzo\fP \-\- makedumpfile flattened, kdump\-compressed format with lzo
compression
.IP \(bu 2
\fBkdump\-snappy\fP \-\- makedumpfile flattened, kdump\-compressed format with
snappy compression
.IP \(bu 2
\fBkdump\-raw\-zlib\fP \-\- raw assembled kdump\-compressed format with zlib
compression (since 8.2)
.IP \(bu 2
\fBkdump\-raw\-lzo\fP \-\- raw assembled kdump\-compressed format with lzo
compression (since 8.2)
.IP \(bu 2
\fBkdump\-raw\-snappy\fP \-\- raw assembled kdump\-compressed format with snappy
compression (since 8.2)
.IP \(bu 2
\fBwin\-dmp\fP \-\- Windows full crashdump format, can be used instead of ELF
converting (since 2.13)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  dump\-guest\-memory  (Since: 1.2)
Dump guest\(aqs memory to vmcore.  It is a synchronous operation that
can take very long depending on the amount of guest memory.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBpaging\fP (\fBboolean\fP) \-\- 
.sp
if true, do paging to get guest\(aqs memory mapping.  This
allows using gdb to process the core file.
.sp
IMPORTANT: this option can make QEMU allocate several gigabytes
of RAM.  This can happen for a large guest, or a malicious guest
pretending to be large.
.sp
Also, paging=true has the following limitations:
.INDENT 2.0
.IP 1. 3
The guest may be in a catastrophic state or can have
corrupted memory, which cannot be trusted
.IP 2. 3
The guest can be in real\-mode even if paging is enabled.  For
example, the guest uses ACPI to sleep, and ACPI sleep state
goes in real\-mode
.IP 3. 3
Currently only supported on i386 and x86_64.
.UNINDENT

.IP \(bu 2
\fBprotocol\fP (\fBstring\fP) \-\- 
.sp
the filename or file descriptor of the vmcore.  The
supported protocols are:
.INDENT 2.0
.IP 1. 3
file: the protocol starts with \(dqfile:\(dq, and the following
string is the file\(aqs path.
.IP 2. 3
fd: the protocol starts with \(dqfd:\(dq, and the following string
is the fd\(aqs name.
.UNINDENT

.IP \(bu 2
\fBdetach\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, QMP will return immediately rather than waiting
for the dump to finish.  The user can track progress using
\(dqquery\-dump\(dq.  (since 2.6).
.IP \(bu 2
\fBbegin\fP (\fBint\fP, \fIoptional\fP) \-\- if specified, the starting physical address.
.IP \(bu 2
\fBlength\fP (\fBint\fP, \fIoptional\fP) \-\- if specified, the memory size, in bytes.  If you don\(aqt want
to dump all guest\(aqs memory, please specify the start \fBbegin\fP and
\fBlength\fP
.IP \(bu 2
\fBformat\fP (\fI\%DumpGuestMemoryFormat\fP, \fIoptional\fP) \-\- if specified, the format of guest memory dump.  But non\-elf
format is conflict with paging and filter, ie.  \fBpaging\fP, \fBbegin\fP
and \fBlength\fP is not allowed to be specified with non\-elf \fBformat\fP
at the same time (since 2.0)
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
All boolean arguments default to false.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqdump\-guest\-memory\(dq,
     \(dqarguments\(dq: { \(dqpaging\(dq: false, \(dqprotocol\(dq: \(dqfd:dump\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  DumpStatus  (Since: 2.6)
Describe the status of a long\-running background guest memory dump.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnone\fP \-\- no dump\-guest\-memory has started yet.
.IP \(bu 2
\fBactive\fP \-\- there is one dump running in background.
.IP \(bu 2
\fBcompleted\fP \-\- the last dump has finished successfully.
.IP \(bu 2
\fBfailed\fP \-\- the last dump has failed.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DumpQueryResult  (Since: 2.6)
The result format for \(aqquery\-dump\(aq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBstatus\fP (\fI\%DumpStatus\fP) \-\- enum of \fBDumpStatus\fP, which shows current dump status
.IP \(bu 2
\fBcompleted\fP (\fBint\fP) \-\- bytes written in latest dump (uncompressed)
.IP \(bu 2
\fBtotal\fP (\fBint\fP) \-\- total bytes to be written in latest dump (uncompressed)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-dump  (Since: 2.6)
Query latest dump status.
.INDENT 7.0
.TP
.B Return
\fI\%DumpQueryResult\fP \-\- A \fBDumpStatus\fP object showing the dump status.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-dump\(dq }
<\- { \(dqreturn\(dq: { \(dqstatus\(dq: \(dqactive\(dq, \(dqcompleted\(dq: 1024000,
                 \(dqtotal\(dq: 2048000 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  DUMP_COMPLETED  (Since: 2.6)
Emitted when background dump has completed
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBresult\fP (\fI\%DumpQueryResult\fP) \-\- final dump status
.IP \(bu 2
\fBerror\fP (\fBstring\fP, \fIoptional\fP) \-\- human\-readable error string that provides hint on why dump
failed.  Only presents on failure.  The user should not try to
interpret the error string.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqDUMP_COMPLETED\(dq,
     \(dqdata\(dq: { \(dqresult\(dq: { \(dqtotal\(dq: 1090650112, \(dqstatus\(dq: \(dqcompleted\(dq,
                           \(dqcompleted\(dq: 1090650112 } },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1648244171, \(dqmicroseconds\(dq: 950316 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DumpGuestMemoryCapability  (Since: 2.0)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBformats\fP (\fB[\fP\fI\%DumpGuestMemoryFormat\fP\fB]\fP) \-\- the available formats for dump\-guest\-memory
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-dump\-guest\-memory\-capability  (Since: 2.0)
Return the available formats for dump\-guest\-memory
.INDENT 7.0
.TP
.B Return
\fI\%DumpGuestMemoryCapability\fP \-\- A \fBDumpGuestMemoryCapability\fP object listing available
formats for dump\-guest\-memory
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-dump\-guest\-memory\-capability\(dq }
<\- { \(dqreturn\(dq: { \(dqformats\(dq:
                 [\(dqelf\(dq, \(dqkdump\-zlib\(dq, \(dqkdump\-lzo\(dq, \(dqkdump\-snappy\(dq] } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH NET DEVICES
.INDENT 0.0
.TP
.B Command  set_link  (Since: 0.14)
Sets the link status of a virtual network adapter.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the device name of the virtual network adapter
.IP \(bu 2
\fBup\fP (\fBboolean\fP) \-\- true to set the link status to be up
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBname\fP is not a valid network device, DeviceNotFound
.UNINDENT

.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
Not all network adapters support setting link status.
This command will succeed even if the network adapter does not
support link status notification.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqset_link\(dq,
     \(dqarguments\(dq: { \(dqname\(dq: \(dqe1000.0\(dq, \(dqup\(dq: false } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  netdev_add  (Since: 0.14)
Add a network backend.
.sp
Additional arguments depend on the type.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%Netdev\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBtype\fP is not a valid network backend, DeviceNotFound
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqnetdev_add\(dq,
     \(dqarguments\(dq: { \(dqtype\(dq: \(dquser\(dq, \(dqid\(dq: \(dqnetdev1\(dq,
                    \(dqdnssearch\(dq: [ { \(dqstr\(dq: \(dqexample.org\(dq } ] } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  netdev_del  (Since: 0.14)
Remove a network backend.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- the name of the network backend to remove
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBid\fP is not a valid network backend, DeviceNotFound
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqnetdev_del\(dq, \(dqarguments\(dq: { \(dqid\(dq: \(dqnetdev1\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NetLegacyNicOptions  (Since: 1.2)
Create a new Network Interface Card.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnetdev\fP (\fBstring\fP, \fIoptional\fP) \-\- id of \-netdev to connect to
.IP \(bu 2
\fBmacaddr\fP (\fBstring\fP, \fIoptional\fP) \-\- MAC address
.IP \(bu 2
\fBmodel\fP (\fBstring\fP, \fIoptional\fP) \-\- device model (e1000, rtl8139, virtio etc.)
.IP \(bu 2
\fBaddr\fP (\fBstring\fP, \fIoptional\fP) \-\- PCI device address
.IP \(bu 2
\fBvectors\fP (\fBint\fP, \fIoptional\fP) \-\- number of MSI\-x vectors, 0 to disable MSI\-X
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  String  (Since: 1.2)
A fat type wrapping \(aqstr\(aq, to be embedded in lists.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBstr\fP (\fBstring\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NetdevUserOptions  (Since: 1.2)
Use the user mode network stack which requires no administrator
privilege to run.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBhostname\fP (\fBstring\fP, \fIoptional\fP) \-\- client hostname reported by the builtin DHCP server
.IP \(bu 2
\fBrestrict\fP (\fBboolean\fP, \fIoptional\fP) \-\- isolate the guest from the host
.IP \(bu 2
\fBipv4\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether to support IPv4, default true for enabled (since 2.6)
.IP \(bu 2
\fBipv6\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether to support IPv6, default true for enabled (since 2.6)
.IP \(bu 2
\fBip\fP (\fBstring\fP, \fIoptional\fP) \-\- legacy parameter, use net= instead
.IP \(bu 2
\fBnet\fP (\fBstring\fP, \fIoptional\fP) \-\- IP network address that the guest will see, in the form
addr[/netmask] The netmask is optional, and can be either in the
form a.b.c.d or as a number of valid top\-most bits.  Default is
10.0.2.0/24.
.IP \(bu 2
\fBhost\fP (\fBstring\fP, \fIoptional\fP) \-\- guest\-visible address of the host
.IP \(bu 2
\fBtftp\fP (\fBstring\fP, \fIoptional\fP) \-\- root directory of the built\-in TFTP server
.IP \(bu 2
\fBbootfile\fP (\fBstring\fP, \fIoptional\fP) \-\- BOOTP filename, for use with tftp=
.IP \(bu 2
\fBdhcpstart\fP (\fBstring\fP, \fIoptional\fP) \-\- the first of the 16 IPs the built\-in DHCP server can
assign
.IP \(bu 2
\fBdns\fP (\fBstring\fP, \fIoptional\fP) \-\- guest\-visible address of the virtual nameserver
.IP \(bu 2
\fBdnssearch\fP (\fB[\fP\fI\%String\fP\fB]\fP, \fIoptional\fP) \-\- list of DNS suffixes to search, passed as DHCP option to
the guest
.IP \(bu 2
\fBdomainname\fP (\fBstring\fP, \fIoptional\fP) \-\- guest\-visible domain name of the virtual nameserver
(since 3.0)
.IP \(bu 2
\fBipv6\-prefix\fP (\fBstring\fP, \fIoptional\fP) \-\- IPv6 network prefix (default is fec0::) (since 2.6).
The network prefix is given in the usual hexadecimal IPv6
address notation.
.IP \(bu 2
\fBipv6\-prefixlen\fP (\fBint\fP, \fIoptional\fP) \-\- IPv6 network prefix length (default is 64) (since
2.6)
.IP \(bu 2
\fBipv6\-host\fP (\fBstring\fP, \fIoptional\fP) \-\- guest\-visible IPv6 address of the host (since 2.6)
.IP \(bu 2
\fBipv6\-dns\fP (\fBstring\fP, \fIoptional\fP) \-\- guest\-visible IPv6 address of the virtual nameserver
(since 2.6)
.IP \(bu 2
\fBsmb\fP (\fBstring\fP, \fIoptional\fP) \-\- root directory of the built\-in SMB server
.IP \(bu 2
\fBsmbserver\fP (\fBstring\fP, \fIoptional\fP) \-\- IP address of the built\-in SMB server
.IP \(bu 2
\fBhostfwd\fP (\fB[\fP\fI\%String\fP\fB]\fP, \fIoptional\fP) \-\- redirect incoming TCP or UDP host connections to guest
endpoints
.IP \(bu 2
\fBguestfwd\fP (\fB[\fP\fI\%String\fP\fB]\fP, \fIoptional\fP) \-\- forward guest TCP connections
.IP \(bu 2
\fBtftp\-server\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- RFC2132 \(dqTFTP server name\(dq string (Since 3.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NetdevTapOptions  (Since: 1.2)
Used to configure a host TAP network interface backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBifname\fP (\fBstring\fP, \fIoptional\fP) \-\- interface name
.IP \(bu 2
\fBfd\fP (\fBstring\fP, \fIoptional\fP) \-\- file descriptor of an already opened tap
.IP \(bu 2
\fBfds\fP (\fBstring\fP, \fIoptional\fP) \-\- multiple file descriptors of already opened multiqueue capable
tap
.IP \(bu 2
\fBscript\fP (\fBstring\fP, \fIoptional\fP) \-\- script to initialize the interface
.IP \(bu 2
\fBdownscript\fP (\fBstring\fP, \fIoptional\fP) \-\- script to shut down the interface
.IP \(bu 2
\fBbr\fP (\fBstring\fP, \fIoptional\fP) \-\- bridge name (since 2.8)
.IP \(bu 2
\fBhelper\fP (\fBstring\fP, \fIoptional\fP) \-\- command to execute to configure bridge
.IP \(bu 2
\fBsndbuf\fP (\fBint\fP, \fIoptional\fP) \-\- send buffer limit.  Understands [TGMKkb] suffixes.
.IP \(bu 2
\fBvnet_hdr\fP (\fBboolean\fP, \fIoptional\fP) \-\- enable the IFF_VNET_HDR flag on the tap interface
.IP \(bu 2
\fBvhost\fP (\fBboolean\fP, \fIoptional\fP) \-\- enable vhost\-net network accelerator
.IP \(bu 2
\fBvhostfd\fP (\fBstring\fP, \fIoptional\fP) \-\- file descriptor of an already opened vhost net device
.IP \(bu 2
\fBvhostfds\fP (\fBstring\fP, \fIoptional\fP) \-\- file descriptors of multiple already opened vhost net
devices
.IP \(bu 2
\fBvhostforce\fP (\fBboolean\fP, \fIoptional\fP) \-\- vhost on for non\-MSIX virtio guests
.IP \(bu 2
\fBqueues\fP (\fBint\fP, \fIoptional\fP) \-\- number of queues to be created for multiqueue capable tap
.IP \(bu 2
\fBpoll\-us\fP (\fBint\fP, \fIoptional\fP) \-\- maximum number of microseconds that could be spent on busy
polling for tap (since 2.7)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NetdevSocketOptions  (Since: 1.2)
Socket netdevs are used to establish a network connection to another
QEMU virtual machine via a TCP socket.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfd\fP (\fBstring\fP, \fIoptional\fP) \-\- file descriptor of an already opened socket
.IP \(bu 2
\fBlisten\fP (\fBstring\fP, \fIoptional\fP) \-\- port number, and optional hostname, to listen on
.IP \(bu 2
\fBconnect\fP (\fBstring\fP, \fIoptional\fP) \-\- port number, and optional hostname, to connect to
.IP \(bu 2
\fBmcast\fP (\fBstring\fP, \fIoptional\fP) \-\- UDP multicast address and port number
.IP \(bu 2
\fBlocaladdr\fP (\fBstring\fP, \fIoptional\fP) \-\- source address and port for multicast and udp packets
.IP \(bu 2
\fBudp\fP (\fBstring\fP, \fIoptional\fP) \-\- UDP unicast address and port number
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NetdevL2TPv3Options  (Since: 2.1)
Configure an Ethernet over L2TPv3 tunnel.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsrc\fP (\fBstring\fP) \-\- source address
.IP \(bu 2
\fBdst\fP (\fBstring\fP) \-\- destination address
.IP \(bu 2
\fBsrcport\fP (\fBstring\fP, \fIoptional\fP) \-\- source port \- mandatory for udp, optional for ip
.IP \(bu 2
\fBdstport\fP (\fBstring\fP, \fIoptional\fP) \-\- destination port \- mandatory for udp, optional for ip
.IP \(bu 2
\fBipv6\fP (\fBboolean\fP, \fIoptional\fP) \-\- force the use of ipv6
.IP \(bu 2
\fBudp\fP (\fBboolean\fP, \fIoptional\fP) \-\- use the udp version of l2tpv3 encapsulation
.IP \(bu 2
\fBcookie64\fP (\fBboolean\fP, \fIoptional\fP) \-\- use 64 bit cookies
.IP \(bu 2
\fBcounter\fP (\fBboolean\fP, \fIoptional\fP) \-\- have sequence counter
.IP \(bu 2
\fBpincounter\fP (\fBboolean\fP, \fIoptional\fP) \-\- pin sequence counter to zero \- workaround for buggy
implementations or networks with packet reorder
.IP \(bu 2
\fBtxcookie\fP (\fBint\fP, \fIoptional\fP) \-\- 32 or 64 bit transmit cookie
.IP \(bu 2
\fBrxcookie\fP (\fBint\fP, \fIoptional\fP) \-\- 32 or 64 bit receive cookie
.IP \(bu 2
\fBtxsession\fP (\fBint\fP) \-\- 32 bit transmit session
.IP \(bu 2
\fBrxsession\fP (\fBint\fP, \fIoptional\fP) \-\- 32 bit receive session \- if not specified set to the
same value as transmit
.IP \(bu 2
\fBoffset\fP (\fBint\fP, \fIoptional\fP) \-\- additional offset \- allows the insertion of additional
application\-specific data before the packet payload
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NetdevVdeOptions  (Since: 1.2)
Connect to a vde switch running on the host.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsock\fP (\fBstring\fP, \fIoptional\fP) \-\- socket path
.IP \(bu 2
\fBport\fP (\fBint\fP, \fIoptional\fP) \-\- port number
.IP \(bu 2
\fBgroup\fP (\fBstring\fP, \fIoptional\fP) \-\- group owner of socket
.IP \(bu 2
\fBmode\fP (\fBint\fP, \fIoptional\fP) \-\- permissions for socket
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NetdevBridgeOptions  (Since: 1.2)
Connect a host TAP network interface to a host bridge device.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBbr\fP (\fBstring\fP, \fIoptional\fP) \-\- bridge name
.IP \(bu 2
\fBhelper\fP (\fBstring\fP, \fIoptional\fP) \-\- command to execute to configure bridge
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NetdevHubPortOptions  (Since: 1.2)
Connect two or more net clients through a software hub.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBhubid\fP (\fBint\fP) \-\- hub identifier number
.IP \(bu 2
\fBnetdev\fP (\fBstring\fP, \fIoptional\fP) \-\- used to connect hub to a netdev instead of a device (since
2.12)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NetdevNetmapOptions  (Since: 2.0)
Connect a client to a netmap\-enabled NIC or to a VALE switch port
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBifname\fP (\fBstring\fP) \-\- Either the name of an existing network interface supported
by netmap, or the name of a VALE port (created on the fly).  A
VALE port name is in the form \(aqvaleXXX:YYY\(aq, where XXX and YYY
are non\-negative integers.  XXX identifies a switch and YYY
identifies a port of the switch.  VALE ports having the same XXX
are therefore connected to the same switch.
.IP \(bu 2
\fBdevname\fP (\fBstring\fP, \fIoptional\fP) \-\- path of the netmap device (default: \(aq/dev/netmap\(aq).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  AFXDPMode  (Since: 8.2)
\fIAvailability\fP: \fBCONFIG_AF_XDP\fP
.sp
Attach mode for a default XDP program
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBskb\fP \-\- generic mode, no driver support necessary
.IP \(bu 2
\fBnative\fP \-\- DRV mode, program is attached to a driver, packets are
passed to the socket without allocation of skb.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NetdevAFXDPOptions  (Since: 8.2)
\fIAvailability\fP: \fBCONFIG_AF_XDP\fP
.sp
AF_XDP network backend
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBifname\fP (\fBstring\fP) \-\- The name of an existing network interface.
.IP \(bu 2
\fBmode\fP (\fI\%AFXDPMode\fP, \fIoptional\fP) \-\- Attach mode for a default XDP program.  If not specified,
then \(aqnative\(aq will be tried first, then \(aqskb\(aq.
.IP \(bu 2
\fBforce\-copy\fP (\fBboolean\fP, \fIoptional\fP) \-\- Force XDP copy mode even if device supports zero\-copy.
(default: false)
.IP \(bu 2
\fBqueues\fP (\fBint\fP, \fIoptional\fP) \-\- number of queues to be used for multiqueue interfaces
(default: 1).
.IP \(bu 2
\fBstart\-queue\fP (\fBint\fP, \fIoptional\fP) \-\- Use \fBqueues\fP starting from this queue number
(default: 0).
.IP \(bu 2
\fBinhibit\fP (\fBboolean\fP, \fIoptional\fP) \-\- Don\(aqt load a default XDP program, use one already loaded
to the interface (default: false).  Requires \fBsock\-fds\fP\&.
.IP \(bu 2
\fBsock\-fds\fP (\fBstring\fP, \fIoptional\fP) \-\- A colon (:) separated list of file descriptors for
already open but not bound AF_XDP sockets in the queue order.
One fd per queue.  These descriptors should already be added
into XDP socket map for corresponding queues.  Requires
\fBinhibit\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NetdevVhostUserOptions  (Since: 2.1)
Vhost\-user network backend
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBchardev\fP (\fBstring\fP) \-\- name of a unix socket chardev
.IP \(bu 2
\fBvhostforce\fP (\fBboolean\fP, \fIoptional\fP) \-\- vhost on for non\-MSIX virtio guests (default: false).
.IP \(bu 2
\fBqueues\fP (\fBint\fP, \fIoptional\fP) \-\- number of queues to be created for multiqueue vhost\-user
(default: 1) (Since 2.5)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NetdevVhostVDPAOptions  (Since: 5.1)
Vhost\-vdpa network backend
.sp
vDPA device is a device that uses a datapath which complies with the
virtio specifications with a vendor specific control path.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBvhostdev\fP (\fBstring\fP, \fIoptional\fP) \-\- path of vhost\-vdpa device (default:\(aq/dev/vhost\-vdpa\-0\(aq)
.IP \(bu 2
\fBvhostfd\fP (\fBstring\fP, \fIoptional\fP) \-\- file descriptor of an already opened vhost vdpa device
.IP \(bu 2
\fBqueues\fP (\fBint\fP, \fIoptional\fP) \-\- number of queues to be created for multiqueue vhost\-vdpa
(default: 1)
.IP \(bu 2
\fBx\-svq\fP (\fBboolean\fP, \fIoptional\fP) \-\- Start device with (experimental) shadow virtqueue.  (Since
7.1) (default: false)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- Member \fBx\-svq\fP is experimental.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NetdevVmnetHostOptions  (Since: 7.1)
\fIAvailability\fP: \fBCONFIG_VMNET\fP
.sp
vmnet (host mode) network backend.
.sp
Allows the vmnet interface to communicate with other vmnet
interfaces that are in host mode and also with the host.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBstart\-address\fP (\fBstring\fP, \fIoptional\fP) \-\- The starting IPv4 address to use for the interface.
Must be in the private IP range (RFC 1918).  Must be specified
along with \fBend\-address\fP and \fBsubnet\-mask\fP\&.  This address is used
as the gateway address.  The subsequent address up to and
including end\-address are placed in the DHCP pool.
.IP \(bu 2
\fBend\-address\fP (\fBstring\fP, \fIoptional\fP) \-\- The DHCP IPv4 range end address to use for the
interface.  Must be in the private IP range (RFC 1918).  Must be
specified along with \fBstart\-address\fP and \fBsubnet\-mask\fP\&.
.IP \(bu 2
\fBsubnet\-mask\fP (\fBstring\fP, \fIoptional\fP) \-\- The IPv4 subnet mask to use on the interface.  Must be
specified along with \fBstart\-address\fP and \fBsubnet\-mask\fP\&.
.IP \(bu 2
\fBisolated\fP (\fBboolean\fP, \fIoptional\fP) \-\- Enable isolation for this interface.  Interface isolation
ensures that vmnet interface is not able to communicate with any
other vmnet interfaces.  Only communication with host is
allowed.  Requires at least macOS Big Sur 11.0.
.IP \(bu 2
\fBnet\-uuid\fP (\fBstring\fP, \fIoptional\fP) \-\- The identifier (UUID) to uniquely identify the isolated
network vmnet interface should be added to.  If set, no DHCP
service is provided for this interface and network communication
is allowed only with other interfaces added to this network
identified by the UUID.  Requires at least macOS Big Sur 11.0.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NetdevVmnetSharedOptions  (Since: 7.1)
\fIAvailability\fP: \fBCONFIG_VMNET\fP
.sp
vmnet (shared mode) network backend.
.sp
Allows traffic originating from the vmnet interface to reach the
Internet through a network address translator (NAT).  The vmnet
interface can communicate with the host and with other shared mode
interfaces on the same subnet.  If no DHCP settings, subnet mask and
IPv6 prefix specified, the interface can communicate with any of
other interfaces in shared mode.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBstart\-address\fP (\fBstring\fP, \fIoptional\fP) \-\- The starting IPv4 address to use for the interface.
Must be in the private IP range (RFC 1918).  Must be specified
along with \fBend\-address\fP and \fBsubnet\-mask\fP\&.  This address is used
as the gateway address.  The subsequent address up to and
including end\-address are placed in the DHCP pool.
.IP \(bu 2
\fBend\-address\fP (\fBstring\fP, \fIoptional\fP) \-\- The DHCP IPv4 range end address to use for the
interface.  Must be in the private IP range (RFC 1918).  Must be
specified along with \fBstart\-address\fP and \fBsubnet\-mask\fP\&.
.IP \(bu 2
\fBsubnet\-mask\fP (\fBstring\fP, \fIoptional\fP) \-\- The IPv4 subnet mask to use on the interface.  Must be
specified along with \fBstart\-address\fP and \fBsubnet\-mask\fP\&.
.IP \(bu 2
\fBisolated\fP (\fBboolean\fP, \fIoptional\fP) \-\- Enable isolation for this interface.  Interface isolation
ensures that vmnet interface is not able to communicate with any
other vmnet interfaces.  Only communication with host is
allowed.  Requires at least macOS Big Sur 11.0.
.IP \(bu 2
\fBnat66\-prefix\fP (\fBstring\fP, \fIoptional\fP) \-\- The IPv6 prefix to use into guest network.  Must be a
unique local address i.e. start with fd00::/8 and have length of
64.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NetdevVmnetBridgedOptions  (Since: 7.1)
\fIAvailability\fP: \fBCONFIG_VMNET\fP
.sp
vmnet (bridged mode) network backend.
.sp
Bridges the vmnet interface with a physical network interface.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBifname\fP (\fBstring\fP) \-\- The name of the physical interface to be bridged.
.IP \(bu 2
\fBisolated\fP (\fBboolean\fP, \fIoptional\fP) \-\- Enable isolation for this interface.  Interface isolation
ensures that vmnet interface is not able to communicate with any
other vmnet interfaces.  Only communication with host is
allowed.  Requires at least macOS Big Sur 11.0.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NetdevStreamOptions  (Since: 7.2)
Configuration info for stream socket netdev
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBaddr\fP (\fI\%SocketAddress\fP) \-\- socket address to listen on (server=true) or connect to
(server=false)
.IP \(bu 2
\fBserver\fP (\fBboolean\fP, \fIoptional\fP) \-\- create server socket (default: false)
.IP \(bu 2
\fBreconnect\fP (\fBint\fP, \fIoptional\fP) \-\- For a client socket, if a socket is disconnected, then
attempt a reconnect after the given number of seconds.  Setting
this to zero disables this function.  (default: 0) (since 8.0)
.IP \(bu 2
\fBreconnect\-ms\fP (\fBint\fP, \fIoptional\fP) \-\- For a client socket, if a socket is disconnected, then
attempt a reconnect after the given number of milliseconds.  Setting
this to zero disables this function.  This member is mutually
exclusive with \fBreconnect\fP\&.  (default: 0) (Since: 9.2)
.UNINDENT
.UNINDENT
.sp
Only SocketAddress types \(aqunix\(aq, \(aqinet\(aq and \(aqfd\(aq are supported.
.INDENT 7.0
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- Member \fBreconnect\fP is deprecated.  Use \fBreconnect\-ms\fP
instead.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NetdevDgramOptions  (Since: 7.2)
Configuration info for datagram socket netdev.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBremote\fP (\fI\%SocketAddress\fP, \fIoptional\fP) \-\- remote address
.IP \(bu 2
\fBlocal\fP (\fI\%SocketAddress\fP, \fIoptional\fP) \-\- local address
.UNINDENT
.UNINDENT
.sp
Only SocketAddress types \(aqunix\(aq, \(aqinet\(aq and \(aqfd\(aq are supported.
.sp
If remote address is present and it\(aqs a multicast address, local
address is optional.  Otherwise local address is required and remote
address is optional.
.SH VALID PARAMETERS COMBINATION TABLE
.TS
center;
|l|l|l|.
_
T{
remote
T}	T{
local
T}	T{
okay?
T}
_
T{
absent
T}	T{
absent
T}	T{
no
T}
_
T{
absent
T}	T{
not fd
T}	T{
no
T}
_
T{
absent
T}	T{
fd
T}	T{
yes
T}
_
T{
multicast
T}	T{
absent
T}	T{
yes
T}
_
T{
multicast
T}	T{
present
T}	T{
yes
T}
_
T{
not multicast
T}	T{
absent
T}	T{
no
T}
_
T{
not multicast
T}	T{
present
T}	T{
yes
T}
_
.TE
.UNINDENT
.INDENT 0.0
.TP
.B Enum  NetClientDriver  (Since: 2.7)
Available netdev drivers.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBl2tpv3\fP \-\- since 2.1
.IP \(bu 2
\fBvhost\-vdpa\fP \-\- since 5.1
.IP \(bu 2
\fBvmnet\-host\fP \-\- since 7.1
.IP \(bu 2
\fBvmnet\-shared\fP \-\- since 7.1
.IP \(bu 2
\fBvmnet\-bridged\fP \-\- since 7.1
.IP \(bu 2
\fBstream\fP \-\- since 7.2
.IP \(bu 2
\fBdgram\fP \-\- since 7.2
.IP \(bu 2
\fBaf\-xdp\fP \-\- since 8.2
.IP \(bu 2
\fBnone\fP \-\- Not documented
.IP \(bu 2
\fBnic\fP \-\- Not documented
.IP \(bu 2
\fBuser\fP \-\- Not documented
.IP \(bu 2
\fBtap\fP \-\- Not documented
.IP \(bu 2
\fBsocket\fP \-\- Not documented
.IP \(bu 2
\fBvde\fP \-\- Not documented
.IP \(bu 2
\fBbridge\fP \-\- Not documented
.IP \(bu 2
\fBhubport\fP \-\- Not documented
.IP \(bu 2
\fBnetmap\fP \-\- Not documented
.IP \(bu 2
\fBvhost\-user\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  Netdev  (Since: 1.2)
Captures the configuration of a network device.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- identifier for monitor commands.
.IP \(bu 2
\fBtype\fP (\fI\%NetClientDriver\fP) \-\- Specify the driver used for interpreting remaining arguments.
.IP \(bu 2
When \fBtype\fP is \fBnic\fP: The members of \fI\%NetLegacyNicOptions\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBuser\fP: The members of \fI\%NetdevUserOptions\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBtap\fP: The members of \fI\%NetdevTapOptions\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBl2tpv3\fP: The members of \fI\%NetdevL2TPv3Options\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBsocket\fP: The members of \fI\%NetdevSocketOptions\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBstream\fP: The members of \fI\%NetdevStreamOptions\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBdgram\fP: The members of \fI\%NetdevDgramOptions\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBvde\fP: The members of \fI\%NetdevVdeOptions\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBbridge\fP: The members of \fI\%NetdevBridgeOptions\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBhubport\fP: The members of \fI\%NetdevHubPortOptions\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBnetmap\fP: The members of \fI\%NetdevNetmapOptions\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBaf\-xdp\fP: The members of \fI\%NetdevAFXDPOptions\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBvhost\-user\fP: The members of \fI\%NetdevVhostUserOptions\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBvhost\-vdpa\fP: The members of \fI\%NetdevVhostVDPAOptions\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBvmnet\-host\fP: The members of \fI\%NetdevVmnetHostOptions\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBvmnet\-shared\fP: The members of \fI\%NetdevVmnetSharedOptions\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBvmnet\-bridged\fP: The members of \fI\%NetdevVmnetBridgedOptions\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  RxState  (Since: 1.6)
Packets receiving state
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnormal\fP \-\- filter assigned packets according to the mac\-table
.IP \(bu 2
\fBnone\fP \-\- don\(aqt receive any assigned packet
.IP \(bu 2
\fBall\fP \-\- receive all assigned packets
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RxFilterInfo  (Since: 1.6)
Rx\-filter information for a NIC.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- net client name
.IP \(bu 2
\fBpromiscuous\fP (\fBboolean\fP) \-\- whether promiscuous mode is enabled
.IP \(bu 2
\fBmulticast\fP (\fI\%RxState\fP) \-\- multicast receive state
.IP \(bu 2
\fBunicast\fP (\fI\%RxState\fP) \-\- unicast receive state
.IP \(bu 2
\fBvlan\fP (\fI\%RxState\fP) \-\- vlan receive state (Since 2.0)
.IP \(bu 2
\fBbroadcast\-allowed\fP (\fBboolean\fP) \-\- whether to receive broadcast
.IP \(bu 2
\fBmulticast\-overflow\fP (\fBboolean\fP) \-\- multicast table is overflowed or not
.IP \(bu 2
\fBunicast\-overflow\fP (\fBboolean\fP) \-\- unicast table is overflowed or not
.IP \(bu 2
\fBmain\-mac\fP (\fBstring\fP) \-\- the main macaddr string
.IP \(bu 2
\fBvlan\-table\fP (\fB[\fP\fBint\fP\fB]\fP) \-\- a list of active vlan id
.IP \(bu 2
\fBunicast\-table\fP (\fB[\fP\fBstring\fP\fB]\fP) \-\- a list of unicast macaddr string
.IP \(bu 2
\fBmulticast\-table\fP (\fB[\fP\fBstring\fP\fB]\fP) \-\- a list of multicast macaddr string
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-rx\-filter  (Since: 1.6)
Return rx\-filter information for all NICs (or for the given NIC).
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP, \fIoptional\fP) \-\- net client name
.UNINDENT
.TP
.B Return
\fB[\fP\fI\%RxFilterInfo\fP\fB]\fP \-\- list of \fBRxFilterInfo\fP for all NICs (or for the given NIC).
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
if the given \fBname\fP doesn\(aqt exist
.IP \(bu 2
if the given NIC doesn\(aqt support rx\-filter querying
.IP \(bu 2
if the given net client isn\(aqt a NIC
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-rx\-filter\(dq, \(dqarguments\(dq: { \(dqname\(dq: \(dqvnet0\(dq } }
<\- { \(dqreturn\(dq: [
        {
            \(dqpromiscuous\(dq: true,
            \(dqname\(dq: \(dqvnet0\(dq,
            \(dqmain\-mac\(dq: \(dq52:54:00:12:34:56\(dq,
            \(dqunicast\(dq: \(dqnormal\(dq,
            \(dqvlan\(dq: \(dqnormal\(dq,
            \(dqvlan\-table\(dq: [
                4,
                0
            ],
            \(dqunicast\-table\(dq: [
            ],
            \(dqmulticast\(dq: \(dqnormal\(dq,
            \(dqmulticast\-overflow\(dq: false,
            \(dqunicast\-overflow\(dq: false,
            \(dqmulticast\-table\(dq: [
                \(dq01:00:5e:00:00:01\(dq,
                \(dq33:33:00:00:00:01\(dq,
                \(dq33:33:ff:12:34:56\(dq
            ],
            \(dqbroadcast\-allowed\(dq: false
        }
      ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  NIC_RX_FILTER_CHANGED  (Since: 1.6)
Emitted once until the \(aqquery\-rx\-filter\(aq command is executed, the
first event will always be emitted
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP, \fIoptional\fP) \-\- net client name
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- device path
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqNIC_RX_FILTER_CHANGED\(dq,
     \(dqdata\(dq: { \(dqname\(dq: \(dqvnet0\(dq,
               \(dqpath\(dq: \(dq/machine/peripheral/vnet0/virtio\-backend\(dq },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1368697518, \(dqmicroseconds\(dq: 326866 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AnnounceParameters  (Since: 4.0)
Parameters for self\-announce timers
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBinitial\fP (\fBint\fP) \-\- Initial delay (in ms) before sending the first GARP/RARP
announcement
.IP \(bu 2
\fBmax\fP (\fBint\fP) \-\- Maximum delay (in ms) between GARP/RARP announcement packets
.IP \(bu 2
\fBrounds\fP (\fBint\fP) \-\- Number of self\-announcement attempts
.IP \(bu 2
\fBstep\fP (\fBint\fP) \-\- Delay increase (in ms) after each self\-announcement attempt
.IP \(bu 2
\fBinterfaces\fP (\fB[\fP\fBstring\fP\fB]\fP, \fIoptional\fP) \-\- An optional list of interface names, which restricts
the announcement to the listed interfaces.  (Since 4.1)
.IP \(bu 2
\fBid\fP (\fBstring\fP, \fIoptional\fP) \-\- A name to be used to identify an instance of announce\-timers
and to allow it to modified later.  Not for use as part of the
migration parameters.  (Since 4.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  announce\-self  (Since: 4.0)
Trigger generation of broadcast RARP frames to update network
switches.  This can be useful when network bonds fail\-over the
active slave.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%AnnounceParameters\fP\&.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqannounce\-self\(dq,
     \(dqarguments\(dq: {
         \(dqinitial\(dq: 50, \(dqmax\(dq: 550, \(dqrounds\(dq: 10, \(dqstep\(dq: 50,
         \(dqinterfaces\(dq: [\(dqvn2\(dq, \(dqvn3\(dq], \(dqid\(dq: \(dqbob\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  FAILOVER_NEGOTIATED  (Since: 4.2)
Emitted when VIRTIO_NET_F_STANDBY was enabled during feature
negotiation.  Failover primary devices which were hidden (not
hotplugged when requested) before will now be hotplugged by the
virtio\-net standby device.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\-id\fP (\fBstring\fP) \-\- QEMU device id of the unplugged device
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqFAILOVER_NEGOTIATED\(dq,
     \(dqdata\(dq: { \(dqdevice\-id\(dq: \(dqnet1\(dq },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1368697518, \(dqmicroseconds\(dq: 326866 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  NETDEV_STREAM_CONNECTED  (Since: 7.2)
Emitted when the netdev stream backend is connected
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnetdev\-id\fP (\fBstring\fP) \-\- QEMU netdev id that is connected
.IP \(bu 2
\fBaddr\fP (\fI\%SocketAddress\fP) \-\- The destination address
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqNETDEV_STREAM_CONNECTED\(dq,
     \(dqdata\(dq: { \(dqnetdev\-id\(dq: \(dqnetdev0\(dq,
               \(dqaddr\(dq: { \(dqport\(dq: \(dq47666\(dq, \(dqipv6\(dq: true,
                         \(dqhost\(dq: \(dq::1\(dq, \(dqtype\(dq: \(dqinet\(dq } },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1666269863, \(dqmicroseconds\(dq: 311222 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqNETDEV_STREAM_CONNECTED\(dq,
     \(dqdata\(dq: { \(dqnetdev\-id\(dq: \(dqnetdev0\(dq,
               \(dqaddr\(dq: { \(dqpath\(dq: \(dq/tmp/qemu0\(dq, \(dqtype\(dq: \(dqunix\(dq } },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1666269706, \(dqmicroseconds\(dq: 413651 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  NETDEV_STREAM_DISCONNECTED  (Since: 7.2)
Emitted when the netdev stream backend is disconnected
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnetdev\-id\fP (\fBstring\fP) \-\- QEMU netdev id that is disconnected
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqNETDEV_STREAM_DISCONNECTED\(dq,
     \(dqdata\(dq: {\(dqnetdev\-id\(dq: \(dqnetdev0\(dq},
     \(dqtimestamp\(dq: {\(dqseconds\(dq: 1663330937, \(dqmicroseconds\(dq: 526695} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  NETDEV_VHOST_USER_CONNECTED  (Since: 10.0)
Emitted when the vhost\-user chardev is connected
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnetdev\-id\fP (\fBstring\fP) \-\- QEMU netdev id that is connected
.IP \(bu 2
\fBchardev\-id\fP (\fBstring\fP) \-\- The character device id used by the QEMU netdev
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqtimestamp\(dq: {\(dqseconds\(dq: 1739538638, \(dqmicroseconds\(dq: 354181 },
     \(dqevent\(dq: \(dqNETDEV_VHOST_USER_CONNECTED\(dq,
     \(dqdata\(dq: { \(dqnetdev\-id\(dq: \(dqnetdev0\(dq, \(dqchardev\-id\(dq: \(dqchr0\(dq } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  NETDEV_VHOST_USER_DISCONNECTED  (Since: 10.0)
Emitted when the vhost\-user chardev is disconnected
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnetdev\-id\fP (\fBstring\fP) \-\- QEMU netdev id that is disconnected
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqtimestamp\(dq: { \(dqseconds\(dq: 1739538634, \(dqmicroseconds\(dq: 920450 },
     \(dqevent\(dq: \(dqNETDEV_VHOST_USER_DISCONNECTED\(dq,
     \(dqdata\(dq: { \(dqnetdev\-id\(dq: \(dqnetdev0\(dq } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH EBPF OBJECTS
.sp
eBPF object is an ELF binary that contains the eBPF program and eBPF
map description(BTF).  Overall, eBPF object should contain the
program and enough metadata to create/load eBPF with libbpf.  As the
eBPF maps/program should correspond to QEMU, the eBPF can\(aqt be used
from different QEMU build.
.sp
Currently, there is a possible eBPF for receive\-side scaling (RSS).
.INDENT 0.0
.TP
.B Object  EbpfObject  (Since: 9.0)
\fIAvailability\fP: \fBCONFIG_EBPF\fP
.sp
An eBPF ELF object.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBobject\fP (\fBstring\fP) \-\- the eBPF object encoded in base64
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  EbpfProgramID  (Since: 9.0)
\fIAvailability\fP: \fBCONFIG_EBPF\fP
.sp
The eBPF programs that can be gotten with request\-ebpf.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBrss\fP \-\- Receive side scaling, technology that allows steering traffic
between queues by calculation hash.  Users may set up
indirection table and hash/packet types configurations.  Used
with virtio\-net.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  request\-ebpf  (Since: 9.0)
\fIAvailability\fP: \fBCONFIG_EBPF\fP
.sp
Retrieve an eBPF object that can be loaded with libbpf.  Management
applications (e.g. libvirt) may load it and pass file descriptors to
QEMU, so they can run running QEMU without BPF capabilities.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fI\%EbpfProgramID\fP) \-\- The ID of the program to return.
.UNINDENT
.TP
.B Return
\fI\%EbpfObject\fP \-\- eBPF object encoded in base64.
.UNINDENT
.UNINDENT
.SH ROCKER SWITCH DEVICE
.INDENT 0.0
.TP
.B Object  RockerSwitch  (Since: 2.4)
Rocker switch information.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- switch name
.IP \(bu 2
\fBid\fP (\fBint\fP) \-\- switch ID
.IP \(bu 2
\fBports\fP (\fBint\fP) \-\- number of front\-panel ports
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-rocker  (Since: 2.4)
Return rocker switch information.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- switch name
.UNINDENT
.TP
.B Return
\fI\%RockerSwitch\fP \-\- \fBRocker\fP information
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-rocker\(dq, \(dqarguments\(dq: { \(dqname\(dq: \(dqsw1\(dq } }
<\- { \(dqreturn\(dq: {\(dqname\(dq: \(dqsw1\(dq, \(dqports\(dq: 2, \(dqid\(dq: 1327446905938}}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  RockerPortDuplex  (Since: 2.4)
An enumeration of port duplex states.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBhalf\fP \-\- half duplex
.IP \(bu 2
\fBfull\fP \-\- full duplex
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  RockerPortAutoneg  (Since: 2.4)
An enumeration of port autoneg states.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBoff\fP \-\- autoneg is off
.IP \(bu 2
\fBon\fP \-\- autoneg is on
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RockerPort  (Since: 2.4)
Rocker switch port information.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- port name
.IP \(bu 2
\fBenabled\fP (\fBboolean\fP) \-\- port is enabled for I/O
.IP \(bu 2
\fBlink\-up\fP (\fBboolean\fP) \-\- physical link is UP on port
.IP \(bu 2
\fBspeed\fP (\fBint\fP) \-\- port link speed in Mbps
.IP \(bu 2
\fBduplex\fP (\fI\%RockerPortDuplex\fP) \-\- port link duplex
.IP \(bu 2
\fBautoneg\fP (\fI\%RockerPortAutoneg\fP) \-\- port link autoneg
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-rocker\-ports  (Since: 2.4)
Return rocker switch port information.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- port name
.UNINDENT
.TP
.B Return
\fB[\fP\fI\%RockerPort\fP\fB]\fP \-\- a list of \fBRockerPort\fP information
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-rocker\-ports\(dq, \(dqarguments\(dq: { \(dqname\(dq: \(dqsw1\(dq } }
<\- { \(dqreturn\(dq: [ {\(dqduplex\(dq: \(dqfull\(dq, \(dqenabled\(dq: true, \(dqname\(dq: \(dqsw1.1\(dq,
                  \(dqautoneg\(dq: \(dqoff\(dq, \(dqlink\-up\(dq: true, \(dqspeed\(dq: 10000},
                 {\(dqduplex\(dq: \(dqfull\(dq, \(dqenabled\(dq: true, \(dqname\(dq: \(dqsw1.2\(dq,
                  \(dqautoneg\(dq: \(dqoff\(dq, \(dqlink\-up\(dq: true, \(dqspeed\(dq: 10000}
   ]}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RockerOfDpaFlowKey  (Since: 2.4)
Rocker switch OF\-DPA flow key
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpriority\fP (\fBint\fP) \-\- key priority, 0 being lowest priority
.IP \(bu 2
\fBtbl\-id\fP (\fBint\fP) \-\- flow table ID
.IP \(bu 2
\fBin\-pport\fP (\fBint\fP, \fIoptional\fP) \-\- physical input port
.IP \(bu 2
\fBtunnel\-id\fP (\fBint\fP, \fIoptional\fP) \-\- tunnel ID
.IP \(bu 2
\fBvlan\-id\fP (\fBint\fP, \fIoptional\fP) \-\- VLAN ID
.IP \(bu 2
\fBeth\-type\fP (\fBint\fP, \fIoptional\fP) \-\- Ethernet header type
.IP \(bu 2
\fBeth\-src\fP (\fBstring\fP, \fIoptional\fP) \-\- Ethernet header source MAC address
.IP \(bu 2
\fBeth\-dst\fP (\fBstring\fP, \fIoptional\fP) \-\- Ethernet header destination MAC address
.IP \(bu 2
\fBip\-proto\fP (\fBint\fP, \fIoptional\fP) \-\- IP Header protocol field
.IP \(bu 2
\fBip\-tos\fP (\fBint\fP, \fIoptional\fP) \-\- IP header TOS field
.IP \(bu 2
\fBip\-dst\fP (\fBstring\fP, \fIoptional\fP) \-\- IP header destination address
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
Optional members may or may not appear in the flow key
depending if they\(aqre relevant to the flow key.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RockerOfDpaFlowMask  (Since: 2.4)
Rocker switch OF\-DPA flow mask
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBin\-pport\fP (\fBint\fP, \fIoptional\fP) \-\- physical input port
.IP \(bu 2
\fBtunnel\-id\fP (\fBint\fP, \fIoptional\fP) \-\- tunnel ID
.IP \(bu 2
\fBvlan\-id\fP (\fBint\fP, \fIoptional\fP) \-\- VLAN ID
.IP \(bu 2
\fBeth\-src\fP (\fBstring\fP, \fIoptional\fP) \-\- Ethernet header source MAC address
.IP \(bu 2
\fBeth\-dst\fP (\fBstring\fP, \fIoptional\fP) \-\- Ethernet header destination MAC address
.IP \(bu 2
\fBip\-proto\fP (\fBint\fP, \fIoptional\fP) \-\- IP Header protocol field
.IP \(bu 2
\fBip\-tos\fP (\fBint\fP, \fIoptional\fP) \-\- IP header TOS field
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
Optional members may or may not appear in the flow mask
depending if they\(aqre relevant to the flow mask.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RockerOfDpaFlowAction  (Since: 2.4)
Rocker switch OF\-DPA flow action
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBgoto\-tbl\fP (\fBint\fP, \fIoptional\fP) \-\- next table ID
.IP \(bu 2
\fBgroup\-id\fP (\fBint\fP, \fIoptional\fP) \-\- group ID
.IP \(bu 2
\fBtunnel\-lport\fP (\fBint\fP, \fIoptional\fP) \-\- tunnel logical port ID
.IP \(bu 2
\fBvlan\-id\fP (\fBint\fP, \fIoptional\fP) \-\- VLAN ID
.IP \(bu 2
\fBnew\-vlan\-id\fP (\fBint\fP, \fIoptional\fP) \-\- new VLAN ID
.IP \(bu 2
\fBout\-pport\fP (\fBint\fP, \fIoptional\fP) \-\- physical output port
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
Optional members may or may not appear in the flow action
depending if they\(aqre relevant to the flow action.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RockerOfDpaFlow  (Since: 2.4)
Rocker switch OF\-DPA flow
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcookie\fP (\fBint\fP) \-\- flow unique cookie ID
.IP \(bu 2
\fBhits\fP (\fBint\fP) \-\- count of matches (hits) on flow
.IP \(bu 2
\fBkey\fP (\fI\%RockerOfDpaFlowKey\fP) \-\- flow key
.IP \(bu 2
\fBmask\fP (\fI\%RockerOfDpaFlowMask\fP) \-\- flow mask
.IP \(bu 2
\fBaction\fP (\fI\%RockerOfDpaFlowAction\fP) \-\- flow action
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-rocker\-of\-dpa\-flows  (Since: 2.4)
Return rocker OF\-DPA flow information.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- switch name
.IP \(bu 2
\fBtbl\-id\fP (\fBint\fP, \fIoptional\fP) \-\- flow table ID.  If tbl\-id is not specified, returns flow
information for all tables.
.UNINDENT
.TP
.B Return
\fB[\fP\fI\%RockerOfDpaFlow\fP\fB]\fP \-\- rocker OF\-DPA flow information
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-rocker\-of\-dpa\-flows\(dq,
     \(dqarguments\(dq: { \(dqname\(dq: \(dqsw1\(dq } }
<\- { \(dqreturn\(dq: [ {\(dqkey\(dq: {\(dqin\-pport\(dq: 0, \(dqpriority\(dq: 1, \(dqtbl\-id\(dq: 0},
                  \(dqhits\(dq: 138,
                  \(dqcookie\(dq: 0,
                  \(dqaction\(dq: {\(dqgoto\-tbl\(dq: 10},
                  \(dqmask\(dq: {\(dqin\-pport\(dq: 4294901760}
                 },
                 ...
   ]}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RockerOfDpaGroup  (Since: 2.4)
Rocker switch OF\-DPA group
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBint\fP) \-\- group unique ID
.IP \(bu 2
\fBtype\fP (\fBint\fP) \-\- group type
.IP \(bu 2
\fBvlan\-id\fP (\fBint\fP, \fIoptional\fP) \-\- VLAN ID
.IP \(bu 2
\fBpport\fP (\fBint\fP, \fIoptional\fP) \-\- physical port number
.IP \(bu 2
\fBindex\fP (\fBint\fP, \fIoptional\fP) \-\- group index, unique with group type
.IP \(bu 2
\fBout\-pport\fP (\fBint\fP, \fIoptional\fP) \-\- output physical port number
.IP \(bu 2
\fBgroup\-id\fP (\fBint\fP, \fIoptional\fP) \-\- next group ID
.IP \(bu 2
\fBset\-vlan\-id\fP (\fBint\fP, \fIoptional\fP) \-\- VLAN ID to set
.IP \(bu 2
\fBpop\-vlan\fP (\fBint\fP, \fIoptional\fP) \-\- pop VLAN headr from packet
.IP \(bu 2
\fBgroup\-ids\fP (\fB[\fP\fBint\fP\fB]\fP, \fIoptional\fP) \-\- list of next group IDs
.IP \(bu 2
\fBset\-eth\-src\fP (\fBstring\fP, \fIoptional\fP) \-\- set source MAC address in Ethernet header
.IP \(bu 2
\fBset\-eth\-dst\fP (\fBstring\fP, \fIoptional\fP) \-\- set destination MAC address in Ethernet header
.IP \(bu 2
\fBttl\-check\fP (\fBint\fP, \fIoptional\fP) \-\- perform TTL check
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
Optional members may or may not appear in the group
depending if they\(aqre relevant to the group type.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-rocker\-of\-dpa\-groups  (Since: 2.4)
Return rocker OF\-DPA group information.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- switch name
.IP \(bu 2
\fBtype\fP (\fBint\fP, \fIoptional\fP) \-\- group type.  If type is not specified, returns group
information for all group types.
.UNINDENT
.TP
.B Return
\fB[\fP\fI\%RockerOfDpaGroup\fP\fB]\fP \-\- rocker OF\-DPA group information
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-rocker\-of\-dpa\-groups\(dq,
     \(dqarguments\(dq: { \(dqname\(dq: \(dqsw1\(dq } }
<\- { \(dqreturn\(dq: [ {\(dqtype\(dq: 0, \(dqout\-pport\(dq: 2,
                  \(dqpport\(dq: 2, \(dqvlan\-id\(dq: 3841,
                  \(dqpop\-vlan\(dq: 1, \(dqid\(dq: 251723778},
                 {\(dqtype\(dq: 0, \(dqout\-pport\(dq: 0,
                  \(dqpport\(dq: 0, \(dqvlan\-id\(dq: 3841,
                  \(dqpop\-vlan\(dq: 1, \(dqid\(dq: 251723776},
                 {\(dqtype\(dq: 0, \(dqout\-pport\(dq: 1,
                  \(dqpport\(dq: 1, \(dqvlan\-id\(dq: 3840,
                  \(dqpop\-vlan\(dq: 1, \(dqid\(dq: 251658241},
                 {\(dqtype\(dq: 0, \(dqout\-pport\(dq: 0,
                  \(dqpport\(dq: 0, \(dqvlan\-id\(dq: 3840,
                  \(dqpop\-vlan\(dq: 1, \(dqid\(dq: 251658240}
   ]}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH TPM (TRUSTED PLATFORM MODULE) DEVICES
.INDENT 0.0
.TP
.B Enum  TpmModel  (Since: 1.5)
\fIAvailability\fP: \fBCONFIG_TPM\fP
.sp
An enumeration of TPM models
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBtpm\-tis\fP \-\- TPM TIS model
.IP \(bu 2
\fBtpm\-crb\fP \-\- TPM CRB model (since 2.12)
.IP \(bu 2
\fBtpm\-spapr\fP \-\- TPM SPAPR model (since 5.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-tpm\-models  (Since: 1.5)
\fIAvailability\fP: \fBCONFIG_TPM\fP
.sp
Return a list of supported TPM models
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%TpmModel\fP\fB]\fP \-\- a list of TpmModel
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-tpm\-models\(dq }
<\- { \(dqreturn\(dq: [ \(dqtpm\-tis\(dq, \(dqtpm\-crb\(dq, \(dqtpm\-spapr\(dq ] }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  TpmType  (Since: 1.5)
\fIAvailability\fP: \fBCONFIG_TPM\fP
.sp
An enumeration of TPM types
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBpassthrough\fP \-\- TPM passthrough type
.IP \(bu 2
\fBemulator\fP \-\- Software Emulator TPM type (since 2.11)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-tpm\-types  (Since: 1.5)
\fIAvailability\fP: \fBCONFIG_TPM\fP
.sp
Return a list of supported TPM types
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%TpmType\fP\fB]\fP \-\- a list of TpmType
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-tpm\-types\(dq }
<\- { \(dqreturn\(dq: [ \(dqpassthrough\(dq, \(dqemulator\(dq ] }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  TPMPassthroughOptions  (Since: 1.5)
\fIAvailability\fP: \fBCONFIG_TPM\fP
.sp
Information about the TPM passthrough type
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP, \fIoptional\fP) \-\- string describing the path used for accessing the TPM device
.IP \(bu 2
\fBcancel\-path\fP (\fBstring\fP, \fIoptional\fP) \-\- string showing the TPM\(aqs sysfs cancel file for
cancellation of TPM commands while they are executing
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  TPMEmulatorOptions  (Since: 2.11)
\fIAvailability\fP: \fBCONFIG_TPM\fP
.sp
Information about the TPM emulator type
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBchardev\fP (\fBstring\fP) \-\- Name of a unix socket chardev
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  TPMPassthroughOptionsWrapper  (Since: 1.5)
\fIAvailability\fP: \fBCONFIG_TPM\fP.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%TPMPassthroughOptions\fP) \-\- Information about the TPM passthrough type
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  TPMEmulatorOptionsWrapper  (Since: 2.11)
\fIAvailability\fP: \fBCONFIG_TPM\fP.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%TPMEmulatorOptions\fP) \-\- Information about the TPM emulator type
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  TpmTypeOptions  (Since: 1.5)
\fIAvailability\fP: \fBCONFIG_TPM\fP
.sp
A union referencing different TPM backend types\(aq configuration
options
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%TpmType\fP) \-\- .INDENT 2.0
.IP \(bu 2
\(aqpassthrough\(aq The configuration options for the TPM
passthrough type
.IP \(bu 2
\(aqemulator\(aq The configuration options for TPM emulator backend
type
.UNINDENT

.IP \(bu 2
When \fBtype\fP is \fBpassthrough\fP: The members of \fI\%TPMPassthroughOptionsWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBemulator\fP: The members of \fI\%TPMEmulatorOptionsWrapper\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  TPMInfo  (Since: 1.5)
\fIAvailability\fP: \fBCONFIG_TPM\fP
.sp
Information about the TPM
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- The Id of the TPM
.IP \(bu 2
\fBmodel\fP (\fI\%TpmModel\fP) \-\- The TPM frontend model
.IP \(bu 2
\fBoptions\fP (\fI\%TpmTypeOptions\fP) \-\- The TPM (backend) type configuration options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-tpm  (Since: 1.5)
\fIAvailability\fP: \fBCONFIG_TPM\fP
.sp
Return information about the TPM device
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-tpm\(dq }
<\- { \(dqreturn\(dq:
     [
       { \(dqmodel\(dq: \(dqtpm\-tis\(dq,
         \(dqoptions\(dq:
           { \(dqtype\(dq: \(dqpassthrough\(dq,
             \(dqdata\(dq:
               { \(dqcancel\-path\(dq: \(dq/sys/class/misc/tpm0/device/cancel\(dq,
                 \(dqpath\(dq: \(dq/dev/tpm0\(dq
               }
           },
         \(dqid\(dq: \(dqtpm0\(dq
       }
     ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH REMOTE DESKTOP
.INDENT 0.0
.TP
.B Enum  DisplayProtocol  (Since: 7.0)
Display protocols which support changing password options.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBvnc\fP \-\- Not documented
.IP \(bu 2
\fBspice\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  SetPasswordAction  (Since: 7.0)
An action to take on changing a password on a connection with active
clients.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBkeep\fP \-\- maintain existing clients
.IP \(bu 2
\fBfail\fP \-\- fail the command if clients are connected
.IP \(bu 2
\fBdisconnect\fP \-\- disconnect existing clients
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SetPasswordOptions  (Since: 7.0)
Options for set_password.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBprotocol\fP (\fI\%DisplayProtocol\fP) \-\- .INDENT 2.0
.IP \(bu 2
\(aqvnc\(aq to modify the VNC server password
.IP \(bu 2
\(aqspice\(aq to modify the Spice server password
.UNINDENT

.IP \(bu 2
\fBpassword\fP (\fBstring\fP) \-\- the new password
.IP \(bu 2
\fBconnected\fP (\fI\%SetPasswordAction\fP, \fIoptional\fP) \-\- How to handle existing clients when changing the
password.  If nothing is specified, defaults to \(aqkeep\(aq.  For
VNC, only \(aqkeep\(aq is currently implemented.
.IP \(bu 2
When \fBprotocol\fP is \fBvnc\fP: The members of \fI\%SetPasswordOptionsVnc\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SetPasswordOptionsVnc  (Since: 7.0)
Options for set_password specific to the VNC protocol.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdisplay\fP (\fBstring\fP, \fIoptional\fP) \-\- The id of the display where the password should be
changed.  Defaults to the first.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  set_password  (Since: 0.14)
Set the password of a remote display server.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%SetPasswordOptions\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If Spice is not enabled, DeviceNotFound
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqset_password\(dq, \(dqarguments\(dq: { \(dqprotocol\(dq: \(dqvnc\(dq,
                                               \(dqpassword\(dq: \(dqsecret\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ExpirePasswordOptions  (Since: 7.0)
General options for expire_password.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBprotocol\fP (\fI\%DisplayProtocol\fP) \-\- .INDENT 2.0
.IP \(bu 2
\(aqvnc\(aq to modify the VNC server expiration
.IP \(bu 2
\(aqspice\(aq to modify the Spice server expiration
.UNINDENT

.IP \(bu 2
\fBtime\fP (\fBstring\fP) \-\- 
.sp
when to expire the password.
.INDENT 2.0
.IP \(bu 2
\(aqnow\(aq to expire the password immediately
.IP \(bu 2
\(aqnever\(aq to cancel password expiration
.IP \(bu 2
\(aq+INT\(aq where INT is the number of seconds from now (integer)
.IP \(bu 2
\(aqINT\(aq where INT is the absolute time in seconds
.UNINDENT

.IP \(bu 2
When \fBprotocol\fP is \fBvnc\fP: The members of \fI\%ExpirePasswordOptionsVnc\fP\&.
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
Time is relative to the server and currently there is no
way to coordinate server time with client time.  It is not
recommended to use the absolute time version of the \fBtime\fP
parameter unless you\(aqre sure you are on the same machine as the
QEMU instance.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ExpirePasswordOptionsVnc  (Since: 7.0)
Options for expire_password specific to the VNC protocol.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdisplay\fP (\fBstring\fP, \fIoptional\fP) \-\- The id of the display where the expiration should be
changed.  Defaults to the first.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  expire_password  (Since: 0.14)
Expire the password of a remote display server.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%ExpirePasswordOptions\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBprotocol\fP is \(aqspice\(aq and Spice is not active,
DeviceNotFound
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqexpire_password\(dq, \(dqarguments\(dq: { \(dqprotocol\(dq: \(dqvnc\(dq,
                                                  \(dqtime\(dq: \(dq+60\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  ImageFormat  (Since: 7.1)
Supported image format types.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBpng\fP \-\- PNG format
.IP \(bu 2
\fBppm\fP \-\- PPM format
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  screendump  (Since: 0.14)
\fIAvailability\fP: \fBCONFIG_PIXMAN\fP
.sp
Capture the contents of a screen and write it to a file.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- the path of a new file to store the image
.IP \(bu 2
\fBdevice\fP (\fBstring\fP, \fIoptional\fP) \-\- ID of the display device that should be dumped.  If this
parameter is missing, the primary display will be used.  (Since
2.12)
.IP \(bu 2
\fBhead\fP (\fBint\fP, \fIoptional\fP) \-\- head to use in case the device supports multiple heads.  If
this parameter is missing, head #0 will be used.  Also note that
the head can only be specified in conjunction with the device
ID.  (Since 2.12)
.IP \(bu 2
\fBformat\fP (\fI\%ImageFormat\fP, \fIoptional\fP) \-\- image format for screendump.  (default: ppm) (Since 7.1)
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqscreendump\(dq,
     \(dqarguments\(dq: { \(dqfilename\(dq: \(dq/tmp/image\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS Spice
.INDENT 0.0
.TP
.B Object  SpiceBasicInfo  (Since: 2.1)
\fIAvailability\fP: \fBCONFIG_SPICE\fP
.sp
The basic information for SPICE network connection
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBhost\fP (\fBstring\fP) \-\- IP address
.IP \(bu 2
\fBport\fP (\fBstring\fP) \-\- port number
.IP \(bu 2
\fBfamily\fP (\fI\%NetworkAddressFamily\fP) \-\- address family
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SpiceServerInfo  (Since: 2.1)
\fIAvailability\fP: \fBCONFIG_SPICE\fP
.sp
Information about a SPICE server
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBauth\fP (\fBstring\fP, \fIoptional\fP) \-\- authentication method
.IP \(bu 2
The members of \fI\%SpiceBasicInfo\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SpiceChannel  (Since: 0.14)
\fIAvailability\fP: \fBCONFIG_SPICE\fP
.sp
Information about a SPICE client channel.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBconnection\-id\fP (\fBint\fP) \-\- SPICE connection id number.  All channels with the
same id belong to the same SPICE session.
.IP \(bu 2
\fBchannel\-type\fP (\fBint\fP) \-\- SPICE channel type number.  \(dq1\(dq is the main control
channel, filter for this one if you want to track spice sessions
only
.IP \(bu 2
\fBchannel\-id\fP (\fBint\fP) \-\- SPICE channel ID number.  Usually \(dq0\(dq, might be
different when multiple channels of the same type exist, such as
multiple display channels in a multihead setup
.IP \(bu 2
\fBtls\fP (\fBboolean\fP) \-\- true if the channel is encrypted, false otherwise.
.IP \(bu 2
The members of \fI\%SpiceBasicInfo\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  SpiceQueryMouseMode  (Since: 1.1)
\fIAvailability\fP: \fBCONFIG_SPICE\fP
.sp
An enumeration of Spice mouse states.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBclient\fP \-\- Mouse cursor position is determined by the client.
.IP \(bu 2
\fBserver\fP \-\- Mouse cursor position is determined by the server.
.IP \(bu 2
\fBunknown\fP \-\- No information is available about mouse mode used by the
spice server.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SpiceInfo  (Since: 0.14)
\fIAvailability\fP: \fBCONFIG_SPICE\fP
.sp
Information about the SPICE session.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBenabled\fP (\fBboolean\fP) \-\- true if the SPICE server is enabled, false otherwise
.IP \(bu 2
\fBmigrated\fP (\fBboolean\fP) \-\- true if the last guest migration completed and spice
migration had completed as well, false otherwise (since 1.4)
.IP \(bu 2
\fBhost\fP (\fBstring\fP, \fIoptional\fP) \-\- The hostname the SPICE server is bound to.  This depends on
the name resolution on the host and may be an IP address.
.IP \(bu 2
\fBport\fP (\fBint\fP, \fIoptional\fP) \-\- The SPICE server\(aqs port number.
.IP \(bu 2
\fBcompiled\-version\fP (\fBstring\fP, \fIoptional\fP) \-\- SPICE server version.
.IP \(bu 2
\fBtls\-port\fP (\fBint\fP, \fIoptional\fP) \-\- The SPICE server\(aqs TLS port number.
.IP \(bu 2
\fBauth\fP (\fBstring\fP, \fIoptional\fP) \-\- 
.sp
the current authentication type used by the server
.INDENT 2.0
.IP \(bu 2
\(aqnone\(aq if no authentication is being used
.IP \(bu 2
\(aqspice\(aq uses SASL or direct TLS authentication, depending on
command line options
.UNINDENT

.IP \(bu 2
\fBmouse\-mode\fP (\fI\%SpiceQueryMouseMode\fP) \-\- The mode in which the mouse cursor is displayed
currently.  Can be determined by the client or the server, or
unknown if spice server doesn\(aqt provide this information.
(since: 1.1)
.IP \(bu 2
\fBchannels\fP (\fB[\fP\fI\%SpiceChannel\fP\fB]\fP, \fIoptional\fP) \-\- a list of \fBSpiceChannel\fP for each active spice channel
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-spice  (Since: 0.14)
\fIAvailability\fP: \fBCONFIG_SPICE\fP
.sp
Return information about the current SPICE server
.INDENT 7.0
.TP
.B Return
\fI\%SpiceInfo\fP \-\- \fBSpiceInfo\fP
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-spice\(dq }
<\- { \(dqreturn\(dq: {
         \(dqenabled\(dq: true,
         \(dqauth\(dq: \(dqspice\(dq,
         \(dqport\(dq: 5920,
         \(dqmigrated\(dq:false,
         \(dqtls\-port\(dq: 5921,
         \(dqhost\(dq: \(dq0.0.0.0\(dq,
         \(dqmouse\-mode\(dq:\(dqclient\(dq,
         \(dqchannels\(dq: [
            {
               \(dqport\(dq: \(dq54924\(dq,
               \(dqfamily\(dq: \(dqipv4\(dq,
               \(dqchannel\-type\(dq: 1,
               \(dqconnection\-id\(dq: 1804289383,
               \(dqhost\(dq: \(dq127.0.0.1\(dq,
               \(dqchannel\-id\(dq: 0,
               \(dqtls\(dq: true
            },
            {
               \(dqport\(dq: \(dq36710\(dq,
               \(dqfamily\(dq: \(dqipv4\(dq,
               \(dqchannel\-type\(dq: 4,
               \(dqconnection\-id\(dq: 1804289383,
               \(dqhost\(dq: \(dq127.0.0.1\(dq,
               \(dqchannel\-id\(dq: 0,
               \(dqtls\(dq: false
            },
            ...
         ]
      }
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  SPICE_CONNECTED  (Since: 0.14)
\fIAvailability\fP: \fBCONFIG_SPICE\fP
.sp
Emitted when a SPICE client establishes a connection
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBserver\fP (\fI\%SpiceBasicInfo\fP) \-\- server information
.IP \(bu 2
\fBclient\fP (\fI\%SpiceBasicInfo\fP) \-\- client information
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqtimestamp\(dq: {\(dqseconds\(dq: 1290688046, \(dqmicroseconds\(dq: 388707},
     \(dqevent\(dq: \(dqSPICE_CONNECTED\(dq,
     \(dqdata\(dq: {
       \(dqserver\(dq: { \(dqport\(dq: \(dq5920\(dq, \(dqfamily\(dq: \(dqipv4\(dq, \(dqhost\(dq: \(dq127.0.0.1\(dq},
       \(dqclient\(dq: {\(dqport\(dq: \(dq52873\(dq, \(dqfamily\(dq: \(dqipv4\(dq, \(dqhost\(dq: \(dq127.0.0.1\(dq}
   }}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  SPICE_INITIALIZED  (Since: 0.14)
\fIAvailability\fP: \fBCONFIG_SPICE\fP
.sp
Emitted after initial handshake and authentication takes place (if
any) and the SPICE channel is up and running
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBserver\fP (\fI\%SpiceServerInfo\fP) \-\- server information
.IP \(bu 2
\fBclient\fP (\fI\%SpiceChannel\fP) \-\- client information
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqtimestamp\(dq: {\(dqseconds\(dq: 1290688046, \(dqmicroseconds\(dq: 417172},
     \(dqevent\(dq: \(dqSPICE_INITIALIZED\(dq,
     \(dqdata\(dq: {\(dqserver\(dq: {\(dqauth\(dq: \(dqspice\(dq, \(dqport\(dq: \(dq5921\(dq,
                         \(dqfamily\(dq: \(dqipv4\(dq, \(dqhost\(dq: \(dq127.0.0.1\(dq},
              \(dqclient\(dq: {\(dqport\(dq: \(dq49004\(dq, \(dqfamily\(dq: \(dqipv4\(dq, \(dqchannel\-type\(dq: 3,
                         \(dqconnection\-id\(dq: 1804289383, \(dqhost\(dq: \(dq127.0.0.1\(dq,
                         \(dqchannel\-id\(dq: 0, \(dqtls\(dq: true}
   }}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  SPICE_DISCONNECTED  (Since: 0.14)
\fIAvailability\fP: \fBCONFIG_SPICE\fP
.sp
Emitted when the SPICE connection is closed
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBserver\fP (\fI\%SpiceBasicInfo\fP) \-\- server information
.IP \(bu 2
\fBclient\fP (\fI\%SpiceBasicInfo\fP) \-\- client information
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqtimestamp\(dq: {\(dqseconds\(dq: 1290688046, \(dqmicroseconds\(dq: 388707},
     \(dqevent\(dq: \(dqSPICE_DISCONNECTED\(dq,
     \(dqdata\(dq: {
       \(dqserver\(dq: { \(dqport\(dq: \(dq5920\(dq, \(dqfamily\(dq: \(dqipv4\(dq, \(dqhost\(dq: \(dq127.0.0.1\(dq},
       \(dqclient\(dq: {\(dqport\(dq: \(dq52873\(dq, \(dqfamily\(dq: \(dqipv4\(dq, \(dqhost\(dq: \(dq127.0.0.1\(dq}
   }}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  SPICE_MIGRATE_COMPLETED  (Since: 1.3)
\fIAvailability\fP: \fBCONFIG_SPICE\fP
.sp
Emitted when SPICE migration has completed
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqtimestamp\(dq: {\(dqseconds\(dq: 1290688046, \(dqmicroseconds\(dq: 417172},
     \(dqevent\(dq: \(dqSPICE_MIGRATE_COMPLETED\(dq }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS VNC
.INDENT 0.0
.TP
.B Object  VncBasicInfo  (Since: 2.1)
\fIAvailability\fP: \fBCONFIG_VNC\fP
.sp
The basic information for vnc network connection
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBhost\fP (\fBstring\fP) \-\- IP address
.IP \(bu 2
\fBservice\fP (\fBstring\fP) \-\- The service name of the vnc port.  This may depend on the
host system\(aqs service database so symbolic names should not be
relied on.
.IP \(bu 2
\fBfamily\fP (\fI\%NetworkAddressFamily\fP) \-\- address family
.IP \(bu 2
\fBwebsocket\fP (\fBboolean\fP) \-\- true in case the socket is a websocket (since 2.3).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VncServerInfo  (Since: 2.1)
\fIAvailability\fP: \fBCONFIG_VNC\fP
.sp
The network connection information for server
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBauth\fP (\fBstring\fP, \fIoptional\fP) \-\- authentication method used for the plain (non\-websocket) VNC
server
.IP \(bu 2
The members of \fI\%VncBasicInfo\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VncClientInfo  (Since: 0.14)
\fIAvailability\fP: \fBCONFIG_VNC\fP
.sp
Information about a connected VNC client.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBx509_dname\fP (\fBstring\fP, \fIoptional\fP) \-\- If x509 authentication is in use, the Distinguished
Name of the client.
.IP \(bu 2
\fBsasl_username\fP (\fBstring\fP, \fIoptional\fP) \-\- If SASL authentication is in use, the SASL username
used for authentication.
.IP \(bu 2
The members of \fI\%VncBasicInfo\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VncInfo  (Since: 0.14)
\fIAvailability\fP: \fBCONFIG_VNC\fP
.sp
Information about the VNC session.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBenabled\fP (\fBboolean\fP) \-\- true if the VNC server is enabled, false otherwise
.IP \(bu 2
\fBhost\fP (\fBstring\fP, \fIoptional\fP) \-\- The hostname the VNC server is bound to.  This depends on the
name resolution on the host and may be an IP address.
.IP \(bu 2
\fBfamily\fP (\fI\%NetworkAddressFamily\fP, \fIoptional\fP) \-\- .INDENT 2.0
.IP \(bu 2
\(aqipv6\(aq if the host is listening for IPv6 connections
.IP \(bu 2
\(aqipv4\(aq if the host is listening for IPv4 connections
.IP \(bu 2
\(aqunix\(aq if the host is listening on a unix domain socket
.IP \(bu 2
\(aqunknown\(aq otherwise
.UNINDENT

.IP \(bu 2
\fBservice\fP (\fBstring\fP, \fIoptional\fP) \-\- The service name of the server\(aqs port.  This may depends
on the host system\(aqs service database so symbolic names should
not be relied on.
.IP \(bu 2
\fBauth\fP (\fBstring\fP, \fIoptional\fP) \-\- 
.sp
the current authentication type used by the server
.INDENT 2.0
.IP \(bu 2
\(aqnone\(aq if no authentication is being used
.IP \(bu 2
\(aqvnc\(aq if VNC authentication is being used
.IP \(bu 2
\(aqvencrypt+plain\(aq if VEncrypt is used with plain text
authentication
.IP \(bu 2
\(aqvencrypt+tls+none\(aq if VEncrypt is used with TLS and no
authentication
.IP \(bu 2
\(aqvencrypt+tls+vnc\(aq if VEncrypt is used with TLS and VNC
authentication
.IP \(bu 2
\(aqvencrypt+tls+plain\(aq if VEncrypt is used with TLS and plain
text auth
.IP \(bu 2
\(aqvencrypt+x509+none\(aq if VEncrypt is used with x509 and no auth
.IP \(bu 2
\(aqvencrypt+x509+vnc\(aq if VEncrypt is used with x509 and VNC auth
.IP \(bu 2
\(aqvencrypt+x509+plain\(aq if VEncrypt is used with x509 and plain
text auth
.IP \(bu 2
\(aqvencrypt+tls+sasl\(aq if VEncrypt is used with TLS and SASL auth
.IP \(bu 2
\(aqvencrypt+x509+sasl\(aq if VEncrypt is used with x509 and SASL
auth
.UNINDENT

.IP \(bu 2
\fBclients\fP (\fB[\fP\fI\%VncClientInfo\fP\fB]\fP, \fIoptional\fP) \-\- a list of \fBVncClientInfo\fP of all currently connected
clients
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  VncPrimaryAuth  (Since: 2.3)
\fIAvailability\fP: \fBCONFIG_VNC\fP
.sp
vnc primary authentication method.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnone\fP \-\- Not documented
.IP \(bu 2
\fBvnc\fP \-\- Not documented
.IP \(bu 2
\fBra2\fP \-\- Not documented
.IP \(bu 2
\fBra2ne\fP \-\- Not documented
.IP \(bu 2
\fBtight\fP \-\- Not documented
.IP \(bu 2
\fBultra\fP \-\- Not documented
.IP \(bu 2
\fBtls\fP \-\- Not documented
.IP \(bu 2
\fBvencrypt\fP \-\- Not documented
.IP \(bu 2
\fBsasl\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  VncVencryptSubAuth  (Since: 2.3)
\fIAvailability\fP: \fBCONFIG_VNC\fP
.sp
vnc sub authentication method with vencrypt.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBplain\fP \-\- Not documented
.IP \(bu 2
\fBtls\-none\fP \-\- Not documented
.IP \(bu 2
\fBx509\-none\fP \-\- Not documented
.IP \(bu 2
\fBtls\-vnc\fP \-\- Not documented
.IP \(bu 2
\fBx509\-vnc\fP \-\- Not documented
.IP \(bu 2
\fBtls\-plain\fP \-\- Not documented
.IP \(bu 2
\fBx509\-plain\fP \-\- Not documented
.IP \(bu 2
\fBtls\-sasl\fP \-\- Not documented
.IP \(bu 2
\fBx509\-sasl\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VncServerInfo2  (Since: 2.9)
\fIAvailability\fP: \fBCONFIG_VNC\fP
.sp
The network connection information for server
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBauth\fP (\fI\%VncPrimaryAuth\fP) \-\- The current authentication type used by the servers
.IP \(bu 2
\fBvencrypt\fP (\fI\%VncVencryptSubAuth\fP, \fIoptional\fP) \-\- The vencrypt sub authentication type used by the servers,
only specified in case auth == vencrypt.
.IP \(bu 2
The members of \fI\%VncBasicInfo\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VncInfo2  (Since: 2.3)
\fIAvailability\fP: \fBCONFIG_VNC\fP
.sp
Information about a vnc server
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- vnc server name.
.IP \(bu 2
\fBserver\fP (\fB[\fP\fI\%VncServerInfo2\fP\fB]\fP) \-\- A list of \fBVncBasincInfo\fP describing all listening sockets.
The list can be empty (in case the vnc server is disabled).  It
also may have multiple entries: normal + websocket, possibly
also ipv4 + ipv6 in the future.
.IP \(bu 2
\fBclients\fP (\fB[\fP\fI\%VncClientInfo\fP\fB]\fP) \-\- A list of \fBVncClientInfo\fP of all currently connected
clients.  The list can be empty, for obvious reasons.
.IP \(bu 2
\fBauth\fP (\fI\%VncPrimaryAuth\fP) \-\- The current authentication type used by the non\-websockets
servers
.IP \(bu 2
\fBvencrypt\fP (\fI\%VncVencryptSubAuth\fP, \fIoptional\fP) \-\- The vencrypt authentication type used by the servers,
only specified in case auth == vencrypt.
.IP \(bu 2
\fBdisplay\fP (\fBstring\fP, \fIoptional\fP) \-\- The display device the vnc server is linked to.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-vnc  (Since: 0.14)
\fIAvailability\fP: \fBCONFIG_VNC\fP
.sp
Return information about the current VNC server
.INDENT 7.0
.TP
.B Return
\fI\%VncInfo\fP \-\- \fBVncInfo\fP
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-vnc\(dq }
<\- { \(dqreturn\(dq: {
         \(dqenabled\(dq:true,
         \(dqhost\(dq:\(dq0.0.0.0\(dq,
         \(dqservice\(dq:\(dq50402\(dq,
         \(dqauth\(dq:\(dqvnc\(dq,
         \(dqfamily\(dq:\(dqipv4\(dq,
         \(dqclients\(dq:[
            {
               \(dqhost\(dq:\(dq127.0.0.1\(dq,
               \(dqservice\(dq:\(dq50401\(dq,
               \(dqfamily\(dq:\(dqipv4\(dq,
               \(dqwebsocket\(dq:false
            }
         ]
      }
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-vnc\-servers  (Since: 2.3)
\fIAvailability\fP: \fBCONFIG_VNC\fP
.sp
Return a list of vnc servers.  The list can be empty.
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%VncInfo2\fP\fB]\fP \-\- a list of \fBVncInfo2\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  change\-vnc\-password  (Since: 1.1)
\fIAvailability\fP: \fBCONFIG_VNC\fP
.sp
Change the VNC server password.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBpassword\fP (\fBstring\fP) \-\- the new password to use with VNC authentication
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
An empty password in this command will set the password to
the empty string.  Existing clients are unaffected by executing
this command.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  VNC_CONNECTED  (Since: 0.13)
\fIAvailability\fP: \fBCONFIG_VNC\fP
.sp
Emitted when a VNC client establishes a connection
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBserver\fP (\fI\%VncServerInfo\fP) \-\- server information
.IP \(bu 2
\fBclient\fP (\fI\%VncBasicInfo\fP) \-\- client information
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
This event is emitted before any authentication takes
place, thus the authentication ID is not provided.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqVNC_CONNECTED\(dq,
     \(dqdata\(dq: {
           \(dqserver\(dq: { \(dqauth\(dq: \(dqsasl\(dq, \(dqfamily\(dq: \(dqipv4\(dq, \(dqwebsocket\(dq: false,
                       \(dqservice\(dq: \(dq5901\(dq, \(dqhost\(dq: \(dq0.0.0.0\(dq },
           \(dqclient\(dq: { \(dqfamily\(dq: \(dqipv4\(dq, \(dqservice\(dq: \(dq58425\(dq,
                       \(dqhost\(dq: \(dq127.0.0.1\(dq, \(dqwebsocket\(dq: false } },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1262976601, \(dqmicroseconds\(dq: 975795 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  VNC_INITIALIZED  (Since: 0.13)
\fIAvailability\fP: \fBCONFIG_VNC\fP
.sp
Emitted after authentication takes place (if any) and the VNC
session is made active
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBserver\fP (\fI\%VncServerInfo\fP) \-\- server information
.IP \(bu 2
\fBclient\fP (\fI\%VncClientInfo\fP) \-\- client information
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\-  { \(dqevent\(dq: \(dqVNC_INITIALIZED\(dq,
      \(dqdata\(dq: {
           \(dqserver\(dq: { \(dqauth\(dq: \(dqsasl\(dq, \(dqfamily\(dq: \(dqipv4\(dq, \(dqwebsocket\(dq: false,
                       \(dqservice\(dq: \(dq5901\(dq, \(dqhost\(dq: \(dq0.0.0.0\(dq},
           \(dqclient\(dq: { \(dqfamily\(dq: \(dqipv4\(dq, \(dqservice\(dq: \(dq46089\(dq, \(dqwebsocket\(dq: false,
                       \(dqhost\(dq: \(dq127.0.0.1\(dq, \(dqsasl_username\(dq: \(dqluiz\(dq } },
      \(dqtimestamp\(dq: { \(dqseconds\(dq: 1263475302, \(dqmicroseconds\(dq: 150772 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  VNC_DISCONNECTED  (Since: 0.13)
\fIAvailability\fP: \fBCONFIG_VNC\fP
.sp
Emitted when the connection is closed
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBserver\fP (\fI\%VncServerInfo\fP) \-\- server information
.IP \(bu 2
\fBclient\fP (\fI\%VncClientInfo\fP) \-\- client information
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqVNC_DISCONNECTED\(dq,
     \(dqdata\(dq: {
           \(dqserver\(dq: { \(dqauth\(dq: \(dqsasl\(dq, \(dqfamily\(dq: \(dqipv4\(dq, \(dqwebsocket\(dq: false,
                       \(dqservice\(dq: \(dq5901\(dq, \(dqhost\(dq: \(dq0.0.0.0\(dq },
           \(dqclient\(dq: { \(dqfamily\(dq: \(dqipv4\(dq, \(dqservice\(dq: \(dq58425\(dq, \(dqwebsocket\(dq: false,
                       \(dqhost\(dq: \(dq127.0.0.1\(dq, \(dqsasl_username\(dq: \(dqluiz\(dq } },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1262976601, \(dqmicroseconds\(dq: 975795 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH INPUT
.INDENT 0.0
.TP
.B Object  MouseInfo  (Since: 0.14)
Information about a mouse device.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the name of the mouse device
.IP \(bu 2
\fBindex\fP (\fBint\fP) \-\- the index of the mouse device
.IP \(bu 2
\fBcurrent\fP (\fBboolean\fP) \-\- true if this device is currently receiving mouse events
.IP \(bu 2
\fBabsolute\fP (\fBboolean\fP) \-\- true if this device supports absolute coordinates as
input
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-mice  (Since: 0.14)
Return information about each active mouse device
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%MouseInfo\fP\fB]\fP \-\- a list of \fBMouseInfo\fP for each device
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-mice\(dq }
<\- { \(dqreturn\(dq: [
         {
            \(dqname\(dq:\(dqQEMU Microsoft Mouse\(dq,
            \(dqindex\(dq:0,
            \(dqcurrent\(dq:false,
            \(dqabsolute\(dq:false
         },
         {
            \(dqname\(dq:\(dqQEMU PS/2 Mouse\(dq,
            \(dqindex\(dq:1,
            \(dqcurrent\(dq:true,
            \(dqabsolute\(dq:true
         }
      ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QKeyCode  (Since: 1.3)
An enumeration of key name.
.sp
This is used by the \fBsend\-key\fP command.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBunmapped\fP \-\- since 2.0
.IP \(bu 2
\fBpause\fP \-\- since 2.0
.IP \(bu 2
\fBro\fP \-\- since 2.4
.IP \(bu 2
\fBkp_comma\fP \-\- since 2.4
.IP \(bu 2
\fBkp_equals\fP \-\- since 2.6
.IP \(bu 2
\fBpower\fP \-\- since 2.6
.IP \(bu 2
\fBhiragana\fP \-\- since 2.9
.IP \(bu 2
\fBhenkan\fP \-\- since 2.9
.IP \(bu 2
\fByen\fP \-\- since 2.9
.IP \(bu 2
\fBsleep\fP \-\- since 2.10
.IP \(bu 2
\fBwake\fP \-\- since 2.10
.IP \(bu 2
\fBaudionext\fP \-\- since 2.10
.IP \(bu 2
\fBaudioprev\fP \-\- since 2.10
.IP \(bu 2
\fBaudiostop\fP \-\- since 2.10
.IP \(bu 2
\fBaudioplay\fP \-\- since 2.10
.IP \(bu 2
\fBaudiomute\fP \-\- since 2.10
.IP \(bu 2
\fBvolumeup\fP \-\- since 2.10
.IP \(bu 2
\fBvolumedown\fP \-\- since 2.10
.IP \(bu 2
\fBmediaselect\fP \-\- since 2.10
.IP \(bu 2
\fBmail\fP \-\- since 2.10
.IP \(bu 2
\fBcalculator\fP \-\- since 2.10
.IP \(bu 2
\fBcomputer\fP \-\- since 2.10
.IP \(bu 2
\fBac_home\fP \-\- since 2.10
.IP \(bu 2
\fBac_back\fP \-\- since 2.10
.IP \(bu 2
\fBac_forward\fP \-\- since 2.10
.IP \(bu 2
\fBac_refresh\fP \-\- since 2.10
.IP \(bu 2
\fBac_bookmarks\fP \-\- since 2.10
.IP \(bu 2
\fBmuhenkan\fP \-\- since 2.12
.IP \(bu 2
\fBkatakanahiragana\fP \-\- since 2.12
.IP \(bu 2
\fBlang1\fP \-\- since 6.1
.IP \(bu 2
\fBlang2\fP \-\- since 6.1
.IP \(bu 2
\fBf13\fP \-\- since 8.0
.IP \(bu 2
\fBf14\fP \-\- since 8.0
.IP \(bu 2
\fBf15\fP \-\- since 8.0
.IP \(bu 2
\fBf16\fP \-\- since 8.0
.IP \(bu 2
\fBf17\fP \-\- since 8.0
.IP \(bu 2
\fBf18\fP \-\- since 8.0
.IP \(bu 2
\fBf19\fP \-\- since 8.0
.IP \(bu 2
\fBf20\fP \-\- since 8.0
.IP \(bu 2
\fBf21\fP \-\- since 8.0
.IP \(bu 2
\fBf22\fP \-\- since 8.0
.IP \(bu 2
\fBf23\fP \-\- since 8.0
.IP \(bu 2
\fBf24\fP \-\- since 8.0
.IP \(bu 2
\fBshift\fP \-\- Not documented
.IP \(bu 2
\fBshift_r\fP \-\- Not documented
.IP \(bu 2
\fBalt\fP \-\- Not documented
.IP \(bu 2
\fBalt_r\fP \-\- Not documented
.IP \(bu 2
\fBctrl\fP \-\- Not documented
.IP \(bu 2
\fBctrl_r\fP \-\- Not documented
.IP \(bu 2
\fBmenu\fP \-\- Not documented
.IP \(bu 2
\fBesc\fP \-\- Not documented
.IP \(bu 2
\fB1\fP \-\- Not documented
.IP \(bu 2
\fB2\fP \-\- Not documented
.IP \(bu 2
\fB3\fP \-\- Not documented
.IP \(bu 2
\fB4\fP \-\- Not documented
.IP \(bu 2
\fB5\fP \-\- Not documented
.IP \(bu 2
\fB6\fP \-\- Not documented
.IP \(bu 2
\fB7\fP \-\- Not documented
.IP \(bu 2
\fB8\fP \-\- Not documented
.IP \(bu 2
\fB9\fP \-\- Not documented
.IP \(bu 2
\fB0\fP \-\- Not documented
.IP \(bu 2
\fBminus\fP \-\- Not documented
.IP \(bu 2
\fBequal\fP \-\- Not documented
.IP \(bu 2
\fBbackspace\fP \-\- Not documented
.IP \(bu 2
\fBtab\fP \-\- Not documented
.IP \(bu 2
\fBq\fP \-\- Not documented
.IP \(bu 2
\fBw\fP \-\- Not documented
.IP \(bu 2
\fBe\fP \-\- Not documented
.IP \(bu 2
\fBr\fP \-\- Not documented
.IP \(bu 2
\fBt\fP \-\- Not documented
.IP \(bu 2
\fBy\fP \-\- Not documented
.IP \(bu 2
\fBu\fP \-\- Not documented
.IP \(bu 2
\fBi\fP \-\- Not documented
.IP \(bu 2
\fBo\fP \-\- Not documented
.IP \(bu 2
\fBp\fP \-\- Not documented
.IP \(bu 2
\fBbracket_left\fP \-\- Not documented
.IP \(bu 2
\fBbracket_right\fP \-\- Not documented
.IP \(bu 2
\fBret\fP \-\- Not documented
.IP \(bu 2
\fBa\fP \-\- Not documented
.IP \(bu 2
\fBs\fP \-\- Not documented
.IP \(bu 2
\fBd\fP \-\- Not documented
.IP \(bu 2
\fBf\fP \-\- Not documented
.IP \(bu 2
\fBg\fP \-\- Not documented
.IP \(bu 2
\fBh\fP \-\- Not documented
.IP \(bu 2
\fBj\fP \-\- Not documented
.IP \(bu 2
\fBk\fP \-\- Not documented
.IP \(bu 2
\fBl\fP \-\- Not documented
.IP \(bu 2
\fBsemicolon\fP \-\- Not documented
.IP \(bu 2
\fBapostrophe\fP \-\- Not documented
.IP \(bu 2
\fBgrave_accent\fP \-\- Not documented
.IP \(bu 2
\fBbackslash\fP \-\- Not documented
.IP \(bu 2
\fBz\fP \-\- Not documented
.IP \(bu 2
\fBx\fP \-\- Not documented
.IP \(bu 2
\fBc\fP \-\- Not documented
.IP \(bu 2
\fBv\fP \-\- Not documented
.IP \(bu 2
\fBb\fP \-\- Not documented
.IP \(bu 2
\fBn\fP \-\- Not documented
.IP \(bu 2
\fBm\fP \-\- Not documented
.IP \(bu 2
\fBcomma\fP \-\- Not documented
.IP \(bu 2
\fBdot\fP \-\- Not documented
.IP \(bu 2
\fBslash\fP \-\- Not documented
.IP \(bu 2
\fBasterisk\fP \-\- Not documented
.IP \(bu 2
\fBspc\fP \-\- Not documented
.IP \(bu 2
\fBcaps_lock\fP \-\- Not documented
.IP \(bu 2
\fBf1\fP \-\- Not documented
.IP \(bu 2
\fBf2\fP \-\- Not documented
.IP \(bu 2
\fBf3\fP \-\- Not documented
.IP \(bu 2
\fBf4\fP \-\- Not documented
.IP \(bu 2
\fBf5\fP \-\- Not documented
.IP \(bu 2
\fBf6\fP \-\- Not documented
.IP \(bu 2
\fBf7\fP \-\- Not documented
.IP \(bu 2
\fBf8\fP \-\- Not documented
.IP \(bu 2
\fBf9\fP \-\- Not documented
.IP \(bu 2
\fBf10\fP \-\- Not documented
.IP \(bu 2
\fBnum_lock\fP \-\- Not documented
.IP \(bu 2
\fBscroll_lock\fP \-\- Not documented
.IP \(bu 2
\fBkp_divide\fP \-\- Not documented
.IP \(bu 2
\fBkp_multiply\fP \-\- Not documented
.IP \(bu 2
\fBkp_subtract\fP \-\- Not documented
.IP \(bu 2
\fBkp_add\fP \-\- Not documented
.IP \(bu 2
\fBkp_enter\fP \-\- Not documented
.IP \(bu 2
\fBkp_decimal\fP \-\- Not documented
.IP \(bu 2
\fBsysrq\fP \-\- Not documented
.IP \(bu 2
\fBkp_0\fP \-\- Not documented
.IP \(bu 2
\fBkp_1\fP \-\- Not documented
.IP \(bu 2
\fBkp_2\fP \-\- Not documented
.IP \(bu 2
\fBkp_3\fP \-\- Not documented
.IP \(bu 2
\fBkp_4\fP \-\- Not documented
.IP \(bu 2
\fBkp_5\fP \-\- Not documented
.IP \(bu 2
\fBkp_6\fP \-\- Not documented
.IP \(bu 2
\fBkp_7\fP \-\- Not documented
.IP \(bu 2
\fBkp_8\fP \-\- Not documented
.IP \(bu 2
\fBkp_9\fP \-\- Not documented
.IP \(bu 2
\fBless\fP \-\- Not documented
.IP \(bu 2
\fBf11\fP \-\- Not documented
.IP \(bu 2
\fBf12\fP \-\- Not documented
.IP \(bu 2
\fBprint\fP \-\- Not documented
.IP \(bu 2
\fBhome\fP \-\- Not documented
.IP \(bu 2
\fBpgup\fP \-\- Not documented
.IP \(bu 2
\fBpgdn\fP \-\- Not documented
.IP \(bu 2
\fBend\fP \-\- Not documented
.IP \(bu 2
\fBleft\fP \-\- Not documented
.IP \(bu 2
\fBup\fP \-\- Not documented
.IP \(bu 2
\fBdown\fP \-\- Not documented
.IP \(bu 2
\fBright\fP \-\- Not documented
.IP \(bu 2
\fBinsert\fP \-\- Not documented
.IP \(bu 2
\fBdelete\fP \-\- Not documented
.IP \(bu 2
\fBstop\fP \-\- Not documented
.IP \(bu 2
\fBagain\fP \-\- Not documented
.IP \(bu 2
\fBprops\fP \-\- Not documented
.IP \(bu 2
\fBundo\fP \-\- Not documented
.IP \(bu 2
\fBfront\fP \-\- Not documented
.IP \(bu 2
\fBcopy\fP \-\- Not documented
.IP \(bu 2
\fBopen\fP \-\- Not documented
.IP \(bu 2
\fBpaste\fP \-\- Not documented
.IP \(bu 2
\fBfind\fP \-\- Not documented
.IP \(bu 2
\fBcut\fP \-\- Not documented
.IP \(bu 2
\fBlf\fP \-\- Not documented
.IP \(bu 2
\fBhelp\fP \-\- Not documented
.IP \(bu 2
\fBmeta_l\fP \-\- Not documented
.IP \(bu 2
\fBmeta_r\fP \-\- Not documented
.IP \(bu 2
\fBcompose\fP \-\- Not documented
.UNINDENT
.UNINDENT
.sp
\(aqsysrq\(aq was mistakenly added to hack around the fact that the ps2
driver was not generating correct scancodes sequences when
\(aqalt+print\(aq was pressed.  This flaw is now fixed and the \(aqsysrq\(aq key
serves no further purpose.  Any further use of \(aqsysrq\(aq will be
transparently changed to \(aqprint\(aq, so they are effectively synonyms.
.UNINDENT
.INDENT 0.0
.TP
.B Enum  KeyValueKind  (Since: 1.3)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnumber\fP \-\- Not documented
.IP \(bu 2
\fBqcode\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  IntWrapper  (Since: 1.3)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fBint\fP) \-\- a numeric key code
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QKeyCodeWrapper  (Since: 1.3)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%QKeyCode\fP) \-\- An enumeration of key name
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  KeyValue  (Since: 1.3)
Represents a keyboard key.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%KeyValueKind\fP) \-\- key encoding
.IP \(bu 2
When \fBtype\fP is \fBnumber\fP: The members of \fI\%IntWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBqcode\fP: The members of \fI\%QKeyCodeWrapper\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  send\-key  (Since: 1.3)
Send keys to guest.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBkeys\fP (\fB[\fP\fI\%KeyValue\fP\fB]\fP) \-\- An array of \fBKeyValue\fP elements.  All \fBKeyValues\fP in this array
are simultaneously sent to the guest.  A \fBKeyValue\fP\&.number value
is sent directly to the guest, while \fBKeyValue\fP\&.qcode must be a
valid \fBQKeyCode\fP value
.IP \(bu 2
\fBhold\-time\fP (\fBint\fP, \fIoptional\fP) \-\- time to delay key up events, milliseconds.  Defaults to
100
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If key is unknown or redundant, GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqsend\-key\(dq,
     \(dqarguments\(dq: { \(dqkeys\(dq: [ { \(dqtype\(dq: \(dqqcode\(dq, \(dqdata\(dq: \(dqctrl\(dq },
                              { \(dqtype\(dq: \(dqqcode\(dq, \(dqdata\(dq: \(dqalt\(dq },
                              { \(dqtype\(dq: \(dqqcode\(dq, \(dqdata\(dq: \(dqdelete\(dq } ] } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  InputButton  (Since: 2.0)
Button of a pointer input device (mouse, tablet).
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBside\fP \-\- front side button of a 5\-button mouse (since 2.9)
.IP \(bu 2
\fBextra\fP \-\- rear side button of a 5\-button mouse (since 2.9)
.IP \(bu 2
\fBtouch\fP \-\- screen contact on a multi\-touch device (since 8.1)
.IP \(bu 2
\fBleft\fP \-\- Not documented
.IP \(bu 2
\fBmiddle\fP \-\- Not documented
.IP \(bu 2
\fBright\fP \-\- Not documented
.IP \(bu 2
\fBwheel\-up\fP \-\- Not documented
.IP \(bu 2
\fBwheel\-down\fP \-\- Not documented
.IP \(bu 2
\fBwheel\-left\fP \-\- Not documented
.IP \(bu 2
\fBwheel\-right\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  InputAxis  (Since: 2.0)
Position axis of a pointer input device (mouse, tablet).
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBx\fP \-\- Not documented
.IP \(bu 2
\fBy\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  InputMultiTouchType  (Since: 8.1)
Type of a multi\-touch event.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBbegin\fP \-\- A new touch event sequence has just started.
.IP \(bu 2
\fBupdate\fP \-\- A touch event sequence has been updated.
.IP \(bu 2
\fBend\fP \-\- A touch event sequence has finished.
.IP \(bu 2
\fBcancel\fP \-\- A touch event sequence has been canceled.
.IP \(bu 2
\fBdata\fP \-\- Absolute position data.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  InputKeyEvent  (Since: 2.0)
Keyboard input event.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBkey\fP (\fI\%KeyValue\fP) \-\- Which key this event is for.
.IP \(bu 2
\fBdown\fP (\fBboolean\fP) \-\- True for key\-down and false for key\-up events.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  InputBtnEvent  (Since: 2.0)
Pointer button input event.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBbutton\fP (\fI\%InputButton\fP) \-\- Which button this event is for.
.IP \(bu 2
\fBdown\fP (\fBboolean\fP) \-\- True for key\-down and false for key\-up events.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  InputMoveEvent  (Since: 2.0)
Pointer motion input event.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBaxis\fP (\fI\%InputAxis\fP) \-\- Which axis is referenced by \fBvalue\fP\&.
.IP \(bu 2
\fBvalue\fP (\fBint\fP) \-\- Pointer position.  For absolute coordinates the valid range
is 0 to 0x7fff.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  InputMultiTouchEvent  (Since: 8.1)
MultiTouch input event.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%InputMultiTouchType\fP) \-\- The type of multi\-touch event.
.IP \(bu 2
\fBslot\fP (\fBint\fP) \-\- Which slot has generated the event.
.IP \(bu 2
\fBtracking\-id\fP (\fBint\fP) \-\- ID to correlate this event with previously generated
events.
.IP \(bu 2
\fBaxis\fP (\fI\%InputAxis\fP) \-\- Which axis is referenced by \fBvalue\fP\&.
.IP \(bu 2
\fBvalue\fP (\fBint\fP) \-\- Contact position.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  InputEventKind  (Since: 2.0)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBkey\fP \-\- a keyboard input event
.IP \(bu 2
\fBbtn\fP \-\- a pointer button input event
.IP \(bu 2
\fBrel\fP \-\- a relative pointer motion input event
.IP \(bu 2
\fBabs\fP \-\- an absolute pointer motion input event
.IP \(bu 2
\fBmtt\fP \-\- a multi\-touch input event
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  InputKeyEventWrapper  (Since: 2.0)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%InputKeyEvent\fP) \-\- Keyboard input event
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  InputBtnEventWrapper  (Since: 2.0)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%InputBtnEvent\fP) \-\- Pointer button input event
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  InputMoveEventWrapper  (Since: 2.0)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%InputMoveEvent\fP) \-\- Pointer motion input event
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  InputMultiTouchEventWrapper  (Since: 8.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%InputMultiTouchEvent\fP) \-\- MultiTouch input event
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  InputEvent  (Since: 2.0)
Input event union.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%InputEventKind\fP) \-\- the type of input event
.IP \(bu 2
When \fBtype\fP is \fBkey\fP: The members of \fI\%InputKeyEventWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBbtn\fP: The members of \fI\%InputBtnEventWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBrel\fP: The members of \fI\%InputMoveEventWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBabs\fP: The members of \fI\%InputMoveEventWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBmtt\fP: The members of \fI\%InputMultiTouchEventWrapper\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  input\-send\-event  (Since: 2.6)
Send input event(s) to guest.
.sp
The \fBdevice\fP and \fBhead\fP parameters can be used to send the input event
to specific input devices in case (a) multiple input devices of the
same kind are added to the virtual machine and (b) you have
configured input routing (see docs/multiseat.txt) for those input
devices.  The parameters work exactly like the device and head
properties of input devices.  If \fBdevice\fP is missing, only devices
that have no input routing config are admissible.  If \fBdevice\fP is
specified, both input devices with and without input routing config
are admissible, but devices with input routing config take
precedence.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP, \fIoptional\fP) \-\- display device to send event(s) to.
.IP \(bu 2
\fBhead\fP (\fBint\fP, \fIoptional\fP) \-\- head to send event(s) to, in case the display device supports
multiple scanouts.
.IP \(bu 2
\fBevents\fP (\fB[\fP\fI\%InputEvent\fP\fB]\fP) \-\- List of InputEvent union.
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
The consoles are visible in the qom tree, under
\fB/backend/console[$index]\fP\&.  They have a device link and head
property, so it is possible to map which console belongs to which
device and display.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Press left mouse button"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqinput\-send\-event\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqvideo0\(dq,
                    \(dqevents\(dq: [ { \(dqtype\(dq: \(dqbtn\(dq,
                    \(dqdata\(dq : { \(dqdown\(dq: true, \(dqbutton\(dq: \(dqleft\(dq } } ] } }
 <\- { \(dqreturn\(dq: {} }

 \-> { \(dqexecute\(dq: \(dqinput\-send\-event\(dq,
     \(dqarguments\(dq: { \(dqdevice\(dq: \(dqvideo0\(dq,
                    \(dqevents\(dq: [ { \(dqtype\(dq: \(dqbtn\(dq,
                    \(dqdata\(dq : { \(dqdown\(dq: false, \(dqbutton\(dq: \(dqleft\(dq } } ] } }
 <\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Press ctrl\-alt\-del"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqinput\-send\-event\(dq,
      \(dqarguments\(dq: { \(dqevents\(dq: [
         { \(dqtype\(dq: \(dqkey\(dq, \(dqdata\(dq : { \(dqdown\(dq: true,
           \(dqkey\(dq: {\(dqtype\(dq: \(dqqcode\(dq, \(dqdata\(dq: \(dqctrl\(dq } } },
         { \(dqtype\(dq: \(dqkey\(dq, \(dqdata\(dq : { \(dqdown\(dq: true,
           \(dqkey\(dq: {\(dqtype\(dq: \(dqqcode\(dq, \(dqdata\(dq: \(dqalt\(dq } } },
         { \(dqtype\(dq: \(dqkey\(dq, \(dqdata\(dq : { \(dqdown\(dq: true,
           \(dqkey\(dq: {\(dqtype\(dq: \(dqqcode\(dq, \(dqdata\(dq: \(dqdelete\(dq } } } ] } }
 <\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Move mouse pointer to absolute coordinates"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqinput\-send\-event\(dq ,
   \(dqarguments\(dq: { \(dqevents\(dq: [
                { \(dqtype\(dq: \(dqabs\(dq, \(dqdata\(dq : { \(dqaxis\(dq: \(dqx\(dq, \(dqvalue\(dq : 20000 } },
                { \(dqtype\(dq: \(dqabs\(dq, \(dqdata\(dq : { \(dqaxis\(dq: \(dqy\(dq, \(dqvalue\(dq : 400 } } ] } }
 <\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DisplayGTK  (Since: 2.12)
GTK display options.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBgrab\-on\-hover\fP (\fBboolean\fP, \fIoptional\fP) \-\- Grab keyboard input on mouse hover.
.IP \(bu 2
\fBzoom\-to\-fit\fP (\fBboolean\fP, \fIoptional\fP) \-\- Zoom guest display to fit into the host window.  When
turned off the host window will be resized instead.  In case the
display device can notify the guest on window resizes
(virtio\-gpu) this will default to \(dqon\(dq, assuming the guest will
resize the display to match the window size then.  Otherwise it
defaults to \(dqoff\(dq.  (Since 3.1)
.IP \(bu 2
\fBshow\-tabs\fP (\fBboolean\fP, \fIoptional\fP) \-\- Display the tab bar for switching between the various
graphical interfaces (e.g. VGA and virtual console character
devices) by default.  (Since 7.1)
.IP \(bu 2
\fBshow\-menubar\fP (\fBboolean\fP, \fIoptional\fP) \-\- Display the main window menubar.  Defaults to \(dqon\(dq.
(Since 8.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DisplayEGLHeadless  (Since: 3.1)
EGL headless display options.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBrendernode\fP (\fBstring\fP, \fIoptional\fP) \-\- Which DRM render node should be used.  Default is the
first available node on the host.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DisplayDBus  (Since: 7.0)
DBus display options.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBaddr\fP (\fBstring\fP, \fIoptional\fP) \-\- The D\-Bus bus address (default to the session bus).
.IP \(bu 2
\fBrendernode\fP (\fBstring\fP, \fIoptional\fP) \-\- Which DRM render node should be used.  Default is the
first available node on the host.
.IP \(bu 2
\fBp2p\fP (\fBboolean\fP, \fIoptional\fP) \-\- Whether to use peer\-to\-peer connections (accepted through
\fBadd_client\fP).
.IP \(bu 2
\fBaudiodev\fP (\fBstring\fP, \fIoptional\fP) \-\- Use the specified DBus audiodev to export audio.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  DisplayGLMode  (Since: 3.0)
Display OpenGL mode.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBoff\fP \-\- Disable OpenGL (default).
.IP \(bu 2
\fBon\fP \-\- Use OpenGL, pick context type automatically.  Would better be
named \(aqauto\(aq but is called \(aqon\(aq for backward compatibility with
bool type.
.IP \(bu 2
\fBcore\fP \-\- Use OpenGL with Core (desktop) Context.
.IP \(bu 2
\fBes\fP \-\- Use OpenGL with ES (embedded systems) Context.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DisplayCurses  (Since: 4.0)
Curses display options.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcharset\fP (\fBstring\fP, \fIoptional\fP) \-\- Font charset used by guest (default: CP437).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DisplayCocoa  (Since: 7.0)
Cocoa display options.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBleft\-command\-key\fP (\fBboolean\fP, \fIoptional\fP) \-\- Enable/disable forwarding of left command key to
guest.  Allows command\-tab window switching on the host without
sending this key to the guest when \(dqoff\(dq.  Defaults to \(dqon\(dq
.IP \(bu 2
\fBfull\-grab\fP (\fBboolean\fP, \fIoptional\fP) \-\- Capture all key presses, including system combos.  This
requires accessibility permissions, since it performs a global
grab on key events.  (default: off)  See
\fI\%https://support.apple.com/en\-in/guide/mac\-help/mh32356/mac\fP
.IP \(bu 2
\fBswap\-opt\-cmd\fP (\fBboolean\fP, \fIoptional\fP) \-\- Swap the Option and Command keys so that their key
codes match their position on non\-Mac keyboards and you can use
Meta/Super and Alt where you expect them.  (default: off)
.IP \(bu 2
\fBzoom\-to\-fit\fP (\fBboolean\fP, \fIoptional\fP) \-\- Zoom guest display to fit into the host window.  When
turned off the host window will be resized instead.  Defaults to
\(dqoff\(dq.  (Since 8.2)
.IP \(bu 2
\fBzoom\-interpolation\fP (\fBboolean\fP, \fIoptional\fP) \-\- Apply interpolation to smooth output when
zoom\-to\-fit is enabled.  Defaults to \(dqoff\(dq.  (Since 9.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  HotKeyMod  (Since: 7.1)
Set of modifier keys that need to be held for shortcut key actions.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBlctrl\-lalt\fP \-\- Not documented
.IP \(bu 2
\fBlshift\-lctrl\-lalt\fP \-\- Not documented
.IP \(bu 2
\fBrctrl\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DisplaySDL  (Since: 7.1)
SDL2 display options.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBgrab\-mod\fP (\fI\%HotKeyMod\fP, \fIoptional\fP) \-\- Modifier keys that should be pressed together with the
\(dqG\(dq key to release the mouse grab.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  DisplayType  (Since: 2.12)
Display (user interface) type.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBdefault\fP \-\- The default user interface, selecting from the first
available of gtk, sdl, cocoa, and vnc.
.IP \(bu 2
\fBnone\fP \-\- No user interface or video output display.  The guest will
still see an emulated graphics card, but its output will not be
displayed to the QEMU user.
.IP \(bu 2
\fBgtk\fP \-\- The GTK user interface.
.IP \(bu 2
\fBsdl\fP \-\- The SDL user interface.
.IP \(bu 2
\fBegl\-headless\fP \-\- No user interface, offload GL operations to a local
DRI device.  Graphical display need to be paired with VNC or
Spice.  (Since 3.1)
.IP \(bu 2
\fBcurses\fP \-\- Display video output via curses.  For graphics device
models which support a text mode, QEMU can display this output
using a curses/ncurses interface.  Nothing is displayed when the
graphics device is in graphical mode or if the graphics device
does not support a text mode.  Generally only the VGA device
models support text mode.
.IP \(bu 2
\fBcocoa\fP \-\- The Cocoa user interface.
.IP \(bu 2
\fBspice\-app\fP \-\- Set up a Spice server and run the default associated
application to connect to it.  The server will redirect the
serial console and QEMU monitors.  (Since 4.0)
.IP \(bu 2
\fBdbus\fP \-\- Start a D\-Bus service for the display.  (Since 7.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DisplayOptions  (Since: 2.12)
Display (user interface) options.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%DisplayType\fP) \-\- Which DisplayType qemu should use.
.IP \(bu 2
\fBfull\-screen\fP (\fBboolean\fP, \fIoptional\fP) \-\- Start user interface in fullscreen mode
(default: off).
.IP \(bu 2
\fBwindow\-close\fP (\fBboolean\fP, \fIoptional\fP) \-\- Allow to quit qemu with window close button
(default: on).
.IP \(bu 2
\fBshow\-cursor\fP (\fBboolean\fP, \fIoptional\fP) \-\- Force showing the mouse cursor (default: off).
(since: 5.0)
.IP \(bu 2
\fBgl\fP (\fI\%DisplayGLMode\fP, \fIoptional\fP) \-\- Enable OpenGL support (default: off).
.IP \(bu 2
When \fBtype\fP is \fBgtk\fP: The members of \fI\%DisplayGTK\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBcocoa\fP: The members of \fI\%DisplayCocoa\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBcurses\fP: The members of \fI\%DisplayCurses\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBegl\-headless\fP: The members of \fI\%DisplayEGLHeadless\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBdbus\fP: The members of \fI\%DisplayDBus\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBsdl\fP: The members of \fI\%DisplaySDL\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-display\-options  (Since: 3.1)
Return information about display configuration
.INDENT 7.0
.TP
.B Return
\fI\%DisplayOptions\fP \-\- \fBDisplayOptions\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  DisplayReloadType  (Since: 6.0)
Available DisplayReload types.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBvnc\fP \-\- VNC display
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DisplayReloadOptionsVNC  (Since: 6.0)
Specify the VNC reload options.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtls\-certs\fP (\fBboolean\fP, \fIoptional\fP) \-\- reload tls certs or not.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DisplayReloadOptions  (Since: 6.0)
Options of the display configuration reload.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%DisplayReloadType\fP) \-\- Specify the display type.
.IP \(bu 2
When \fBtype\fP is \fBvnc\fP: The members of \fI\%DisplayReloadOptionsVNC\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  display\-reload  (Since: 6.0)
Reload display configuration.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%DisplayReloadOptions\fP\&.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqdisplay\-reload\(dq,
     \(dqarguments\(dq: { \(dqtype\(dq: \(dqvnc\(dq, \(dqtls\-certs\(dq: true  } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  DisplayUpdateType  (Since: 7.1)
Available DisplayUpdate types.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBvnc\fP \-\- VNC display
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DisplayUpdateOptionsVNC  (Since: 7.1)
Specify the VNC reload options.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBaddresses\fP (\fB[\fP\fI\%SocketAddress\fP\fB]\fP, \fIoptional\fP) \-\- If specified, change set of addresses to listen for
connections.  Addresses configured for websockets are not
touched.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DisplayUpdateOptions  (Since: 7.1)
Options of the display configuration reload.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%DisplayUpdateType\fP) \-\- Specify the display type.
.IP \(bu 2
When \fBtype\fP is \fBvnc\fP: The members of \fI\%DisplayUpdateOptionsVNC\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  display\-update  (Since: 7.1)
Update display configuration.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%DisplayUpdateOptions\fP\&.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqdisplay\-update\(dq,
     \(dqarguments\(dq: { \(dqtype\(dq: \(dqvnc\(dq, \(dqaddresses\(dq:
                    [ { \(dqtype\(dq: \(dqinet\(dq, \(dqhost\(dq: \(dq0.0.0.0\(dq,
                        \(dqport\(dq: \(dq5901\(dq } ] } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  client_migrate_info  (Since: 0.14)
Set migration information for remote display.  This makes the server
ask the client to automatically reconnect using the new parameters
once migration finished successfully.  Only implemented for SPICE.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBprotocol\fP (\fBstring\fP) \-\- must be \(dqspice\(dq
.IP \(bu 2
\fBhostname\fP (\fBstring\fP) \-\- migration target hostname
.IP \(bu 2
\fBport\fP (\fBint\fP, \fIoptional\fP) \-\- spice tcp port for plaintext channels
.IP \(bu 2
\fBtls\-port\fP (\fBint\fP, \fIoptional\fP) \-\- spice tcp port for tls\-secured channels
.IP \(bu 2
\fBcert\-subject\fP (\fBstring\fP, \fIoptional\fP) \-\- server certificate subject
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqclient_migrate_info\(dq,
     \(dqarguments\(dq: { \(dqprotocol\(dq: \(dqspice\(dq,
                    \(dqhostname\(dq: \(dqvirt42.lab.kraxel.org\(dq,
                    \(dqport\(dq: 1234 } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH USER AUTHORIZATION
.INDENT 0.0
.TP
.B Enum  QAuthZListPolicy  (Since: 4.0)
The authorization policy result
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBdeny\fP \-\- deny access
.IP \(bu 2
\fBallow\fP \-\- allow access
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QAuthZListFormat  (Since: 4.0)
The authorization policy match format
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBexact\fP \-\- an exact string match
.IP \(bu 2
\fBglob\fP \-\- string with ? and * shell wildcard support
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QAuthZListRule  (Since: 4.0)
A single authorization rule.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmatch\fP (\fBstring\fP) \-\- a string or glob to match against a user identity
.IP \(bu 2
\fBpolicy\fP (\fI\%QAuthZListPolicy\fP) \-\- the result to return if \fBmatch\fP evaluates to true
.IP \(bu 2
\fBformat\fP (\fI\%QAuthZListFormat\fP, \fIoptional\fP) \-\- the format of the \fBmatch\fP rule (default \(aqexact\(aq)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AuthZListProperties  (Since: 4.0)
Properties for authz\-list objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpolicy\fP (\fI\%QAuthZListPolicy\fP, \fIoptional\fP) \-\- Default policy to apply when no rule matches (default:
deny)
.IP \(bu 2
\fBrules\fP (\fB[\fP\fI\%QAuthZListRule\fP\fB]\fP, \fIoptional\fP) \-\- Authorization rules based on matching user
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AuthZListFileProperties  (Since: 4.0)
Properties for authz\-listfile objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- File name to load the configuration from.  The file must
contain valid JSON for AuthZListProperties.
.IP \(bu 2
\fBrefresh\fP (\fBboolean\fP, \fIoptional\fP) \-\- If true, inotify is used to monitor the file,
automatically reloading changes.  If an error occurs during
reloading, all authorizations will fail until the file is next
successfully loaded.  (default: true if the binary was built
with CONFIG_INOTIFY1, false otherwise)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AuthZPAMProperties  (Since: 4.0)
Properties for authz\-pam objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBservice\fP (\fBstring\fP) \-\- PAM service name to use for authorization
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AuthZSimpleProperties  (Since: 4.0)
Properties for authz\-simple objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBidentity\fP (\fBstring\fP) \-\- Identifies the allowed user.  Its format depends on the
network service that authorization object is associated with.
For authorizing based on TLS x509 certificates, the identity
must be the x509 distinguished name.
.UNINDENT
.UNINDENT
.UNINDENT
.SH MIGRATION
.INDENT 0.0
.TP
.B Object  MigrationStats  (Since: 0.14)
Detailed migration status.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtransferred\fP (\fBint\fP) \-\- amount of bytes already transferred to the target VM
.IP \(bu 2
\fBremaining\fP (\fBint\fP) \-\- amount of bytes remaining to be transferred to the
target VM
.IP \(bu 2
\fBtotal\fP (\fBint\fP) \-\- total amount of bytes involved in the migration process
.IP \(bu 2
\fBduplicate\fP (\fBint\fP) \-\- number of duplicate (zero) pages (since 1.2)
.IP \(bu 2
\fBnormal\fP (\fBint\fP) \-\- number of normal pages (since 1.2)
.IP \(bu 2
\fBnormal\-bytes\fP (\fBint\fP) \-\- number of normal bytes sent (since 1.2)
.IP \(bu 2
\fBdirty\-pages\-rate\fP (\fBint\fP) \-\- number of pages dirtied by second by the guest
(since 1.3)
.IP \(bu 2
\fBmbps\fP (\fBnumber\fP) \-\- throughput in megabits/sec.  (since 1.6)
.IP \(bu 2
\fBdirty\-sync\-count\fP (\fBint\fP) \-\- number of times that dirty ram was synchronized
(since 2.1)
.IP \(bu 2
\fBpostcopy\-requests\fP (\fBint\fP) \-\- The number of page requests received from the
destination (since 2.7)
.IP \(bu 2
\fBpage\-size\fP (\fBint\fP) \-\- The number of bytes per page for the various page\-based
statistics (since 2.10)
.IP \(bu 2
\fBmultifd\-bytes\fP (\fBint\fP) \-\- The number of bytes sent through multifd (since 3.0)
.IP \(bu 2
\fBpages\-per\-second\fP (\fBint\fP) \-\- the number of memory pages transferred per second
(Since 4.0)
.IP \(bu 2
\fBprecopy\-bytes\fP (\fBint\fP) \-\- The number of bytes sent in the pre\-copy phase
(since 7.0).
.IP \(bu 2
\fBdowntime\-bytes\fP (\fBint\fP) \-\- The number of bytes sent while the guest is paused
(since 7.0).
.IP \(bu 2
\fBpostcopy\-bytes\fP (\fBint\fP) \-\- The number of bytes sent during the post\-copy phase
(since 7.0).
.IP \(bu 2
\fBdirty\-sync\-missed\-zero\-copy\fP (\fBint\fP) \-\- Number of times dirty RAM
synchronization could not avoid copying dirty pages.  This is
between 0 and \fBdirty\-sync\-count\fP * \fBmultifd\-channels\fP\&.  (since
7.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  XBZRLECacheStats  (Since: 1.2)
Detailed XBZRLE migration cache statistics
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcache\-size\fP (\fBint\fP) \-\- XBZRLE cache size
.IP \(bu 2
\fBbytes\fP (\fBint\fP) \-\- amount of bytes already transferred to the target VM
.IP \(bu 2
\fBpages\fP (\fBint\fP) \-\- amount of pages transferred to the target VM
.IP \(bu 2
\fBcache\-miss\fP (\fBint\fP) \-\- number of cache miss
.IP \(bu 2
\fBcache\-miss\-rate\fP (\fBnumber\fP) \-\- rate of cache miss (since 2.1)
.IP \(bu 2
\fBencoding\-rate\fP (\fBnumber\fP) \-\- rate of encoded bytes (since 5.1)
.IP \(bu 2
\fBoverflow\fP (\fBint\fP) \-\- number of overflows
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CompressionStats  (Since: 3.1)
Detailed migration compression statistics
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpages\fP (\fBint\fP) \-\- amount of pages compressed and transferred to the target VM
.IP \(bu 2
\fBbusy\fP (\fBint\fP) \-\- count of times that no free thread was available to compress
data
.IP \(bu 2
\fBbusy\-rate\fP (\fBnumber\fP) \-\- rate of thread busy
.IP \(bu 2
\fBcompressed\-size\fP (\fBint\fP) \-\- amount of bytes after compression
.IP \(bu 2
\fBcompression\-rate\fP (\fBnumber\fP) \-\- rate of compressed size
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  MigrationStatus  (Since: 2.3)
An enumeration of migration status.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnone\fP \-\- no migration has ever happened.
.IP \(bu 2
\fBsetup\fP \-\- migration process has been initiated.
.IP \(bu 2
\fBcancelling\fP \-\- in the process of cancelling migration.
.IP \(bu 2
\fBcancelled\fP \-\- cancelling migration is finished.
.IP \(bu 2
\fBactive\fP \-\- in the process of doing migration.
.IP \(bu 2
\fBpostcopy\-active\fP \-\- like active, but now in postcopy mode.  (since
2.5)
.IP \(bu 2
\fBpostcopy\-paused\fP \-\- during postcopy but paused.  (since 3.0)
.IP \(bu 2
\fBpostcopy\-recover\-setup\fP \-\- setup phase for a postcopy recovery
process, preparing for a recovery phase to start.  (since 9.1)
.IP \(bu 2
\fBpostcopy\-recover\fP \-\- trying to recover from a paused postcopy.  (since
3.0)
.IP \(bu 2
\fBcompleted\fP \-\- migration is finished.
.IP \(bu 2
\fBfailed\fP \-\- some error occurred during migration process.
.IP \(bu 2
\fBcolo\fP \-\- VM is in the process of fault tolerance, VM can not get into
this state unless colo capability is enabled for migration.
(since 2.8)
.IP \(bu 2
\fBpre\-switchover\fP \-\- Paused before device serialisation.  (since 2.11)
.IP \(bu 2
\fBdevice\fP \-\- During device serialisation (also known as switchover phase).
Before 9.2, this is only used when (1) in precopy, and (2) when
pre\-switchover capability is enabled.  After 10.0, this state will
always be present for every migration procedure as the switchover
phase.  (since 2.11)
.IP \(bu 2
\fBwait\-unplug\fP \-\- wait for device unplug request by guest OS to be
completed.  (since 4.2)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VfioStats  (Since: 5.2)
Detailed VFIO devices migration statistics
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtransferred\fP (\fBint\fP) \-\- amount of bytes transferred to the target VM by VFIO
devices
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MigrationInfo  (Since: 0.14)
Information about current migration process.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBstatus\fP (\fI\%MigrationStatus\fP, \fIoptional\fP) \-\- \fBMigrationStatus\fP describing the current migration status.
If this field is not returned, no migration process has been
initiated
.IP \(bu 2
\fBram\fP (\fI\%MigrationStats\fP, \fIoptional\fP) \-\- \fBMigrationStats\fP containing detailed migration status, only
returned if status is \(aqactive\(aq or \(aqcompleted\(aq(since 1.2)
.IP \(bu 2
\fBxbzrle\-cache\fP (\fI\%XBZRLECacheStats\fP, \fIoptional\fP) \-\- \fBXBZRLECacheStats\fP containing detailed XBZRLE
migration statistics, only returned if XBZRLE feature is on and
status is \(aqactive\(aq or \(aqcompleted\(aq (since 1.2)
.IP \(bu 2
\fBtotal\-time\fP (\fBint\fP, \fIoptional\fP) \-\- total amount of milliseconds since migration started.
If migration has ended, it returns the total migration time.
(since 1.2)
.IP \(bu 2
\fBdowntime\fP (\fBint\fP, \fIoptional\fP) \-\- only present when migration finishes correctly total
downtime in milliseconds for the guest.  (since 1.3)
.IP \(bu 2
\fBexpected\-downtime\fP (\fBint\fP, \fIoptional\fP) \-\- only present while migration is active expected
downtime in milliseconds for the guest in last walk of the dirty
bitmap.  (since 1.3)
.IP \(bu 2
\fBsetup\-time\fP (\fBint\fP, \fIoptional\fP) \-\- amount of setup time in milliseconds \fIbefore\fP the
iterations begin but \fIafter\fP the QMP command is issued.  This is
designed to provide an accounting of any activities (such as
RDMA pinning) which may be expensive, but do not actually occur
during the iterative migration rounds themselves.  (since 1.6)
.IP \(bu 2
\fBcpu\-throttle\-percentage\fP (\fBint\fP, \fIoptional\fP) \-\- percentage of time guest cpus are being
throttled during auto\-converge.  This is only present when
auto\-converge has started throttling guest cpus.  (Since 2.7)
.IP \(bu 2
\fBerror\-desc\fP (\fBstring\fP, \fIoptional\fP) \-\- the human readable error description string.  Clients
should not attempt to parse the error strings.  (Since 2.7)
.IP \(bu 2
\fBpostcopy\-blocktime\fP (\fBint\fP, \fIoptional\fP) \-\- total time when all vCPU were blocked during
postcopy live migration.  This is only present when the
postcopy\-blocktime migration capability is enabled.  (Since 3.0)
.IP \(bu 2
\fBpostcopy\-vcpu\-blocktime\fP (\fB[\fP\fBint\fP\fB]\fP, \fIoptional\fP) \-\- list of the postcopy blocktime per vCPU.
This is only present when the postcopy\-blocktime migration
capability is enabled.  (Since 3.0)
.IP \(bu 2
\fBsocket\-address\fP (\fB[\fP\fI\%SocketAddress\fP\fB]\fP, \fIoptional\fP) \-\- Only used for tcp, to know what the real port is
(Since 4.0)
.IP \(bu 2
\fBvfio\fP (\fI\%VfioStats\fP, \fIoptional\fP) \-\- \fBVfioStats\fP containing detailed VFIO devices migration
statistics, only returned if VFIO device is present, migration
is supported by all VFIO devices and status is \(aqactive\(aq or
\(aqcompleted\(aq (since 5.2)
.IP \(bu 2
\fBblocked\-reasons\fP (\fB[\fP\fBstring\fP\fB]\fP, \fIoptional\fP) \-\- A list of reasons an outgoing migration is
blocked.  Present and non\-empty when migration is blocked.
(since 6.0)
.IP \(bu 2
\fBdirty\-limit\-throttle\-time\-per\-round\fP (\fBint\fP, \fIoptional\fP) \-\- Maximum throttle time (in
microseconds) of virtual CPUs each dirty ring full round, which
shows how MigrationCapability dirty\-limit affects the guest
during live migration.  (Since 8.1)
.IP \(bu 2
\fBdirty\-limit\-ring\-full\-time\fP (\fBint\fP, \fIoptional\fP) \-\- Estimated average dirty ring full time
(in microseconds) for each dirty ring full round.  The value
equals the dirty ring memory size divided by the average dirty
page rate of the virtual CPU, which can be used to observe the
average memory load of the virtual CPU indirectly.  Note that
zero means guest doesn\(aqt dirty memory.  (Since 8.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-migrate  (Since: 0.14)
Return information about current migration process.  If migration
is active there will be another json\-object with RAM migration
status.
.INDENT 7.0
.TP
.B Return
\fI\%MigrationInfo\fP \-\- \fBMigrationInfo\fP
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Before the first migration"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqquery\-migrate\(dq }
 <\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Migration is done and has succeeded"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqquery\-migrate\(dq }
 <\- { \(dqreturn\(dq: {
         \(dqstatus\(dq: \(dqcompleted\(dq,
         \(dqtotal\-time\(dq:12345,
         \(dqsetup\-time\(dq:12345,
         \(dqdowntime\(dq:12345,
         \(dqram\(dq:{
           \(dqtransferred\(dq:123,
           \(dqremaining\(dq:123,
           \(dqtotal\(dq:246,
           \(dqduplicate\(dq:123,
           \(dqnormal\(dq:123,
           \(dqnormal\-bytes\(dq:123456,
           \(dqdirty\-sync\-count\(dq:15
         }
      }
    }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Migration is done and has failed"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqquery\-migrate\(dq }
 <\- { \(dqreturn\(dq: { \(dqstatus\(dq: \(dqfailed\(dq } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Migration is being performed"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqquery\-migrate\(dq }
 <\- {
       \(dqreturn\(dq:{
          \(dqstatus\(dq:\(dqactive\(dq,
          \(dqtotal\-time\(dq:12345,
          \(dqsetup\-time\(dq:12345,
          \(dqexpected\-downtime\(dq:12345,
          \(dqram\(dq:{
             \(dqtransferred\(dq:123,
             \(dqremaining\(dq:123,
             \(dqtotal\(dq:246,
             \(dqduplicate\(dq:123,
             \(dqnormal\(dq:123,
             \(dqnormal\-bytes\(dq:123456,
             \(dqdirty\-sync\-count\(dq:15
          }
       }
    }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Migration is being performed and XBZRLE is active"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqquery\-migrate\(dq }
 <\- {
       \(dqreturn\(dq:{
          \(dqstatus\(dq:\(dqactive\(dq,
          \(dqtotal\-time\(dq:12345,
          \(dqsetup\-time\(dq:12345,
          \(dqexpected\-downtime\(dq:12345,
          \(dqram\(dq:{
             \(dqtotal\(dq:1057024,
             \(dqremaining\(dq:1053304,
             \(dqtransferred\(dq:3720,
             \(dqduplicate\(dq:10,
             \(dqnormal\(dq:3333,
             \(dqnormal\-bytes\(dq:3412992,
             \(dqdirty\-sync\-count\(dq:15
          },
          \(dqxbzrle\-cache\(dq:{
             \(dqcache\-size\(dq:67108864,
             \(dqbytes\(dq:20971520,
             \(dqpages\(dq:2444343,
             \(dqcache\-miss\(dq:2244,
             \(dqcache\-miss\-rate\(dq:0.123,
             \(dqencoding\-rate\(dq:80.1,
             \(dqoverflow\(dq:34434
          }
       }
    }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  MigrationCapability  (Since: 1.2)
Migration capabilities enumeration
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBxbzrle\fP \-\- Migration supports xbzrle (Xor Based Zero Run Length
Encoding).  This feature allows us to minimize migration traffic
for certain work loads, by sending compressed difference of the
pages
.IP \(bu 2
\fBrdma\-pin\-all\fP \-\- Controls whether or not the entire VM memory
footprint is mlock()\(aqd on demand or all at once.  Refer to
docs/rdma.txt for usage.  Disabled by default.  (since 2.0)
.IP \(bu 2
\fBzero\-blocks\fP \-\- During storage migration encode blocks of zeroes
efficiently.  This essentially saves 1MB of zeroes per block on
the wire.  Enabling requires source and target VM to support
this feature.  To enable it is sufficient to enable the
capability on the source VM.  The feature is disabled by
default.  (since 1.6)
.IP \(bu 2
\fBevents\fP \-\- generate events for each migration state change (since 2.4)
.IP \(bu 2
\fBauto\-converge\fP \-\- If enabled, QEMU will automatically throttle down
the guest to speed up convergence of RAM migration.  (since 1.6)
.IP \(bu 2
\fBpostcopy\-ram\fP \-\- Start executing on the migration target before all of
RAM has been migrated, pulling the remaining pages along as
needed.  The capacity must have the same setting on both source
and target or migration will not even start.  NOTE: If the
migration fails during postcopy the VM will fail.  (since 2.6)
.IP \(bu 2
\fBx\-colo\fP \-\- If enabled, migration will never end, and the state of the
VM on the primary side will be migrated continuously to the VM
on secondary side, this process is called COarse\-Grain LOck
Stepping (COLO) for Non\-stop Service.  (since 2.8)
.IP \(bu 2
\fBrelease\-ram\fP \-\- if enabled, qemu will free the migrated ram pages on
the source during postcopy\-ram migration.  (since 2.9)
.IP \(bu 2
\fBreturn\-path\fP \-\- If enabled, migration will use the return path even
for precopy.  (since 2.10)
.IP \(bu 2
\fBpause\-before\-switchover\fP \-\- Pause outgoing migration before
serialising device state and before disabling block IO (since
2.11)
.IP \(bu 2
\fBmultifd\fP \-\- Use more than one fd for migration (since 4.0)
.IP \(bu 2
\fBdirty\-bitmaps\fP \-\- If enabled, QEMU will migrate named dirty bitmaps.
(since 2.12)
.IP \(bu 2
\fBpostcopy\-blocktime\fP \-\- Calculate downtime for postcopy live migration
(since 3.0)
.IP \(bu 2
\fBlate\-block\-activate\fP \-\- If enabled, the destination will not activate
block devices (and thus take locks) immediately at the end of
migration.  (since 3.0)
.IP \(bu 2
\fBx\-ignore\-shared\fP \-\- If enabled, QEMU will not migrate shared memory
that is accessible on the destination machine.  (since 4.0)
.IP \(bu 2
\fBvalidate\-uuid\fP \-\- Send the UUID of the source to allow the destination
to ensure it is the same.  (since 4.2)
.IP \(bu 2
\fBbackground\-snapshot\fP \-\- If enabled, the migration stream will be a
snapshot of the VM exactly at the point when the migration
procedure starts.  The VM RAM is saved with running VM.
(since 6.0)
.IP \(bu 2
\fBzero\-copy\-send\fP \-\- Controls behavior on sending memory pages on
migration.  When true, enables a zero\-copy mechanism for sending
memory pages, if host supports it.  Requires that QEMU be
permitted to use locked memory for guest RAM pages.  (since 7.1)
.IP \(bu 2
\fBpostcopy\-preempt\fP \-\- If enabled, the migration process will allow
postcopy requests to preempt precopy stream, so postcopy
requests will be handled faster.  This is a performance feature
and should not affect the correctness of postcopy migration.
(since 7.1)
.IP \(bu 2
\fBswitchover\-ack\fP \-\- If enabled, migration will not stop the source VM
and complete the migration until an ACK is received from the
destination that it\(aqs OK to do so.  Exactly when this ACK is
sent depends on the migrated devices that use this feature.  For
example, a device can use it to make sure some of its data is
sent and loaded in the destination before doing switchover.
This can reduce downtime if devices that support this capability
are present.  \(aqreturn\-path\(aq capability must be enabled to use
it.  (since 8.1)
.IP \(bu 2
\fBdirty\-limit\fP \-\- If enabled, migration will throttle vCPUs as needed to
keep their dirty page rate within \fBvcpu\-dirty\-limit\fP\&.  This can
improve responsiveness of large guests during live migration,
and can result in more stable read performance.  Requires KVM
with accelerator property \(dqdirty\-ring\-size\(dq set.  (Since 8.1)
.IP \(bu 2
\fBmapped\-ram\fP \-\- Migrate using fixed offsets in the migration file for
each RAM page.  Requires a migration URI that supports seeking,
such as a file.  (since 9.0)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- Members \fBx\-colo\fP and \fBx\-ignore\-shared\fP are experimental.
.IP \(bu 2
\fBdeprecated\fP \-\- Member \fBzero\-blocks\fP is deprecated as being part of
block migration which was already removed.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MigrationCapabilityStatus  (Since: 1.2)
Migration capability information
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcapability\fP (\fI\%MigrationCapability\fP) \-\- capability enum
.IP \(bu 2
\fBstate\fP (\fBboolean\fP) \-\- capability state bool
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  migrate\-set\-capabilities  (Since: 1.2)
Enable/Disable the following migration capabilities (like xbzrle)
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBcapabilities\fP (\fB[\fP\fI\%MigrationCapabilityStatus\fP\fB]\fP) \-\- json array of capability modifications to make
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqmigrate\-set\-capabilities\(dq , \(dqarguments\(dq:
     { \(dqcapabilities\(dq: [ { \(dqcapability\(dq: \(dqxbzrle\(dq, \(dqstate\(dq: true } ] } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-migrate\-capabilities  (Since: 1.2)
Return information about the current migration capabilities status
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%MigrationCapabilityStatus\fP\fB]\fP \-\- \fBMigrationCapabilityStatus\fP
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-migrate\-capabilities\(dq }
<\- { \(dqreturn\(dq: [
      {\(dqstate\(dq: false, \(dqcapability\(dq: \(dqxbzrle\(dq},
      {\(dqstate\(dq: false, \(dqcapability\(dq: \(dqrdma\-pin\-all\(dq},
      {\(dqstate\(dq: false, \(dqcapability\(dq: \(dqauto\-converge\(dq},
      {\(dqstate\(dq: false, \(dqcapability\(dq: \(dqzero\-blocks\(dq},
      {\(dqstate\(dq: true, \(dqcapability\(dq: \(dqevents\(dq},
      {\(dqstate\(dq: false, \(dqcapability\(dq: \(dqpostcopy\-ram\(dq},
      {\(dqstate\(dq: false, \(dqcapability\(dq: \(dqx\-colo\(dq}
   ]}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  MultiFDCompression  (Since: 5.0)
An enumeration of multifd compression methods.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnone\fP \-\- no compression.
.IP \(bu 2
\fBzlib\fP \-\- use zlib compression method.
.IP \(bu 2
\fBzstd\fP \-\- use zstd compression method.
.IP \(bu 2
\fBqatzip\fP \-\- use qatzip compression method.  (Since 9.2)
.IP \(bu 2
\fBqpl\fP \-\- use qpl compression method.  Query Processing Library(qpl) is
based on the deflate compression algorithm and use the Intel
In\-Memory Analytics Accelerator(IAA) accelerated compression and
decompression.  (Since 9.1)
.IP \(bu 2
\fBuadk\fP \-\- use UADK library compression method.  (Since 9.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  MigMode
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnormal\fP \-\- the original form of migration.  (since 8.2)
.IP \(bu 2
\fBcpr\-reboot\fP \-\- 
.sp
The migrate command stops the VM and saves state to the
URI.  After quitting QEMU, the user resumes by running QEMU
\-incoming.
.sp
This mode allows the user to quit QEMU, optionally update and
reboot the OS, and restart QEMU.  If the user reboots, the URI
must persist across the reboot, such as by using a file.
.sp
Unlike normal mode, the use of certain local storage options
does not block the migration, but the user must not modify the
contents of guest block devices between the quit and restart.
.sp
This mode supports VFIO devices provided the user first puts the
guest in the suspended runstate, such as by issuing
guest\-suspend\-ram to the QEMU guest agent.
.sp
Best performance is achieved when the memory backend is shared
and the \fBx\-ignore\-shared\fP migration capability is set, but this
is not required.  Further, if the user reboots before restarting
such a configuration, the shared memory must persist across the
reboot, such as by backing it with a dax device.
.sp
\fBcpr\-reboot\fP may not be used with postcopy, background\-snapshot,
or COLO.
.sp
(since 8.2)

.IP \(bu 2
\fBcpr\-transfer\fP \-\- 
.sp
This mode allows the user to transfer a guest to a
new QEMU instance on the same host with minimal guest pause
time by preserving guest RAM in place.  Devices and their pinned
pages will also be preserved in a future QEMU release.
.sp
The user starts new QEMU on the same host as old QEMU, with
command\-line arguments to create the same machine, plus the
\-incoming option for the main migration channel, like normal
live migration.  In addition, the user adds a second \-incoming
option with channel type \(dqcpr\(dq.  This CPR channel must support
file descriptor transfer with SCM_RIGHTS, i.e. it must be a
UNIX domain socket.
.sp
To initiate CPR, the user issues a migrate command to old QEMU,
adding a second migration channel of type \(dqcpr\(dq in the channels
argument.  Old QEMU stops the VM, saves state to the migration
channels, and enters the postmigrate state.  Execution resumes
in new QEMU.
.sp
New QEMU reads the CPR channel before opening a monitor, hence
the CPR channel cannot be specified in the list of channels for
a migrate\-incoming command.  It may only be specified on the
command line.
.sp
The main channel address cannot be a file type, and for an
inet socket, the port cannot be 0 (meaning dynamically choose
a port).
.sp
Memory\-backend objects must have the share=on attribute, but
memory\-backend\-epc is not supported.  The VM must be started
with the \(aq\-machine aux\-ram\-share=on\(aq option.
.sp
When using \-incoming defer, you must issue the migrate command
to old QEMU before issuing any monitor commands to new QEMU.
However, new QEMU does not open and read the migration stream
until you issue the migrate incoming command.
.sp
(since 10.0)

.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  ZeroPageDetection  (Since: 9.0)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnone\fP \-\- Do not perform zero page checking.
.IP \(bu 2
\fBlegacy\fP \-\- Perform zero page checking in main migration thread.
.IP \(bu 2
\fBmultifd\fP \-\- Perform zero page checking in multifd sender thread if
multifd migration is enabled, else in the main migration thread
as for \fBlegacy\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BitmapMigrationBitmapAliasTransform  (Since: 6.0)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpersistent\fP (\fBboolean\fP, \fIoptional\fP) \-\- If present, the bitmap will be made persistent or
transient depending on this parameter.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BitmapMigrationBitmapAlias  (Since: 5.2)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- The name of the bitmap.
.IP \(bu 2
\fBalias\fP (\fBstring\fP) \-\- An alias name for migration (for example the bitmap name on
the opposite site).
.IP \(bu 2
\fBtransform\fP (\fI\%BitmapMigrationBitmapAliasTransform\fP, \fIoptional\fP) \-\- Allows the modification of the migrated bitmap.  (since
6.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BitmapMigrationNodeAlias  (Since: 5.2)
Maps a block node name and the bitmaps it has to aliases for dirty
bitmap migration.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP) \-\- A block node name.
.IP \(bu 2
\fBalias\fP (\fBstring\fP) \-\- An alias block node name for migration (for example the node
name on the opposite site).
.IP \(bu 2
\fBbitmaps\fP (\fB[\fP\fI\%BitmapMigrationBitmapAlias\fP\fB]\fP) \-\- Mappings for the bitmaps on this node.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  MigrationParameter  (Since: 2.4)
Migration parameters enumeration
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBannounce\-initial\fP \-\- Initial delay (in milliseconds) before sending
the first announce (Since 4.0)
.IP \(bu 2
\fBannounce\-max\fP \-\- Maximum delay (in milliseconds) between packets in
the announcement (Since 4.0)
.IP \(bu 2
\fBannounce\-rounds\fP \-\- Number of self\-announce packets sent after
migration (Since 4.0)
.IP \(bu 2
\fBannounce\-step\fP \-\- Increase in delay (in milliseconds) between
subsequent packets in the announcement (Since 4.0)
.IP \(bu 2
\fBthrottle\-trigger\-threshold\fP \-\- The ratio of bytes_dirty_period and
bytes_xfer_period to trigger throttling.  It is expressed as
percentage.  The default value is 50.  (Since 5.0)
.IP \(bu 2
\fBcpu\-throttle\-initial\fP \-\- Initial percentage of time guest cpus are
throttled when migration auto\-converge is activated.  The
default value is 20.  (Since 2.7)
.IP \(bu 2
\fBcpu\-throttle\-increment\fP \-\- throttle percentage increase each time
auto\-converge detects that migration is not making progress.
The default value is 10.  (Since 2.7)
.IP \(bu 2
\fBcpu\-throttle\-tailslow\fP \-\- Make CPU throttling slower at tail stage At
the tail stage of throttling, the Guest is very sensitive to CPU
percentage while the \fBcpu\-throttle\fP \-increment is excessive
usually at tail stage.  If this parameter is true, we will
compute the ideal CPU percentage used by the Guest, which may
exactly make the dirty rate match the dirty rate threshold.
Then we will choose a smaller throttle increment between the one
specified by \fBcpu\-throttle\-increment\fP and the one generated by
ideal CPU percentage.  Therefore, it is compatible to
traditional throttling, meanwhile the throttle increment won\(aqt
be excessive at tail stage.  The default value is false.  (Since
5.1)
.IP \(bu 2
\fBtls\-creds\fP \-\- ID of the \(aqtls\-creds\(aq object that provides credentials
for establishing a TLS connection over the migration data
channel.  On the outgoing side of the migration, the credentials
must be for a \(aqclient\(aq endpoint, while for the incoming side the
credentials must be for a \(aqserver\(aq endpoint.  Setting this to a
non\-empty string enables TLS for all migrations.  An empty
string means that QEMU will use plain text mode for migration,
rather than TLS.  (Since 2.7)
.IP \(bu 2
\fBtls\-hostname\fP \-\- 
.sp
migration target\(aqs hostname for validating the
server\(aqs x509 certificate identity.  If empty, QEMU will use the
hostname from the migration URI, if any.  A non\-empty value is
required when using x509 based TLS credentials and the migration
URI does not include a hostname, such as fd: or exec: based
migration.  (Since 2.7)
.sp
Note: empty value works only since 2.9.

.IP \(bu 2
\fBtls\-authz\fP \-\- ID of the \(aqauthz\(aq object subclass that provides access
control checking of the TLS x509 certificate distinguished name.
This object is only resolved at time of use, so can be deleted
and recreated on the fly while the migration server is active.
If missing, it will default to denying access (Since 4.0)
.IP \(bu 2
\fBmax\-bandwidth\fP \-\- maximum speed for migration, in bytes per second.
(Since 2.8)
.IP \(bu 2
\fBavail\-switchover\-bandwidth\fP \-\- to set the available bandwidth that
migration can use during switchover phase.  NOTE!  This does not
limit the bandwidth during switchover, but only for calculations
when making decisions to switchover.  By default, this value is
zero, which means QEMU will estimate the bandwidth
automatically.  This can be set when the estimated value is not
accurate, while the user is able to guarantee such bandwidth is
available when switching over.  When specified correctly, this
can make the switchover decision much more accurate.
(Since 8.2)
.IP \(bu 2
\fBdowntime\-limit\fP \-\- set maximum tolerated downtime for migration.
maximum downtime in milliseconds (Since 2.8)
.IP \(bu 2
\fBx\-checkpoint\-delay\fP \-\- The delay time (in ms) between two COLO
checkpoints in periodic mode.  (Since 2.8)
.IP \(bu 2
\fBmultifd\-channels\fP \-\- Number of channels used to migrate data in
parallel.  This is the same number that the number of sockets
used for migration.  The default value is 2 (since 4.0)
.IP \(bu 2
\fBxbzrle\-cache\-size\fP \-\- cache size to be used by XBZRLE migration.  It
needs to be a multiple of the target page size and a power of 2
(Since 2.11)
.IP \(bu 2
\fBmax\-postcopy\-bandwidth\fP \-\- Background transfer bandwidth during
postcopy.  Defaults to 0 (unlimited).  In bytes per second.
(Since 3.0)
.IP \(bu 2
\fBmax\-cpu\-throttle\fP \-\- maximum cpu throttle percentage.  Defaults to 99.
(Since 3.1)
.IP \(bu 2
\fBmultifd\-compression\fP \-\- Which compression method to use.  Defaults to
none.  (Since 5.0)
.IP \(bu 2
\fBmultifd\-zlib\-level\fP \-\- Set the compression level to be used in live
migration, the compression level is an integer between 0 and 9,
where 0 means no compression, 1 means the best compression
speed, and 9 means best compression ratio which will consume
more CPU.  Defaults to 1.  (Since 5.0)
.IP \(bu 2
\fBmultifd\-qatzip\-level\fP \-\- Set the compression level to be used in live
migration. The level is an integer between 1 and 9, where 1 means
the best compression speed, and 9 means the best compression
ratio which will consume more CPU. Defaults to 1.  (Since 9.2)
.IP \(bu 2
\fBmultifd\-zstd\-level\fP \-\- Set the compression level to be used in live
migration, the compression level is an integer between 0 and 20,
where 0 means no compression, 1 means the best compression
speed, and 20 means best compression ratio which will consume
more CPU.  Defaults to 1.  (Since 5.0)
.IP \(bu 2
\fBblock\-bitmap\-mapping\fP \-\- Maps block nodes and bitmaps on them to
aliases for the purpose of dirty bitmap migration.  Such aliases
may for example be the corresponding names on the opposite site.
The mapping must be one\-to\-one, but not necessarily complete: On
the source, unmapped bitmaps and all bitmaps on unmapped nodes
will be ignored.  On the destination, encountering an unmapped
alias in the incoming migration stream will result in a report,
and all further bitmap migration data will then be discarded.
Note that the destination does not know about bitmaps it does
not receive, so there is no limitation or requirement regarding
the number of bitmaps received, or how they are named, or on
which nodes they are placed.  By default (when this parameter
has never been set), bitmap names are mapped to themselves.
Nodes are mapped to their block device name if there is one, and
to their node name otherwise.  (Since 5.2)
.IP \(bu 2
\fBx\-vcpu\-dirty\-limit\-period\fP \-\- Periodic time (in milliseconds) of dirty
limit during live migration.  Should be in the range 1 to
1000ms.  Defaults to 1000ms.  (Since 8.1)
.IP \(bu 2
\fBvcpu\-dirty\-limit\fP \-\- Dirtyrate limit (MB/s) during live migration.
Defaults to 1.  (Since 8.1)
.IP \(bu 2
\fBmode\fP \-\- Migration mode.  See description in \fBMigMode\fP\&.  Default is
\(aqnormal\(aq.  (Since 8.2)
.IP \(bu 2
\fBzero\-page\-detection\fP \-\- Whether and how to detect zero pages.
See description in \fBZeroPageDetection\fP\&.  Default is \(aqmultifd\(aq.
(since 9.0)
.IP \(bu 2
\fBdirect\-io\fP \-\- Open migration files with O_DIRECT when possible.  This
only has effect if the \fBmapped\-ram\fP capability is enabled.
(Since 9.1)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- Members \fBx\-checkpoint\-delay\fP and
\fBx\-vcpu\-dirty\-limit\-period\fP are experimental.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MigrateSetParameters  (Since: 2.4)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBannounce\-initial\fP (\fBint\fP, \fIoptional\fP) \-\- Initial delay (in milliseconds) before sending
the first announce (Since 4.0)
.IP \(bu 2
\fBannounce\-max\fP (\fBint\fP, \fIoptional\fP) \-\- Maximum delay (in milliseconds) between packets in
the announcement (Since 4.0)
.IP \(bu 2
\fBannounce\-rounds\fP (\fBint\fP, \fIoptional\fP) \-\- Number of self\-announce packets sent after
migration (Since 4.0)
.IP \(bu 2
\fBannounce\-step\fP (\fBint\fP, \fIoptional\fP) \-\- Increase in delay (in milliseconds) between
subsequent packets in the announcement (Since 4.0)
.IP \(bu 2
\fBthrottle\-trigger\-threshold\fP (\fBint\fP, \fIoptional\fP) \-\- The ratio of bytes_dirty_period and
bytes_xfer_period to trigger throttling.  It is expressed as
percentage.  The default value is 50.  (Since 5.0)
.IP \(bu 2
\fBcpu\-throttle\-initial\fP (\fBint\fP, \fIoptional\fP) \-\- Initial percentage of time guest cpus are
throttled when migration auto\-converge is activated.  The
default value is 20.  (Since 2.7)
.IP \(bu 2
\fBcpu\-throttle\-increment\fP (\fBint\fP, \fIoptional\fP) \-\- throttle percentage increase each time
auto\-converge detects that migration is not making progress.
The default value is 10.  (Since 2.7)
.IP \(bu 2
\fBcpu\-throttle\-tailslow\fP (\fBboolean\fP, \fIoptional\fP) \-\- Make CPU throttling slower at tail stage At
the tail stage of throttling, the Guest is very sensitive to CPU
percentage while the \fBcpu\-throttle\fP \-increment is excessive
usually at tail stage.  If this parameter is true, we will
compute the ideal CPU percentage used by the Guest, which may
exactly make the dirty rate match the dirty rate threshold.
Then we will choose a smaller throttle increment between the one
specified by \fBcpu\-throttle\-increment\fP and the one generated by
ideal CPU percentage.  Therefore, it is compatible to
traditional throttling, meanwhile the throttle increment won\(aqt
be excessive at tail stage.  The default value is false.  (Since
5.1)
.IP \(bu 2
\fBtls\-creds\fP (\fI\%StrOrNull\fP, \fIoptional\fP) \-\- ID of the \(aqtls\-creds\(aq object that provides credentials
for establishing a TLS connection over the migration data
channel.  On the outgoing side of the migration, the credentials
must be for a \(aqclient\(aq endpoint, while for the incoming side the
credentials must be for a \(aqserver\(aq endpoint.  Setting this to a
non\-empty string enables TLS for all migrations.  An empty
string means that QEMU will use plain text mode for migration,
rather than TLS.  This is the default.  (Since 2.7)
.IP \(bu 2
\fBtls\-hostname\fP (\fI\%StrOrNull\fP, \fIoptional\fP) \-\- 
.sp
migration target\(aqs hostname for validating the
server\(aqs x509 certificate identity.  If empty, QEMU will use the
hostname from the migration URI, if any.  A non\-empty value is
required when using x509 based TLS credentials and the migration
URI does not include a hostname, such as fd: or exec: based
migration.  (Since 2.7)
.sp
Note: empty value works only since 2.9.

.IP \(bu 2
\fBtls\-authz\fP (\fI\%StrOrNull\fP, \fIoptional\fP) \-\- ID of the \(aqauthz\(aq object subclass that provides access
control checking of the TLS x509 certificate distinguished name.
This object is only resolved at time of use, so can be deleted
and recreated on the fly while the migration server is active.
If missing, it will default to denying access (Since 4.0)
.IP \(bu 2
\fBmax\-bandwidth\fP (\fBint\fP, \fIoptional\fP) \-\- maximum speed for migration, in bytes per second.
(Since 2.8)
.IP \(bu 2
\fBavail\-switchover\-bandwidth\fP (\fBint\fP, \fIoptional\fP) \-\- to set the available bandwidth that
migration can use during switchover phase.  NOTE!  This does not
limit the bandwidth during switchover, but only for calculations
when making decisions to switchover.  By default, this value is
zero, which means QEMU will estimate the bandwidth
automatically.  This can be set when the estimated value is not
accurate, while the user is able to guarantee such bandwidth is
available when switching over.  When specified correctly, this
can make the switchover decision much more accurate.
(Since 8.2)
.IP \(bu 2
\fBdowntime\-limit\fP (\fBint\fP, \fIoptional\fP) \-\- set maximum tolerated downtime for migration.
maximum downtime in milliseconds (Since 2.8)
.IP \(bu 2
\fBx\-checkpoint\-delay\fP (\fBint\fP, \fIoptional\fP) \-\- The delay time (in ms) between two COLO
checkpoints in periodic mode.  (Since 2.8)
.IP \(bu 2
\fBmultifd\-channels\fP (\fBint\fP, \fIoptional\fP) \-\- Number of channels used to migrate data in
parallel.  This is the same number that the number of sockets
used for migration.  The default value is 2 (since 4.0)
.IP \(bu 2
\fBxbzrle\-cache\-size\fP (\fBint\fP, \fIoptional\fP) \-\- cache size to be used by XBZRLE migration.  It
needs to be a multiple of the target page size and a power of 2
(Since 2.11)
.IP \(bu 2
\fBmax\-postcopy\-bandwidth\fP (\fBint\fP, \fIoptional\fP) \-\- Background transfer bandwidth during
postcopy.  Defaults to 0 (unlimited).  In bytes per second.
(Since 3.0)
.IP \(bu 2
\fBmax\-cpu\-throttle\fP (\fBint\fP, \fIoptional\fP) \-\- maximum cpu throttle percentage.  Defaults to 99.
(Since 3.1)
.IP \(bu 2
\fBmultifd\-compression\fP (\fI\%MultiFDCompression\fP, \fIoptional\fP) \-\- Which compression method to use.  Defaults to
none.  (Since 5.0)
.IP \(bu 2
\fBmultifd\-zlib\-level\fP (\fBint\fP, \fIoptional\fP) \-\- Set the compression level to be used in live
migration, the compression level is an integer between 0 and 9,
where 0 means no compression, 1 means the best compression
speed, and 9 means best compression ratio which will consume
more CPU.  Defaults to 1.  (Since 5.0)
.IP \(bu 2
\fBmultifd\-qatzip\-level\fP (\fBint\fP, \fIoptional\fP) \-\- Set the compression level to be used in live
migration. The level is an integer between 1 and 9, where 1 means
the best compression speed, and 9 means the best compression
ratio which will consume more CPU. Defaults to 1.  (Since 9.2)
.IP \(bu 2
\fBmultifd\-zstd\-level\fP (\fBint\fP, \fIoptional\fP) \-\- Set the compression level to be used in live
migration, the compression level is an integer between 0 and 20,
where 0 means no compression, 1 means the best compression
speed, and 20 means best compression ratio which will consume
more CPU.  Defaults to 1.  (Since 5.0)
.IP \(bu 2
\fBblock\-bitmap\-mapping\fP (\fB[\fP\fI\%BitmapMigrationNodeAlias\fP\fB]\fP, \fIoptional\fP) \-\- Maps block nodes and bitmaps on them to
aliases for the purpose of dirty bitmap migration.  Such aliases
may for example be the corresponding names on the opposite site.
The mapping must be one\-to\-one, but not necessarily complete: On
the source, unmapped bitmaps and all bitmaps on unmapped nodes
will be ignored.  On the destination, encountering an unmapped
alias in the incoming migration stream will result in a report,
and all further bitmap migration data will then be discarded.
Note that the destination does not know about bitmaps it does
not receive, so there is no limitation or requirement regarding
the number of bitmaps received, or how they are named, or on
which nodes they are placed.  By default (when this parameter
has never been set), bitmap names are mapped to themselves.
Nodes are mapped to their block device name if there is one, and
to their node name otherwise.  (Since 5.2)
.IP \(bu 2
\fBx\-vcpu\-dirty\-limit\-period\fP (\fBint\fP, \fIoptional\fP) \-\- Periodic time (in milliseconds) of dirty
limit during live migration.  Should be in the range 1 to
1000ms.  Defaults to 1000ms.  (Since 8.1)
.IP \(bu 2
\fBvcpu\-dirty\-limit\fP (\fBint\fP, \fIoptional\fP) \-\- Dirtyrate limit (MB/s) during live migration.
Defaults to 1.  (Since 8.1)
.IP \(bu 2
\fBmode\fP (\fI\%MigMode\fP, \fIoptional\fP) \-\- Migration mode.  See description in \fBMigMode\fP\&.  Default is
\(aqnormal\(aq.  (Since 8.2)
.IP \(bu 2
\fBzero\-page\-detection\fP (\fI\%ZeroPageDetection\fP, \fIoptional\fP) \-\- Whether and how to detect zero pages.
See description in \fBZeroPageDetection\fP\&.  Default is \(aqmultifd\(aq.
(since 9.0)
.IP \(bu 2
\fBdirect\-io\fP (\fBboolean\fP, \fIoptional\fP) \-\- Open migration files with O_DIRECT when possible.  This
only has effect if the \fBmapped\-ram\fP capability is enabled.
(Since 9.1)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- Members \fBx\-checkpoint\-delay\fP and
\fBx\-vcpu\-dirty\-limit\-period\fP are experimental.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  migrate\-set\-parameters  (Since: 2.4)
Set various migration parameters.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%MigrateSetParameters\fP\&.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqmigrate\-set\-parameters\(dq ,
     \(dqarguments\(dq: { \(dqmultifd\-channels\(dq: 5 } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MigrationParameters  (Since: 2.4)
The optional members aren\(aqt actually optional.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBannounce\-initial\fP (\fBint\fP, \fIoptional\fP) \-\- Initial delay (in milliseconds) before sending
the first announce (Since 4.0)
.IP \(bu 2
\fBannounce\-max\fP (\fBint\fP, \fIoptional\fP) \-\- Maximum delay (in milliseconds) between packets in
the announcement (Since 4.0)
.IP \(bu 2
\fBannounce\-rounds\fP (\fBint\fP, \fIoptional\fP) \-\- Number of self\-announce packets sent after
migration (Since 4.0)
.IP \(bu 2
\fBannounce\-step\fP (\fBint\fP, \fIoptional\fP) \-\- Increase in delay (in milliseconds) between
subsequent packets in the announcement (Since 4.0)
.IP \(bu 2
\fBthrottle\-trigger\-threshold\fP (\fBint\fP, \fIoptional\fP) \-\- The ratio of bytes_dirty_period and
bytes_xfer_period to trigger throttling.  It is expressed as
percentage.  The default value is 50.  (Since 5.0)
.IP \(bu 2
\fBcpu\-throttle\-initial\fP (\fBint\fP, \fIoptional\fP) \-\- Initial percentage of time guest cpus are
throttled when migration auto\-converge is activated.  (Since
2.7)
.IP \(bu 2
\fBcpu\-throttle\-increment\fP (\fBint\fP, \fIoptional\fP) \-\- throttle percentage increase each time
auto\-converge detects that migration is not making progress.
(Since 2.7)
.IP \(bu 2
\fBcpu\-throttle\-tailslow\fP (\fBboolean\fP, \fIoptional\fP) \-\- Make CPU throttling slower at tail stage At
the tail stage of throttling, the Guest is very sensitive to CPU
percentage while the \fBcpu\-throttle\fP \-increment is excessive
usually at tail stage.  If this parameter is true, we will
compute the ideal CPU percentage used by the Guest, which may
exactly make the dirty rate match the dirty rate threshold.
Then we will choose a smaller throttle increment between the one
specified by \fBcpu\-throttle\-increment\fP and the one generated by
ideal CPU percentage.  Therefore, it is compatible to
traditional throttling, meanwhile the throttle increment won\(aqt
be excessive at tail stage.  The default value is false.  (Since
5.1)
.IP \(bu 2
\fBtls\-creds\fP (\fBstring\fP, \fIoptional\fP) \-\- 
.sp
ID of the \(aqtls\-creds\(aq object that provides credentials
for establishing a TLS connection over the migration data
channel.  On the outgoing side of the migration, the credentials
must be for a \(aqclient\(aq endpoint, while for the incoming side the
credentials must be for a \(aqserver\(aq endpoint.  An empty string
means that QEMU will use plain text mode for migration, rather
than TLS.  (Since 2.7)
.sp
Note: 2.8 omits empty \fBtls\-creds\fP instead.

.IP \(bu 2
\fBtls\-hostname\fP (\fBstring\fP, \fIoptional\fP) \-\- 
.sp
migration target\(aqs hostname for validating the
server\(aqs x509 certificate identity.  If empty, QEMU will use the
hostname from the migration URI, if any.  (Since 2.7)
.sp
Note: 2.8 omits empty \fBtls\-hostname\fP instead.

.IP \(bu 2
\fBtls\-authz\fP (\fBstring\fP, \fIoptional\fP) \-\- ID of the \(aqauthz\(aq object subclass that provides access
control checking of the TLS x509 certificate distinguished name.
(Since 4.0)
.IP \(bu 2
\fBmax\-bandwidth\fP (\fBint\fP, \fIoptional\fP) \-\- maximum speed for migration, in bytes per second.
(Since 2.8)
.IP \(bu 2
\fBavail\-switchover\-bandwidth\fP (\fBint\fP, \fIoptional\fP) \-\- to set the available bandwidth that
migration can use during switchover phase.  NOTE!  This does not
limit the bandwidth during switchover, but only for calculations
when making decisions to switchover.  By default, this value is
zero, which means QEMU will estimate the bandwidth
automatically.  This can be set when the estimated value is not
accurate, while the user is able to guarantee such bandwidth is
available when switching over.  When specified correctly, this
can make the switchover decision much more accurate.
(Since 8.2)
.IP \(bu 2
\fBdowntime\-limit\fP (\fBint\fP, \fIoptional\fP) \-\- set maximum tolerated downtime for migration.
maximum downtime in milliseconds (Since 2.8)
.IP \(bu 2
\fBx\-checkpoint\-delay\fP (\fBint\fP, \fIoptional\fP) \-\- the delay time between two COLO checkpoints.
(Since 2.8)
.IP \(bu 2
\fBmultifd\-channels\fP (\fBint\fP, \fIoptional\fP) \-\- Number of channels used to migrate data in
parallel.  This is the same number that the number of sockets
used for migration.  The default value is 2 (since 4.0)
.IP \(bu 2
\fBxbzrle\-cache\-size\fP (\fBint\fP, \fIoptional\fP) \-\- cache size to be used by XBZRLE migration.  It
needs to be a multiple of the target page size and a power of 2
(Since 2.11)
.IP \(bu 2
\fBmax\-postcopy\-bandwidth\fP (\fBint\fP, \fIoptional\fP) \-\- Background transfer bandwidth during
postcopy.  Defaults to 0 (unlimited).  In bytes per second.
(Since 3.0)
.IP \(bu 2
\fBmax\-cpu\-throttle\fP (\fBint\fP, \fIoptional\fP) \-\- maximum cpu throttle percentage.  Defaults to 99.
(Since 3.1)
.IP \(bu 2
\fBmultifd\-compression\fP (\fI\%MultiFDCompression\fP, \fIoptional\fP) \-\- Which compression method to use.  Defaults to
none.  (Since 5.0)
.IP \(bu 2
\fBmultifd\-zlib\-level\fP (\fBint\fP, \fIoptional\fP) \-\- Set the compression level to be used in live
migration, the compression level is an integer between 0 and 9,
where 0 means no compression, 1 means the best compression
speed, and 9 means best compression ratio which will consume
more CPU.  Defaults to 1.  (Since 5.0)
.IP \(bu 2
\fBmultifd\-qatzip\-level\fP (\fBint\fP, \fIoptional\fP) \-\- Set the compression level to be used in live
migration. The level is an integer between 1 and 9, where 1 means
the best compression speed, and 9 means the best compression
ratio which will consume more CPU. Defaults to 1.  (Since 9.2)
.IP \(bu 2
\fBmultifd\-zstd\-level\fP (\fBint\fP, \fIoptional\fP) \-\- Set the compression level to be used in live
migration, the compression level is an integer between 0 and 20,
where 0 means no compression, 1 means the best compression
speed, and 20 means best compression ratio which will consume
more CPU.  Defaults to 1.  (Since 5.0)
.IP \(bu 2
\fBblock\-bitmap\-mapping\fP (\fB[\fP\fI\%BitmapMigrationNodeAlias\fP\fB]\fP, \fIoptional\fP) \-\- Maps block nodes and bitmaps on them to
aliases for the purpose of dirty bitmap migration.  Such aliases
may for example be the corresponding names on the opposite site.
The mapping must be one\-to\-one, but not necessarily complete: On
the source, unmapped bitmaps and all bitmaps on unmapped nodes
will be ignored.  On the destination, encountering an unmapped
alias in the incoming migration stream will result in a report,
and all further bitmap migration data will then be discarded.
Note that the destination does not know about bitmaps it does
not receive, so there is no limitation or requirement regarding
the number of bitmaps received, or how they are named, or on
which nodes they are placed.  By default (when this parameter
has never been set), bitmap names are mapped to themselves.
Nodes are mapped to their block device name if there is one, and
to their node name otherwise.  (Since 5.2)
.IP \(bu 2
\fBx\-vcpu\-dirty\-limit\-period\fP (\fBint\fP, \fIoptional\fP) \-\- Periodic time (in milliseconds) of dirty
limit during live migration.  Should be in the range 1 to
1000ms.  Defaults to 1000ms.  (Since 8.1)
.IP \(bu 2
\fBvcpu\-dirty\-limit\fP (\fBint\fP, \fIoptional\fP) \-\- Dirtyrate limit (MB/s) during live migration.
Defaults to 1.  (Since 8.1)
.IP \(bu 2
\fBmode\fP (\fI\%MigMode\fP, \fIoptional\fP) \-\- Migration mode.  See description in \fBMigMode\fP\&.  Default is
\(aqnormal\(aq.  (Since 8.2)
.IP \(bu 2
\fBzero\-page\-detection\fP (\fI\%ZeroPageDetection\fP, \fIoptional\fP) \-\- Whether and how to detect zero pages.
See description in \fBZeroPageDetection\fP\&.  Default is \(aqmultifd\(aq.
(since 9.0)
.IP \(bu 2
\fBdirect\-io\fP (\fBboolean\fP, \fIoptional\fP) \-\- Open migration files with O_DIRECT when possible.  This
only has effect if the \fBmapped\-ram\fP capability is enabled.
(Since 9.1)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- Members \fBx\-checkpoint\-delay\fP and
\fBx\-vcpu\-dirty\-limit\-period\fP are experimental.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-migrate\-parameters  (Since: 2.4)
Return information about the current migration parameters
.INDENT 7.0
.TP
.B Return
\fI\%MigrationParameters\fP \-\- \fBMigrationParameters\fP
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-migrate\-parameters\(dq }
<\- { \(dqreturn\(dq: {
         \(dqmultifd\-channels\(dq: 2,
         \(dqcpu\-throttle\-increment\(dq: 10,
         \(dqcpu\-throttle\-initial\(dq: 20,
         \(dqmax\-bandwidth\(dq: 33554432,
         \(dqdowntime\-limit\(dq: 300
      }
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  migrate\-start\-postcopy  (Since: 2.5)
Followup to a migration command to switch the migration to postcopy
mode.  The postcopy\-ram capability must be set on both source and
destination before the original migration command.
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqmigrate\-start\-postcopy\(dq }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  MIGRATION  (Since: 2.4)
Emitted when a migration event happens
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBstatus\fP (\fI\%MigrationStatus\fP) \-\- \fBMigrationStatus\fP describing the current migration status.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- {\(dqtimestamp\(dq: {\(dqseconds\(dq: 1432121972, \(dqmicroseconds\(dq: 744001},
    \(dqevent\(dq: \(dqMIGRATION\(dq,
    \(dqdata\(dq: {\(dqstatus\(dq: \(dqcompleted\(dq} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  MIGRATION_PASS  (Since: 2.6)
Emitted from the source side of a migration at the start of each
pass (when it syncs the dirty bitmap)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpass\fP (\fBint\fP) \-\- An incrementing count (starting at 1 on the first pass)
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqtimestamp\(dq: {\(dqseconds\(dq: 1449669631, \(dqmicroseconds\(dq: 239225},
      \(dqevent\(dq: \(dqMIGRATION_PASS\(dq, \(dqdata\(dq: {\(dqpass\(dq: 2} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  COLOMessage  (Since: 2.8)
The message transmission between Primary side and Secondary side.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBcheckpoint\-ready\fP \-\- Secondary VM (SVM) is ready for checkpointing
.IP \(bu 2
\fBcheckpoint\-request\fP \-\- Primary VM (PVM) tells SVM to prepare for
checkpointing
.IP \(bu 2
\fBcheckpoint\-reply\fP \-\- SVM gets PVM\(aqs checkpoint request
.IP \(bu 2
\fBvmstate\-send\fP \-\- VM\(aqs state will be sent by PVM.
.IP \(bu 2
\fBvmstate\-size\fP \-\- The total size of VMstate.
.IP \(bu 2
\fBvmstate\-received\fP \-\- VM\(aqs state has been received by SVM.
.IP \(bu 2
\fBvmstate\-loaded\fP \-\- VM\(aqs state has been loaded by SVM.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  COLOMode  (Since: 2.8)
The COLO current mode.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnone\fP \-\- COLO is disabled.
.IP \(bu 2
\fBprimary\fP \-\- COLO node in primary side.
.IP \(bu 2
\fBsecondary\fP \-\- COLO node in slave side.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  FailoverStatus  (Since: 2.8)
An enumeration of COLO failover status
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnone\fP \-\- no failover has ever happened
.IP \(bu 2
\fBrequire\fP \-\- got failover requirement but not handled
.IP \(bu 2
\fBactive\fP \-\- in the process of doing failover
.IP \(bu 2
\fBcompleted\fP \-\- finish the process of failover
.IP \(bu 2
\fBrelaunch\fP \-\- restart the failover process, from \(aqnone\(aq \-> \(aqcompleted\(aq
(Since 2.9)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  COLO_EXIT  (Since: 3.1)
Emitted when VM finishes COLO mode due to some errors happening or
at the request of users.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmode\fP (\fI\%COLOMode\fP) \-\- report COLO mode when COLO exited.
.IP \(bu 2
\fBreason\fP (\fI\%COLOExitReason\fP) \-\- describes the reason for the COLO exit.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqtimestamp\(dq: {\(dqseconds\(dq: 2032141960, \(dqmicroseconds\(dq: 417172},
     \(dqevent\(dq: \(dqCOLO_EXIT\(dq, \(dqdata\(dq: {\(dqmode\(dq: \(dqprimary\(dq, \(dqreason\(dq: \(dqrequest\(dq } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  COLOExitReason  (Since: 3.1)
The reason for a COLO exit.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnone\fP \-\- failover has never happened.  This state does not occur in
the COLO_EXIT event, and is only visible in the result of
query\-colo\-status.
.IP \(bu 2
\fBrequest\fP \-\- COLO exit is due to an external request.
.IP \(bu 2
\fBerror\fP \-\- COLO exit is due to an internal error.
.IP \(bu 2
\fBprocessing\fP \-\- COLO is currently handling a failover (since 4.0).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-colo\-lost\-heartbeat  (Since: 2.8)
This command is unstable/experimental.\fIAvailability\fP: \fBCONFIG_REPLICATION\fP
.sp
Tell qemu that heartbeat is lost, request it to do takeover
procedures.  If this command is sent to the PVM, the Primary side
will exit COLO mode.  If sent to the Secondary, the Secondary side
will run failover work, then takes over server operation to become
the service VM.
.INDENT 7.0
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is experimental.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqx\-colo\-lost\-heartbeat\(dq }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  migrate_cancel  (Since: 0.14)
Cancel the currently executing migration process.  Allows a new
migration to be started right after.  When postcopy\-ram is in use,
cancelling is not allowed after the postcopy phase has started.
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
This command succeeds even if there is no migration
process running.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqmigrate_cancel\(dq }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  migrate\-continue  (Since: 2.11)
Continue migration when it\(aqs in a paused state.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBstate\fP (\fI\%MigrationStatus\fP) \-\- The state the migration is currently expected to be in
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqmigrate\-continue\(dq , \(dqarguments\(dq:
     { \(dqstate\(dq: \(dqpre\-switchover\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  MigrationAddressType  (Since: 8.2)
The migration stream transport mechanisms.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBsocket\fP \-\- Migrate via socket.
.IP \(bu 2
\fBexec\fP \-\- Direct the migration stream to another process.
.IP \(bu 2
\fBrdma\fP \-\- Migrate via RDMA.
.IP \(bu 2
\fBfile\fP \-\- Direct the migration stream to a file.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  FileMigrationArgs  (Since: 8.2)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- The file to receive the migration stream
.IP \(bu 2
\fBoffset\fP (\fBint\fP) \-\- The file offset where the migration stream will start
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MigrationExecCommand  (Since: 8.2)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBargs\fP (\fB[\fP\fBstring\fP\fB]\fP) \-\- command (list head) and arguments to execute.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MigrationAddress  (Since: 8.2)
Migration endpoint configuration.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtransport\fP (\fI\%MigrationAddressType\fP) \-\- The migration stream transport mechanism
.IP \(bu 2
When \fBtransport\fP is \fBsocket\fP: The members of \fI\%SocketAddress\fP\&.
.IP \(bu 2
When \fBtransport\fP is \fBexec\fP: The members of \fI\%MigrationExecCommand\fP\&.
.IP \(bu 2
When \fBtransport\fP is \fBrdma\fP: The members of \fI\%InetSocketAddress\fP\&.
.IP \(bu 2
When \fBtransport\fP is \fBfile\fP: The members of \fI\%FileMigrationArgs\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  MigrationChannelType  (Since: 8.1)
The migration channel\-type request options.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBmain\fP \-\- Main outbound migration channel.
.IP \(bu 2
\fBcpr\fP \-\- Checkpoint and restart state channel.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MigrationChannel  (Since: 8.1)
Migration stream channel parameters.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBchannel\-type\fP (\fI\%MigrationChannelType\fP) \-\- Channel type for transferring packet information.
.IP \(bu 2
\fBaddr\fP (\fI\%MigrationAddress\fP) \-\- Migration endpoint configuration on destination interface.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  migrate  (Since: 0.14)
Migrates the current running guest to another Virtual Machine.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBuri\fP (\fBstring\fP, \fIoptional\fP) \-\- the Uniform Resource Identifier of the destination VM
.IP \(bu 2
\fBchannels\fP (\fB[\fP\fI\%MigrationChannel\fP\fB]\fP, \fIoptional\fP) \-\- list of migration stream channels with each stream in the
list connected to a destination interface endpoint.
.IP \(bu 2
\fBdetach\fP (\fBboolean\fP, \fIoptional\fP) \-\- this argument exists only for compatibility reasons and is
ignored by QEMU
.IP \(bu 2
\fBresume\fP (\fBboolean\fP, \fIoptional\fP) \-\- resume one paused migration, default \(dqoff\(dq.  (since 3.0)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- Argument \fBdetach\fP is deprecated.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Notes"
.INDENT 0.0
.IP 1. 3
The \(aqquery\-migrate\(aq command should be used to check
migration\(aqs progress and final result (this information is
provided by the \(aqstatus\(aq member).
.IP 2. 3
The uri argument should have the Uniform Resource Identifier
of default destination VM.  This connection will be bound to
default network.
.IP 3. 3
For now, number of migration streams is restricted to one,
i.e. number of items in \(aqchannels\(aq list is just 1.
.IP 4. 3
The \(aquri\(aq and \(aqchannels\(aq arguments are mutually exclusive;
exactly one of the two should be present.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqmigrate\(dq, \(dqarguments\(dq: { \(dquri\(dq: \(dqtcp:0:4446\(dq } }
<\- { \(dqreturn\(dq: {} }

\-> { \(dqexecute\(dq: \(dqmigrate\(dq,
     \(dqarguments\(dq: {
         \(dqchannels\(dq: [ { \(dqchannel\-type\(dq: \(dqmain\(dq,
                         \(dqaddr\(dq: { \(dqtransport\(dq: \(dqsocket\(dq,
                                   \(dqtype\(dq: \(dqinet\(dq,
                                   \(dqhost\(dq: \(dq10.12.34.9\(dq,
                                   \(dqport\(dq: \(dq1050\(dq } } ] } }
<\- { \(dqreturn\(dq: {} }

\-> { \(dqexecute\(dq: \(dqmigrate\(dq,
     \(dqarguments\(dq: {
         \(dqchannels\(dq: [ { \(dqchannel\-type\(dq: \(dqmain\(dq,
                         \(dqaddr\(dq: { \(dqtransport\(dq: \(dqexec\(dq,
                                   \(dqargs\(dq: [ \(dq/bin/nc\(dq, \(dq\-p\(dq, \(dq6000\(dq,
                                             \(dq/some/sock\(dq ] } } ] } }
<\- { \(dqreturn\(dq: {} }

\-> { \(dqexecute\(dq: \(dqmigrate\(dq,
     \(dqarguments\(dq: {
         \(dqchannels\(dq: [ { \(dqchannel\-type\(dq: \(dqmain\(dq,
                         \(dqaddr\(dq: { \(dqtransport\(dq: \(dqrdma\(dq,
                                   \(dqhost\(dq: \(dq10.12.34.9\(dq,
                                   \(dqport\(dq: \(dq1050\(dq } } ] } }
<\- { \(dqreturn\(dq: {} }

\-> { \(dqexecute\(dq: \(dqmigrate\(dq,
     \(dqarguments\(dq: {
         \(dqchannels\(dq: [ { \(dqchannel\-type\(dq: \(dqmain\(dq,
                         \(dqaddr\(dq: { \(dqtransport\(dq: \(dqfile\(dq,
                                   \(dqfilename\(dq: \(dq/tmp/migfile\(dq,
                                   \(dqoffset\(dq: \(dq0x1000\(dq } } ] } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  migrate\-incoming  (Since: 2.3)
Start an incoming migration, the qemu must have been started with
\-incoming defer
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBuri\fP (\fBstring\fP, \fIoptional\fP) \-\- The Uniform Resource Identifier identifying the source or
address to listen on
.IP \(bu 2
\fBchannels\fP (\fB[\fP\fI\%MigrationChannel\fP\fB]\fP, \fIoptional\fP) \-\- list of migration stream channels with each stream in the
list connected to a destination interface endpoint.
.IP \(bu 2
\fBexit\-on\-error\fP (\fBboolean\fP, \fIoptional\fP) \-\- Exit on incoming migration failure.  Default true.
When set to false, the failure triggers a MIGRATION event, and
error details could be retrieved with query\-migrate.
(since 9.1)
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Notes"
.INDENT 0.0
.IP 1. 3
It\(aqs a bad idea to use a string for the uri, but it needs to
stay compatible with \-incoming and the format of the uri is
already exposed above libvirt.
.IP 2. 3
QEMU must be started with \-incoming defer to allow
migrate\-incoming to be used.
.IP 3. 3
The uri format is the same as for \-incoming
.IP 4. 3
For now, number of migration streams is restricted to one,
i.e. number of items in \(aqchannels\(aq list is just 1.
.IP 5. 3
The \(aquri\(aq and \(aqchannels\(aq arguments are mutually exclusive;
exactly one of the two should be present.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqmigrate\-incoming\(dq,
     \(dqarguments\(dq: { \(dquri\(dq: \(dqtcp:0:4446\(dq } }
<\- { \(dqreturn\(dq: {} }

\-> { \(dqexecute\(dq: \(dqmigrate\-incoming\(dq,
     \(dqarguments\(dq: {
         \(dqchannels\(dq: [ { \(dqchannel\-type\(dq: \(dqmain\(dq,
                         \(dqaddr\(dq: { \(dqtransport\(dq: \(dqsocket\(dq,
                                   \(dqtype\(dq: \(dqinet\(dq,
                                   \(dqhost\(dq: \(dq10.12.34.9\(dq,
                                   \(dqport\(dq: \(dq1050\(dq } } ] } }
<\- { \(dqreturn\(dq: {} }

\-> { \(dqexecute\(dq: \(dqmigrate\-incoming\(dq,
     \(dqarguments\(dq: {
         \(dqchannels\(dq: [ { \(dqchannel\-type\(dq: \(dqmain\(dq,
                         \(dqaddr\(dq: { \(dqtransport\(dq: \(dqexec\(dq,
                                   \(dqargs\(dq: [ \(dq/bin/nc\(dq, \(dq\-p\(dq, \(dq6000\(dq,
                                             \(dq/some/sock\(dq ] } } ] } }
<\- { \(dqreturn\(dq: {} }

\-> { \(dqexecute\(dq: \(dqmigrate\-incoming\(dq,
     \(dqarguments\(dq: {
         \(dqchannels\(dq: [ { \(dqchannel\-type\(dq: \(dqmain\(dq,
                         \(dqaddr\(dq: { \(dqtransport\(dq: \(dqrdma\(dq,
                                   \(dqhost\(dq: \(dq10.12.34.9\(dq,
                                   \(dqport\(dq: \(dq1050\(dq } } ] } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  xen\-save\-devices\-state  (Since: 1.1)
Save the state of all devices to file.  The RAM and the block
devices of the VM are not saved by this command.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- the file to save the state of the devices to as binary
data.  See xen\-save\-devices\-state.txt for a description of the
binary format.
.IP \(bu 2
\fBlive\fP (\fBboolean\fP, \fIoptional\fP) \-\- Optional argument to ask QEMU to treat this command as part
of a live migration.  Default to true.  (since 2.11)
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqxen\-save\-devices\-state\(dq,
     \(dqarguments\(dq: { \(dqfilename\(dq: \(dq/tmp/save\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  xen\-set\-global\-dirty\-log  (Since: 1.3)
Enable or disable the global dirty log mode.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBenable\fP (\fBboolean\fP) \-\- true to enable, false to disable.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqxen\-set\-global\-dirty\-log\(dq,
     \(dqarguments\(dq: { \(dqenable\(dq: true } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  xen\-load\-devices\-state  (Since: 2.7)
Load the state of all devices from file.  The RAM and the block
devices of the VM are not loaded by this command.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- the file to load the state of the devices from as binary
data.  See xen\-save\-devices\-state.txt for a description of the
binary format.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqxen\-load\-devices\-state\(dq,
     \(dqarguments\(dq: { \(dqfilename\(dq: \(dq/tmp/resume\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  xen\-set\-replication  (Since: 2.9)
\fIAvailability\fP: \fBCONFIG_REPLICATION\fP
.sp
Enable or disable replication.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBenable\fP (\fBboolean\fP) \-\- true to enable, false to disable.
.IP \(bu 2
\fBprimary\fP (\fBboolean\fP) \-\- true for primary or false for secondary.
.IP \(bu 2
\fBfailover\fP (\fBboolean\fP, \fIoptional\fP) \-\- true to do failover, false to stop.  Cannot be specified
if \(aqenable\(aq is true.  Default value is false.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqxen\-set\-replication\(dq,
     \(dqarguments\(dq: {\(dqenable\(dq: true, \(dqprimary\(dq: false} }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ReplicationStatus  (Since: 2.9)
\fIAvailability\fP: \fBCONFIG_REPLICATION\fP
.sp
The result format for \(aqquery\-xen\-replication\-status\(aq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBerror\fP (\fBboolean\fP) \-\- true if an error happened, false if replication is normal.
.IP \(bu 2
\fBdesc\fP (\fBstring\fP, \fIoptional\fP) \-\- the human readable error description string, when \fBerror\fP is
\(aqtrue\(aq.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-xen\-replication\-status  (Since: 2.9)
\fIAvailability\fP: \fBCONFIG_REPLICATION\fP
.sp
Query replication status while the vm is running.
.INDENT 7.0
.TP
.B Return
\fI\%ReplicationStatus\fP \-\- A \fBReplicationStatus\fP object showing the status.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-xen\-replication\-status\(dq }
<\- { \(dqreturn\(dq: { \(dqerror\(dq: false } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  xen\-colo\-do\-checkpoint  (Since: 2.9)
\fIAvailability\fP: \fBCONFIG_REPLICATION\fP
.sp
Xen uses this command to notify replication to trigger a checkpoint.
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqxen\-colo\-do\-checkpoint\(dq }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  COLOStatus  (Since: 3.1)
\fIAvailability\fP: \fBCONFIG_REPLICATION\fP
.sp
The result format for \(aqquery\-colo\-status\(aq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmode\fP (\fI\%COLOMode\fP) \-\- COLO running mode.  If COLO is running, this field will
return \(aqprimary\(aq or \(aqsecondary\(aq.
.IP \(bu 2
\fBlast\-mode\fP (\fI\%COLOMode\fP) \-\- COLO last running mode.  If COLO is running, this field
will return same like mode field, after failover we can use this
field to get last colo mode.  (since 4.0)
.IP \(bu 2
\fBreason\fP (\fI\%COLOExitReason\fP) \-\- describes the reason for the COLO exit.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-colo\-status  (Since: 3.1)
\fIAvailability\fP: \fBCONFIG_REPLICATION\fP
.sp
Query COLO status while the vm is running.
.INDENT 7.0
.TP
.B Return
\fI\%COLOStatus\fP \-\- A \fBCOLOStatus\fP object showing the status.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-colo\-status\(dq }
<\- { \(dqreturn\(dq: { \(dqmode\(dq: \(dqprimary\(dq, \(dqlast\-mode\(dq: \(dqnone\(dq, \(dqreason\(dq: \(dqrequest\(dq } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  migrate\-recover  (Since: 3.0)
Provide a recovery migration stream URI.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBuri\fP (\fBstring\fP) \-\- the URI to be used for the recovery of migration stream.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqmigrate\-recover\(dq,
     \(dqarguments\(dq: { \(dquri\(dq: \(dqtcp:192.168.1.200:12345\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  migrate\-pause  (Since: 3.0)
Pause a migration.  Currently it only supports postcopy.
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqmigrate\-pause\(dq }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  UNPLUG_PRIMARY  (Since: 4.2)
Emitted from source side of a migration when migration state is
WAIT_UNPLUG.  Device was unplugged by guest operating system.
Device resources in QEMU are kept on standby to be able to re\-plug
it in case of migration failure.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\-id\fP (\fBstring\fP) \-\- QEMU device id of the unplugged device
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqUNPLUG_PRIMARY\(dq,
     \(dqdata\(dq: { \(dqdevice\-id\(dq: \(dqhostdev0\(dq },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1265044230, \(dqmicroseconds\(dq: 450486 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DirtyRateVcpu  (Since: 6.2)
Dirty rate of vcpu.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBint\fP) \-\- vcpu index.
.IP \(bu 2
\fBdirty\-rate\fP (\fBint\fP) \-\- dirty rate.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  DirtyRateStatus  (Since: 5.2)
Dirty page rate measurement status.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBunstarted\fP \-\- measuring thread has not been started yet
.IP \(bu 2
\fBmeasuring\fP \-\- measuring thread is running
.IP \(bu 2
\fBmeasured\fP \-\- dirty page rate is measured and the results are available
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  DirtyRateMeasureMode  (Since: 6.2)
Method used to measure dirty page rate.  Differences between
available methods are explained in \fBcalc\-dirty\-rate\fP\&.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBpage\-sampling\fP \-\- use page sampling
.IP \(bu 2
\fBdirty\-ring\fP \-\- use dirty ring
.IP \(bu 2
\fBdirty\-bitmap\fP \-\- use dirty bitmap
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  TimeUnit  (Since: 8.2)
Specifies unit in which time\-related value is specified.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBsecond\fP \-\- value is in seconds
.IP \(bu 2
\fBmillisecond\fP \-\- value is in milliseconds
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DirtyRateInfo  (Since: 5.2)
Information about measured dirty page rate.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdirty\-rate\fP (\fBint\fP, \fIoptional\fP) \-\- an estimate of the dirty page rate of the VM in units
of MiB/s.  Value is present only when \fBstatus\fP is \(aqmeasured\(aq.
.IP \(bu 2
\fBstatus\fP (\fI\%DirtyRateStatus\fP) \-\- current status of dirty page rate measurements
.IP \(bu 2
\fBstart\-time\fP (\fBint\fP) \-\- start time in units of second for calculation
.IP \(bu 2
\fBcalc\-time\fP (\fBint\fP) \-\- time period for which dirty page rate was measured,
expressed and rounded down to \fBcalc\-time\-unit\fP\&.
.IP \(bu 2
\fBcalc\-time\-unit\fP (\fI\%TimeUnit\fP) \-\- time unit of \fBcalc\-time\fP  (Since 8.2)
.IP \(bu 2
\fBsample\-pages\fP (\fBint\fP) \-\- number of sampled pages per GiB of guest memory.
Valid only in page\-sampling mode (Since 6.1)
.IP \(bu 2
\fBmode\fP (\fI\%DirtyRateMeasureMode\fP) \-\- mode that was used to measure dirty page rate (Since 6.2)
.IP \(bu 2
\fBvcpu\-dirty\-rate\fP (\fB[\fP\fI\%DirtyRateVcpu\fP\fB]\fP, \fIoptional\fP) \-\- dirty rate for each vCPU if dirty\-ring mode was
specified (Since 6.2)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  calc\-dirty\-rate  (Since: 5.2)
Start measuring dirty page rate of the VM.  Results can be retrieved
with \fBquery\-dirty\-rate\fP after measurements are completed.
.sp
Dirty page rate is the number of pages changed in a given time
period expressed in MiB/s.  The following methods of calculation are
available:
.INDENT 7.0
.IP 1. 3
In page sampling mode, a random subset of pages are selected and
hashed twice: once at the beginning of measurement time period,
and once again at the end.  If two hashes for some page are
different, the page is counted as changed.  Since this method
relies on sampling and hashing, calculated dirty page rate is
only an estimate of its true value.  Increasing \fBsample\-pages\fP
improves estimation quality at the cost of higher computational
overhead.
.IP 2. 3
Dirty bitmap mode captures writes to memory (for example by
temporarily revoking write access to all pages) and counting page
faults.  Information about modified pages is collected into a
bitmap, where each bit corresponds to one guest page.  This mode
requires that KVM accelerator property \(dqdirty\-ring\-size\(dq is \fInot\fP
set.
.IP 3. 3
Dirty ring mode is similar to dirty bitmap mode, but the
information about modified pages is collected into ring buffer.
This mode tracks page modification per each vCPU separately.  It
requires that KVM accelerator property \(dqdirty\-ring\-size\(dq is set.
.UNINDENT
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBcalc\-time\fP (\fBint\fP) \-\- time period for which dirty page rate is calculated.  By
default it is specified in seconds, but the unit can be set
explicitly with \fBcalc\-time\-unit\fP\&.  Note that larger \fBcalc\-time\fP
values will typically result in smaller dirty page rates because
page dirtying is a one\-time event.  Once some page is counted as
dirty during \fBcalc\-time\fP period, further writes to this page will
not increase dirty page rate anymore.
.IP \(bu 2
\fBcalc\-time\-unit\fP (\fI\%TimeUnit\fP, \fIoptional\fP) \-\- time unit in which \fBcalc\-time\fP is specified.  By
default it is seconds.  (Since 8.2)
.IP \(bu 2
\fBsample\-pages\fP (\fBint\fP, \fIoptional\fP) \-\- number of sampled pages per each GiB of guest memory.
Default value is 512.  For 4KiB guest pages this corresponds to
sampling ratio of 0.2%.  This argument is used only in page
sampling mode.  (Since 6.1)
.IP \(bu 2
\fBmode\fP (\fI\%DirtyRateMeasureMode\fP, \fIoptional\fP) \-\- mechanism for tracking dirty pages.  Default value is
\(aqpage\-sampling\(aq.  Others are \(aqdirty\-bitmap\(aq and \(aqdirty\-ring\(aq.
(Since 6.1)
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> {\(dqexecute\(dq: \(dqcalc\-dirty\-rate\(dq, \(dqarguments\(dq: {\(dqcalc\-time\(dq: 1,
                                                \(dqsample\-pages\(dq: 512} }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.sp
Measure dirty rate using dirty bitmap for 500 milliseconds:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> {\(dqexecute\(dq: \(dqcalc\-dirty\-rate\(dq, \(dqarguments\(dq: {\(dqcalc\-time\(dq: 500,
    \(dqcalc\-time\-unit\(dq: \(dqmillisecond\(dq, \(dqmode\(dq: \(dqdirty\-bitmap\(dq} }

<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-dirty\-rate  (Since: 5.2)
Query results of the most recent invocation of \fBcalc\-dirty\-rate\fP\&.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBcalc\-time\-unit\fP (\fI\%TimeUnit\fP, \fIoptional\fP) \-\- time unit in which to report calculation time.
By default it is reported in seconds.  (Since 8.2)
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Measurement is in progress"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 <\- {\(dqstatus\(dq: \(dqmeasuring\(dq, \(dqsample\-pages\(dq: 512,
     \(dqmode\(dq: \(dqpage\-sampling\(dq, \(dqstart\-time\(dq: 1693900454, \(dqcalc\-time\(dq: 10,
     \(dqcalc\-time\-unit\(dq: \(dqsecond\(dq}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Measurement has been completed"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 <\- {\(dqstatus\(dq: \(dqmeasured\(dq, \(dqsample\-pages\(dq: 512, \(dqdirty\-rate\(dq: 108,
     \(dqmode\(dq: \(dqpage\-sampling\(dq, \(dqstart\-time\(dq: 1693900454, \(dqcalc\-time\(dq: 10,
     \(dqcalc\-time\-unit\(dq: \(dqsecond\(dq}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DirtyLimitInfo  (Since: 7.1)
Dirty page rate limit information of a virtual CPU.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcpu\-index\fP (\fBint\fP) \-\- index of a virtual CPU.
.IP \(bu 2
\fBlimit\-rate\fP (\fBint\fP) \-\- upper limit of dirty page rate (MB/s) for a virtual
CPU, 0 means unlimited.
.IP \(bu 2
\fBcurrent\-rate\fP (\fBint\fP) \-\- current dirty page rate (MB/s) for a virtual CPU.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  set\-vcpu\-dirty\-limit  (Since: 7.1)
Set the upper limit of dirty page rate for virtual CPUs.
.sp
Requires KVM with accelerator property \(dqdirty\-ring\-size\(dq set.  A
virtual CPU\(aqs dirty page rate is a measure of its memory load.  To
observe dirty page rates, use \fBcalc\-dirty\-rate\fP\&.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBcpu\-index\fP (\fBint\fP, \fIoptional\fP) \-\- index of a virtual CPU, default is all.
.IP \(bu 2
\fBdirty\-rate\fP (\fBint\fP) \-\- upper limit of dirty page rate (MB/s) for virtual CPUs.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> {\(dqexecute\(dq: \(dqset\-vcpu\-dirty\-limit\(dq}
    \(dqarguments\(dq: { \(dqdirty\-rate\(dq: 200,
                   \(dqcpu\-index\(dq: 1 } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  cancel\-vcpu\-dirty\-limit  (Since: 7.1)
Cancel the upper limit of dirty page rate for virtual CPUs.
.sp
Cancel the dirty page limit for the vCPU which has been set with
set\-vcpu\-dirty\-limit command.  Note that this command requires
support from dirty ring, same as the \(dqset\-vcpu\-dirty\-limit\(dq.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBcpu\-index\fP (\fBint\fP, \fIoptional\fP) \-\- index of a virtual CPU, default is all.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> {\(dqexecute\(dq: \(dqcancel\-vcpu\-dirty\-limit\(dq},
    \(dqarguments\(dq: { \(dqcpu\-index\(dq: 1 } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-vcpu\-dirty\-limit  (Since: 7.1)
Return information about virtual CPU dirty page rate limits, if
any.
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> {\(dqexecute\(dq: \(dqquery\-vcpu\-dirty\-limit\(dq}
<\- {\(dqreturn\(dq: [
       { \(dqlimit\-rate\(dq: 60, \(dqcurrent\-rate\(dq: 3, \(dqcpu\-index\(dq: 0},
       { \(dqlimit\-rate\(dq: 60, \(dqcurrent\-rate\(dq: 3, \(dqcpu\-index\(dq: 1}]}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MigrationThreadInfo  (Since: 7.2)
Information about migrationthreads
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the name of migration thread
.IP \(bu 2
\fBthread\-id\fP (\fBint\fP) \-\- ID of the underlying host thread
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-migrationthreads  (Since: 7.2)
This command is deprecated.
.sp
Return information of migration threads
.INDENT 7.0
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- This command is deprecated with no replacement yet.
.UNINDENT
.TP
.B Return
\fB[\fP\fI\%MigrationThreadInfo\fP\fB]\fP \-\- \fBMigrationThreadInfo\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  snapshot\-save  (Since: 6.0)
Save a VM snapshot
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBjob\-id\fP (\fBstring\fP) \-\- identifier for the newly created job
.IP \(bu 2
\fBtag\fP (\fBstring\fP) \-\- name of the snapshot to create
.IP \(bu 2
\fBvmstate\fP (\fBstring\fP) \-\- block device node name to save vmstate to
.IP \(bu 2
\fBdevices\fP (\fB[\fP\fBstring\fP\fB]\fP) \-\- list of block device node names to save a snapshot to
.UNINDENT
.UNINDENT
.sp
Applications should not assume that the snapshot save is complete
when this command returns.  The job commands / events must be used
to determine completion and to fetch details of any errors that
arise.
.sp
Note that execution of the guest CPUs may be stopped during the time
it takes to save the snapshot.  A future version of QEMU may ensure
CPUs are executing continuously.
.sp
It is strongly recommended that \fBdevices\fP contain all writable block
device nodes if a consistent snapshot is required.
.sp
If \fBtag\fP already exists, an error will be reported
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqsnapshot\-save\(dq,
     \(dqarguments\(dq: {
        \(dqjob\-id\(dq: \(dqsnapsave0\(dq,
        \(dqtag\(dq: \(dqmy\-snap\(dq,
        \(dqvmstate\(dq: \(dqdisk0\(dq,
        \(dqdevices\(dq: [\(dqdisk0\(dq, \(dqdisk1\(dq]
     }
   }
<\- { \(dqreturn\(dq: { } }
<\- {\(dqevent\(dq: \(dqJOB_STATUS_CHANGE\(dq,
    \(dqtimestamp\(dq: {\(dqseconds\(dq: 1432121972, \(dqmicroseconds\(dq: 744001},
    \(dqdata\(dq: {\(dqstatus\(dq: \(dqcreated\(dq, \(dqid\(dq: \(dqsnapsave0\(dq}}
<\- {\(dqevent\(dq: \(dqJOB_STATUS_CHANGE\(dq,
    \(dqtimestamp\(dq: {\(dqseconds\(dq: 1432122172, \(dqmicroseconds\(dq: 744001},
    \(dqdata\(dq: {\(dqstatus\(dq: \(dqrunning\(dq, \(dqid\(dq: \(dqsnapsave0\(dq}}
<\- {\(dqevent\(dq: \(dqSTOP\(dq,
    \(dqtimestamp\(dq: {\(dqseconds\(dq: 1432122372, \(dqmicroseconds\(dq: 744001} }
<\- {\(dqevent\(dq: \(dqRESUME\(dq,
    \(dqtimestamp\(dq: {\(dqseconds\(dq: 1432122572, \(dqmicroseconds\(dq: 744001} }
<\- {\(dqevent\(dq: \(dqJOB_STATUS_CHANGE\(dq,
    \(dqtimestamp\(dq: {\(dqseconds\(dq: 1432122772, \(dqmicroseconds\(dq: 744001},
    \(dqdata\(dq: {\(dqstatus\(dq: \(dqwaiting\(dq, \(dqid\(dq: \(dqsnapsave0\(dq}}
<\- {\(dqevent\(dq: \(dqJOB_STATUS_CHANGE\(dq,
    \(dqtimestamp\(dq: {\(dqseconds\(dq: 1432122972, \(dqmicroseconds\(dq: 744001},
    \(dqdata\(dq: {\(dqstatus\(dq: \(dqpending\(dq, \(dqid\(dq: \(dqsnapsave0\(dq}}
<\- {\(dqevent\(dq: \(dqJOB_STATUS_CHANGE\(dq,
    \(dqtimestamp\(dq: {\(dqseconds\(dq: 1432123172, \(dqmicroseconds\(dq: 744001},
    \(dqdata\(dq: {\(dqstatus\(dq: \(dqconcluded\(dq, \(dqid\(dq: \(dqsnapsave0\(dq}}
\-> {\(dqexecute\(dq: \(dqquery\-jobs\(dq}
<\- {\(dqreturn\(dq: [{\(dqcurrent\-progress\(dq: 1,
                \(dqstatus\(dq: \(dqconcluded\(dq,
                \(dqtotal\-progress\(dq: 1,
                \(dqtype\(dq: \(dqsnapshot\-save\(dq,
                \(dqid\(dq: \(dqsnapsave0\(dq}]}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  snapshot\-load  (Since: 6.0)
Load a VM snapshot
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBjob\-id\fP (\fBstring\fP) \-\- identifier for the newly created job
.IP \(bu 2
\fBtag\fP (\fBstring\fP) \-\- name of the snapshot to load.
.IP \(bu 2
\fBvmstate\fP (\fBstring\fP) \-\- block device node name to load vmstate from
.IP \(bu 2
\fBdevices\fP (\fB[\fP\fBstring\fP\fB]\fP) \-\- list of block device node names to load a snapshot from
.UNINDENT
.UNINDENT
.sp
Applications should not assume that the snapshot load is complete
when this command returns.  The job commands / events must be used
to determine completion and to fetch details of any errors that
arise.
.sp
Note that execution of the guest CPUs will be stopped during the
time it takes to load the snapshot.
.sp
It is strongly recommended that \fBdevices\fP contain all writable block
device nodes that can have changed since the original \fBsnapshot\-save\fP
command execution.
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqsnapshot\-load\(dq,
     \(dqarguments\(dq: {
        \(dqjob\-id\(dq: \(dqsnapload0\(dq,
        \(dqtag\(dq: \(dqmy\-snap\(dq,
        \(dqvmstate\(dq: \(dqdisk0\(dq,
        \(dqdevices\(dq: [\(dqdisk0\(dq, \(dqdisk1\(dq]
     }
   }
<\- { \(dqreturn\(dq: { } }
<\- {\(dqevent\(dq: \(dqJOB_STATUS_CHANGE\(dq,
    \(dqtimestamp\(dq: {\(dqseconds\(dq: 1472124172, \(dqmicroseconds\(dq: 744001},
    \(dqdata\(dq: {\(dqstatus\(dq: \(dqcreated\(dq, \(dqid\(dq: \(dqsnapload0\(dq}}
<\- {\(dqevent\(dq: \(dqJOB_STATUS_CHANGE\(dq,
    \(dqtimestamp\(dq: {\(dqseconds\(dq: 1472125172, \(dqmicroseconds\(dq: 744001},
    \(dqdata\(dq: {\(dqstatus\(dq: \(dqrunning\(dq, \(dqid\(dq: \(dqsnapload0\(dq}}
<\- {\(dqevent\(dq: \(dqSTOP\(dq,
    \(dqtimestamp\(dq: {\(dqseconds\(dq: 1472125472, \(dqmicroseconds\(dq: 744001} }
<\- {\(dqevent\(dq: \(dqRESUME\(dq,
    \(dqtimestamp\(dq: {\(dqseconds\(dq: 1472125872, \(dqmicroseconds\(dq: 744001} }
<\- {\(dqevent\(dq: \(dqJOB_STATUS_CHANGE\(dq,
    \(dqtimestamp\(dq: {\(dqseconds\(dq: 1472126172, \(dqmicroseconds\(dq: 744001},
    \(dqdata\(dq: {\(dqstatus\(dq: \(dqwaiting\(dq, \(dqid\(dq: \(dqsnapload0\(dq}}
<\- {\(dqevent\(dq: \(dqJOB_STATUS_CHANGE\(dq,
    \(dqtimestamp\(dq: {\(dqseconds\(dq: 1472127172, \(dqmicroseconds\(dq: 744001},
    \(dqdata\(dq: {\(dqstatus\(dq: \(dqpending\(dq, \(dqid\(dq: \(dqsnapload0\(dq}}
<\- {\(dqevent\(dq: \(dqJOB_STATUS_CHANGE\(dq,
    \(dqtimestamp\(dq: {\(dqseconds\(dq: 1472128172, \(dqmicroseconds\(dq: 744001},
    \(dqdata\(dq: {\(dqstatus\(dq: \(dqconcluded\(dq, \(dqid\(dq: \(dqsnapload0\(dq}}
\-> {\(dqexecute\(dq: \(dqquery\-jobs\(dq}
<\- {\(dqreturn\(dq: [{\(dqcurrent\-progress\(dq: 1,
                \(dqstatus\(dq: \(dqconcluded\(dq,
                \(dqtotal\-progress\(dq: 1,
                \(dqtype\(dq: \(dqsnapshot\-load\(dq,
                \(dqid\(dq: \(dqsnapload0\(dq}]}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  snapshot\-delete  (Since: 6.0)
Delete a VM snapshot
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBjob\-id\fP (\fBstring\fP) \-\- identifier for the newly created job
.IP \(bu 2
\fBtag\fP (\fBstring\fP) \-\- name of the snapshot to delete.
.IP \(bu 2
\fBdevices\fP (\fB[\fP\fBstring\fP\fB]\fP) \-\- list of block device node names to delete a snapshot from
.UNINDENT
.UNINDENT
.sp
Applications should not assume that the snapshot delete is complete
when this command returns.  The job commands / events must be used
to determine completion and to fetch details of any errors that
arise.
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqsnapshot\-delete\(dq,
     \(dqarguments\(dq: {
        \(dqjob\-id\(dq: \(dqsnapdelete0\(dq,
        \(dqtag\(dq: \(dqmy\-snap\(dq,
        \(dqdevices\(dq: [\(dqdisk0\(dq, \(dqdisk1\(dq]
     }
   }
<\- { \(dqreturn\(dq: { } }
<\- {\(dqevent\(dq: \(dqJOB_STATUS_CHANGE\(dq,
    \(dqtimestamp\(dq: {\(dqseconds\(dq: 1442124172, \(dqmicroseconds\(dq: 744001},
    \(dqdata\(dq: {\(dqstatus\(dq: \(dqcreated\(dq, \(dqid\(dq: \(dqsnapdelete0\(dq}}
<\- {\(dqevent\(dq: \(dqJOB_STATUS_CHANGE\(dq,
    \(dqtimestamp\(dq: {\(dqseconds\(dq: 1442125172, \(dqmicroseconds\(dq: 744001},
    \(dqdata\(dq: {\(dqstatus\(dq: \(dqrunning\(dq, \(dqid\(dq: \(dqsnapdelete0\(dq}}
<\- {\(dqevent\(dq: \(dqJOB_STATUS_CHANGE\(dq,
    \(dqtimestamp\(dq: {\(dqseconds\(dq: 1442126172, \(dqmicroseconds\(dq: 744001},
    \(dqdata\(dq: {\(dqstatus\(dq: \(dqwaiting\(dq, \(dqid\(dq: \(dqsnapdelete0\(dq}}
<\- {\(dqevent\(dq: \(dqJOB_STATUS_CHANGE\(dq,
    \(dqtimestamp\(dq: {\(dqseconds\(dq: 1442127172, \(dqmicroseconds\(dq: 744001},
    \(dqdata\(dq: {\(dqstatus\(dq: \(dqpending\(dq, \(dqid\(dq: \(dqsnapdelete0\(dq}}
<\- {\(dqevent\(dq: \(dqJOB_STATUS_CHANGE\(dq,
    \(dqtimestamp\(dq: {\(dqseconds\(dq: 1442128172, \(dqmicroseconds\(dq: 744001},
    \(dqdata\(dq: {\(dqstatus\(dq: \(dqconcluded\(dq, \(dqid\(dq: \(dqsnapdelete0\(dq}}
\-> {\(dqexecute\(dq: \(dqquery\-jobs\(dq}
<\- {\(dqreturn\(dq: [{\(dqcurrent\-progress\(dq: 1,
                \(dqstatus\(dq: \(dqconcluded\(dq,
                \(dqtotal\-progress\(dq: 1,
                \(dqtype\(dq: \(dqsnapshot\-delete\(dq,
                \(dqid\(dq: \(dqsnapdelete0\(dq}]}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH TRANSACTIONS
.INDENT 0.0
.TP
.B Object  Abort  (Since: 1.6)
This action can be used to test transaction failure.
.UNINDENT
.INDENT 0.0
.TP
.B Enum  ActionCompletionMode  (Since: 2.5)
An enumeration of Transactional completion modes.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBindividual\fP \-\- Do not attempt to cancel any other Actions if any
Actions fail after the Transaction request succeeds.  All
Actions that can complete successfully will do so without
waiting on others.  This is the default.
.IP \(bu 2
\fBgrouped\fP \-\- If any Action fails after the Transaction succeeds, cancel
all Actions.  Actions do not complete until all Actions are
ready to complete.  May be rejected by Actions that do not
support this completion mode.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  TransactionActionKind  (Since: 1.1)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBabort\fP \-\- Since 1.6
.IP \(bu 2
\fBblock\-dirty\-bitmap\-add\fP \-\- Since 2.5
.IP \(bu 2
\fBblock\-dirty\-bitmap\-remove\fP \-\- Since 4.2
.IP \(bu 2
\fBblock\-dirty\-bitmap\-clear\fP \-\- Since 2.5
.IP \(bu 2
\fBblock\-dirty\-bitmap\-enable\fP \-\- Since 4.0
.IP \(bu 2
\fBblock\-dirty\-bitmap\-disable\fP \-\- Since 4.0
.IP \(bu 2
\fBblock\-dirty\-bitmap\-merge\fP \-\- Since 4.0
.IP \(bu 2
\fBblockdev\-backup\fP \-\- Since 2.3
.IP \(bu 2
\fBblockdev\-snapshot\fP \-\- Since 2.5
.IP \(bu 2
\fBblockdev\-snapshot\-internal\-sync\fP \-\- Since 1.7
.IP \(bu 2
\fBblockdev\-snapshot\-sync\fP \-\- since 1.1
.IP \(bu 2
\fBdrive\-backup\fP \-\- Since 1.6
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- Member \fBdrive\-backup\fP is deprecated.  Use member
\fBblockdev\-backup\fP instead.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AbortWrapper  (Since: 1.6)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%Abort\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockDirtyBitmapAddWrapper  (Since: 2.5)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%BlockDirtyBitmapAdd\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockDirtyBitmapWrapper  (Since: 2.5)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%BlockDirtyBitmap\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockDirtyBitmapMergeWrapper  (Since: 4.0)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%BlockDirtyBitmapMerge\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevBackupWrapper  (Since: 2.3)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%BlockdevBackup\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevSnapshotWrapper  (Since: 2.5)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%BlockdevSnapshot\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevSnapshotInternalWrapper  (Since: 1.7)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%BlockdevSnapshotInternal\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BlockdevSnapshotSyncWrapper  (Since: 1.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%BlockdevSnapshotSync\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DriveBackupWrapper  (Since: 1.6)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%DriveBackup\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  TransactionAction  (Since: 1.1)
A discriminated record of operations that can be performed with
\fBtransaction\fP\&.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%TransactionActionKind\fP) \-\- the operation to be performed
.IP \(bu 2
When \fBtype\fP is \fBabort\fP: The members of \fI\%AbortWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBblock\-dirty\-bitmap\-add\fP: The members of \fI\%BlockDirtyBitmapAddWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBblock\-dirty\-bitmap\-remove\fP: The members of \fI\%BlockDirtyBitmapWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBblock\-dirty\-bitmap\-clear\fP: The members of \fI\%BlockDirtyBitmapWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBblock\-dirty\-bitmap\-enable\fP: The members of \fI\%BlockDirtyBitmapWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBblock\-dirty\-bitmap\-disable\fP: The members of \fI\%BlockDirtyBitmapWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBblock\-dirty\-bitmap\-merge\fP: The members of \fI\%BlockDirtyBitmapMergeWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBblockdev\-backup\fP: The members of \fI\%BlockdevBackupWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBblockdev\-snapshot\fP: The members of \fI\%BlockdevSnapshotWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBblockdev\-snapshot\-internal\-sync\fP: The members of \fI\%BlockdevSnapshotInternalWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBblockdev\-snapshot\-sync\fP: The members of \fI\%BlockdevSnapshotSyncWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBdrive\-backup\fP: The members of \fI\%DriveBackupWrapper\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  TransactionProperties  (Since: 2.5)
Optional arguments to modify the behavior of a Transaction.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcompletion\-mode\fP (\fI\%ActionCompletionMode\fP, \fIoptional\fP) \-\- Controls how jobs launched asynchronously by
Actions will complete or fail as a group.  See
\fBActionCompletionMode\fP for details.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  transaction  (Since: 1.1)
Executes a number of transactionable QMP commands atomically.  If
any operation fails, then the entire set of actions will be
abandoned and the appropriate error returned.
.sp
For external snapshots, the dictionary contains the device, the file
to use for the new snapshot, and the format.  The default format, if
not specified, is qcow2.
.sp
Each new snapshot defaults to being created by QEMU (wiping any
contents if the file already exists), but it is also possible to
reuse an externally\-created file.  In the latter case, you should
ensure that the new image file has the same contents as the current
one; QEMU cannot perform any meaningful check.  Typically this is
achieved by using the current image file as the backing file for the
new image.
.sp
On failure, the original disks pre\-snapshot attempt will be used.
.sp
For internal snapshots, the dictionary contains the device and the
snapshot\(aqs name.  If an internal snapshot matching name already
exists, the request will be rejected.  Only some image formats
support it, for example, qcow2, and rbd,
.sp
On failure, qemu will try delete the newly created internal snapshot
in the transaction.  When an I/O error occurs during deletion, the
user needs to fix it later with qemu\-img or other command.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBactions\fP (\fB[\fP\fI\%TransactionAction\fP\fB]\fP) \-\- List of \fBTransactionAction\fP; information needed for the
respective operations.
.IP \(bu 2
\fBproperties\fP (\fI\%TransactionProperties\fP, \fIoptional\fP) \-\- structure of additional options to control the
execution of the transaction.  See \fBTransactionProperties\fP for
additional detail.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
Any errors from commands in the transaction
.UNINDENT

.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
The transaction aborts on the first failure.  Therefore,
there will be information on only one failed operation returned
in an error condition, and subsequent actions will not have been
attempted.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqtransaction\(dq,
     \(dqarguments\(dq: { \(dqactions\(dq: [
         { \(dqtype\(dq: \(dqblockdev\-snapshot\-sync\(dq, \(dqdata\(dq : { \(dqdevice\(dq: \(dqide\-hd0\(dq,
                                     \(dqsnapshot\-file\(dq: \(dq/some/place/my\-image\(dq,
                                     \(dqformat\(dq: \(dqqcow2\(dq } },
         { \(dqtype\(dq: \(dqblockdev\-snapshot\-sync\(dq, \(dqdata\(dq : { \(dqnode\-name\(dq: \(dqmyfile\(dq,
                                     \(dqsnapshot\-file\(dq: \(dq/some/place/my\-image2\(dq,
                                     \(dqsnapshot\-node\-name\(dq: \(dqnode3432\(dq,
                                     \(dqmode\(dq: \(dqexisting\(dq,
                                     \(dqformat\(dq: \(dqqcow2\(dq } },
         { \(dqtype\(dq: \(dqblockdev\-snapshot\-sync\(dq, \(dqdata\(dq : { \(dqdevice\(dq: \(dqide\-hd1\(dq,
                                     \(dqsnapshot\-file\(dq: \(dq/some/place/my\-image2\(dq,
                                     \(dqmode\(dq: \(dqexisting\(dq,
                                     \(dqformat\(dq: \(dqqcow2\(dq } },
         { \(dqtype\(dq: \(dqblockdev\-snapshot\-internal\-sync\(dq, \(dqdata\(dq : {
                                     \(dqdevice\(dq: \(dqide\-hd2\(dq,
                                     \(dqname\(dq: \(dqsnapshot0\(dq } } ] } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH TRACING
.INDENT 0.0
.TP
.B Enum  TraceEventState  (Since: 2.2)
State of a tracing event.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBunavailable\fP \-\- The event is statically disabled.
.IP \(bu 2
\fBdisabled\fP \-\- The event is dynamically disabled.
.IP \(bu 2
\fBenabled\fP \-\- The event is dynamically enabled.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  TraceEventInfo  (Since: 2.2)
Information of a tracing event.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- Event name.
.IP \(bu 2
\fBstate\fP (\fI\%TraceEventState\fP) \-\- Tracing state.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  trace\-event\-get\-state  (Since: 2.2)
Query the state of events.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- Event name pattern (case\-sensitive glob).
.UNINDENT
.TP
.B Return
\fB[\fP\fI\%TraceEventInfo\fP\fB]\fP \-\- a list of \fBTraceEventInfo\fP for the matching events
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqtrace\-event\-get\-state\(dq,
     \(dqarguments\(dq: { \(dqname\(dq: \(dqqemu_memalign\(dq } }
<\- { \(dqreturn\(dq: [ { \(dqname\(dq: \(dqqemu_memalign\(dq, \(dqstate\(dq: \(dqdisabled\(dq, \(dqvcpu\(dq: false } ] }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  trace\-event\-set\-state  (Since: 2.2)
Set the dynamic tracing state of events.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- Event name pattern (case\-sensitive glob).
.IP \(bu 2
\fBenable\fP (\fBboolean\fP) \-\- Whether to enable tracing.
.IP \(bu 2
\fBignore\-unavailable\fP (\fBboolean\fP, \fIoptional\fP) \-\- Do not match unavailable events with \fBname\fP\&.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqtrace\-event\-set\-state\(dq,
     \(dqarguments\(dq: { \(dqname\(dq: \(dqqemu_memalign\(dq, \(dqenable\(dq: true } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH COMPATIBILITY POLICY
.INDENT 0.0
.TP
.B Enum  CompatPolicyInput  (Since: 6.0)
Policy for handling \(dqfunny\(dq input.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBaccept\fP \-\- Accept silently
.IP \(bu 2
\fBreject\fP \-\- Reject with an error
.IP \(bu 2
\fBcrash\fP \-\- abort() the process
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  CompatPolicyOutput  (Since: 6.0)
Policy for handling \(dqfunny\(dq output.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBaccept\fP \-\- Pass on unchanged
.IP \(bu 2
\fBhide\fP \-\- Filter out
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CompatPolicy  (Since: 6.0)
Policy for handling deprecated management interfaces.
.sp
This is intended for testing users of the management interfaces.
.sp
Limitation: covers only syntactic aspects of QMP, i.e. stuff tagged
with feature \(aqdeprecated\(aq or \(aqunstable\(aq.  We may want to extend it
to cover semantic aspects and CLI.
.sp
Limitation: deprecated\-output policy \fBhide\fP is not implemented for
enumeration values.  They behave the same as with policy \fBaccept\fP\&.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\-input\fP (\fI\%CompatPolicyInput\fP, \fIoptional\fP) \-\- how to handle deprecated input (default \(aqaccept\(aq)
.IP \(bu 2
\fBdeprecated\-output\fP (\fI\%CompatPolicyOutput\fP, \fIoptional\fP) \-\- how to handle deprecated output (default
\(aqaccept\(aq)
.IP \(bu 2
\fBunstable\-input\fP (\fI\%CompatPolicyInput\fP, \fIoptional\fP) \-\- how to handle unstable input (default \(aqaccept\(aq)
(since 6.2)
.IP \(bu 2
\fBunstable\-output\fP (\fI\%CompatPolicyOutput\fP, \fIoptional\fP) \-\- how to handle unstable output (default \(aqaccept\(aq)
(since 6.2)
.UNINDENT
.UNINDENT
.UNINDENT
.SH QMP MONITOR CONTROL
.INDENT 0.0
.TP
.B Command  qmp_capabilities  (Since: 0.13)
Enable QMP capabilities.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBenable\fP (\fB[\fP\fI\%QMPCapability\fP\fB]\fP, \fIoptional\fP) \-\- An optional list of QMPCapability values to enable.  The
client must not enable any capability that is not mentioned in
the QMP greeting message.  If the field is not provided, it
means no QMP capabilities will be enabled.  (since 2.12)
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqqmp_capabilities\(dq,
     \(dqarguments\(dq: { \(dqenable\(dq: [ \(dqoob\(dq ] } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
This command is valid exactly when first connecting: it
must be issued before any other command will be accepted, and
will fail once the monitor is accepting other commands.  (see
/interop/qmp\-spec)
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
The QMP client needs to explicitly enable QMP
capabilities, otherwise all the QMP capabilities will be turned
off by default.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QMPCapability  (Since: 2.12)
Enumeration of capabilities to be advertised during initial client
connection, used for agreeing on particular QMP extension behaviors.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBoob\fP \-\- QMP ability to support out\-of\-band requests.  (Please refer to
qmp\-spec.rst for more information on OOB)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VersionTriple  (Since: 2.4)
A three\-part version number.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmajor\fP (\fBint\fP) \-\- The major version number.
.IP \(bu 2
\fBminor\fP (\fBint\fP) \-\- The minor version number.
.IP \(bu 2
\fBmicro\fP (\fBint\fP) \-\- The micro version number.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VersionInfo  (Since: 0.14)
A description of QEMU\(aqs version.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBqemu\fP (\fI\%VersionTriple\fP) \-\- The version of QEMU.  By current convention, a micro version
of 50 signifies a development branch.  A micro version greater
than or equal to 90 signifies a release candidate for the next
minor version.  A micro version of less than 50 signifies a
stable release.
.IP \(bu 2
\fBpackage\fP (\fBstring\fP) \-\- QEMU will always set this field to an empty string.
Downstream versions of QEMU should set this to a non\-empty
string.  The exact format depends on the downstream however it
highly recommended that a unique name is used.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-version  (Since: 0.14)
Return the current version of QEMU.
.INDENT 7.0
.TP
.B Return
\fI\%VersionInfo\fP \-\- A \fBVersionInfo\fP object describing the current version of
QEMU.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-version\(dq }
<\- {
      \(dqreturn\(dq:{
         \(dqqemu\(dq:{
            \(dqmajor\(dq:0,
            \(dqminor\(dq:11,
            \(dqmicro\(dq:5
         },
         \(dqpackage\(dq:\(dq\(dq
      }
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CommandInfo  (Since: 0.14)
Information about a QMP command
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- The command name
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-commands  (Since: 0.14)
Return a list of supported QMP commands by this server
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%CommandInfo\fP\fB]\fP \-\- A list of \fBCommandInfo\fP for all supported commands
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-commands\(dq }
<\- {
     \(dqreturn\(dq:[
        {
           \(dqname\(dq:\(dqquery\-balloon\(dq
        },
        {
           \(dqname\(dq:\(dqsystem_powerdown\(dq
        },
        ...
     ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
This example has been shortened as the real response is too long.
.UNINDENT
.INDENT 0.0
.TP
.B Command  quit  (Since: 0.14)
This command will cause the QEMU process to exit gracefully.  While
every attempt is made to send the QMP response before terminating,
this is not guaranteed.  When using this interface, a premature EOF
would not be unexpected.
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquit\(dq }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  MonitorMode  (Since: 5.0)
An enumeration of monitor modes.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBreadline\fP \-\- HMP monitor (human\-oriented command line interface)
.IP \(bu 2
\fBcontrol\fP \-\- QMP monitor (JSON\-based machine interface)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MonitorOptions  (Since: 5.0)
Options to be used for adding a new monitor.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP, \fIoptional\fP) \-\- Name of the monitor
.IP \(bu 2
\fBmode\fP (\fI\%MonitorMode\fP, \fIoptional\fP) \-\- Selects the monitor mode (default: readline in the system
emulator, control in qemu\-storage\-daemon)
.IP \(bu 2
\fBpretty\fP (\fBboolean\fP, \fIoptional\fP) \-\- Enables pretty printing (QMP only)
.IP \(bu 2
\fBchardev\fP (\fBstring\fP) \-\- Name of a character device to expose the monitor on
.UNINDENT
.UNINDENT
.UNINDENT
.SH QMP INTROSPECTION
.INDENT 0.0
.TP
.B Command  query\-qmp\-schema  (Since: 2.5)
Command query\-qmp\-schema exposes the QMP wire ABI as an array of
SchemaInfo.  This lets QMP clients figure out what commands and
events are available in this QEMU, and their parameters and results.
.sp
However, the SchemaInfo can\(aqt reflect all the rules and restrictions
that apply to QMP.  It\(aqs interface introspection (figuring out
what\(aqs there), not interface specification.  The specification is in
the QAPI schema.
.sp
Furthermore, while we strive to keep the QMP wire format
backwards\-compatible across qemu versions, the introspection output
is not guaranteed to have the same stability.  For example, one
version of qemu may list an object member as an optional
non\-variant, while another lists the same member only through the
object\(aqs variants; or the type of a member may change from a generic
string into a specific enum or from one specific type into an
alternate that includes the original type alongside something else.
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%SchemaInfo\fP\fB]\fP \-\- 
.sp
array of \fBSchemaInfo\fP, where each element describes an
entity in the ABI: command, event, type, ...
.sp
The order of the various SchemaInfo is unspecified; however, all
names are guaranteed to be unique (no name will be duplicated
with different meta\-types).

.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
The QAPI schema is also used to help define \fIinternal\fP
interfaces, by defining QAPI types.  These are not part of the
QMP wire ABI, and therefore not returned by this command.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  SchemaMetaType  (Since: 2.5)
This is a \fBSchemaInfo\fP\(aqs meta type, i.e. the kind of entity it
describes.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBbuiltin\fP \-\- a predefined type such as \(aqint\(aq or \(aqbool\(aq.
.IP \(bu 2
\fBenum\fP \-\- an enumeration type
.IP \(bu 2
\fBarray\fP \-\- an array type
.IP \(bu 2
\fBobject\fP \-\- an object type (struct or union)
.IP \(bu 2
\fBalternate\fP \-\- an alternate type
.IP \(bu 2
\fBcommand\fP \-\- a QMP command
.IP \(bu 2
\fBevent\fP \-\- a QMP event
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfo  (Since: 2.5)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the entity\(aqs name, inherited from \fBbase\fP\&.  The SchemaInfo is
always referenced by this name.  Commands and events have the
name defined in the QAPI schema.  Unlike command and event
names, type names are not part of the wire ABI.  Consequently,
type names are meaningless strings here, although they are still
guaranteed unique regardless of \fBmeta\-type\fP\&.
.IP \(bu 2
\fBmeta\-type\fP (\fI\%SchemaMetaType\fP) \-\- the entity\(aqs meta type, inherited from \fBbase\fP\&.
.IP \(bu 2
\fBfeatures\fP (\fB[\fP\fBstring\fP\fB]\fP, \fIoptional\fP) \-\- names of features associated with the entity, in no
particular order.  (since 4.1 for object types, 4.2 for
commands, 5.0 for the rest)
.IP \(bu 2
When \fBmeta\-type\fP is \fBbuiltin\fP: The members of \fI\%SchemaInfoBuiltin\fP\&.
.IP \(bu 2
When \fBmeta\-type\fP is \fBenum\fP: The members of \fI\%SchemaInfoEnum\fP\&.
.IP \(bu 2
When \fBmeta\-type\fP is \fBarray\fP: The members of \fI\%SchemaInfoArray\fP\&.
.IP \(bu 2
When \fBmeta\-type\fP is \fBobject\fP: The members of \fI\%SchemaInfoObject\fP\&.
.IP \(bu 2
When \fBmeta\-type\fP is \fBalternate\fP: The members of \fI\%SchemaInfoAlternate\fP\&.
.IP \(bu 2
When \fBmeta\-type\fP is \fBcommand\fP: The members of \fI\%SchemaInfoCommand\fP\&.
.IP \(bu 2
When \fBmeta\-type\fP is \fBevent\fP: The members of \fI\%SchemaInfoEvent\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfoBuiltin  (Since: 2.5)
Additional SchemaInfo members for meta\-type \(aqbuiltin\(aq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBjson\-type\fP (\fI\%JSONType\fP) \-\- the JSON type used for this type on the wire.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  JSONType  (Since: 2.5)
The four primitive and two structured types according to RFC 8259
section 1, plus \(aqint\(aq (split off \(aqnumber\(aq), plus the obvious top
type \(aqvalue\(aq.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBstring\fP \-\- JSON string
.IP \(bu 2
\fBnumber\fP \-\- JSON number
.IP \(bu 2
\fBint\fP \-\- JSON number that is an integer
.IP \(bu 2
\fBboolean\fP \-\- literal \fBfalse\fP or \fBtrue\fP
.IP \(bu 2
\fBnull\fP \-\- literal \fBnull\fP
.IP \(bu 2
\fBobject\fP \-\- JSON object
.IP \(bu 2
\fBarray\fP \-\- JSON array
.IP \(bu 2
\fBvalue\fP \-\- any JSON value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfoEnum  (Since: 2.5)
Additional SchemaInfo members for meta\-type \(aqenum\(aq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmembers\fP (\fB[\fP\fI\%SchemaInfoEnumMember\fP\fB]\fP) \-\- the enum type\(aqs members, in no particular order (since
6.2).
.IP \(bu 2
\fBvalues\fP (\fB[\fP\fBstring\fP\fB]\fP) \-\- the enumeration type\(aqs member names, in no particular
order.  Redundant with \fBmembers\fP\&.  Just for backward
compatibility.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- Member \fBvalues\fP is deprecated.  Use \fBmembers\fP instead.
.UNINDENT
.UNINDENT
.sp
Values of this type are JSON string on the wire.
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfoEnumMember  (Since: 6.2)
An object member.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the member\(aqs name, as defined in the QAPI schema.
.IP \(bu 2
\fBfeatures\fP (\fB[\fP\fBstring\fP\fB]\fP, \fIoptional\fP) \-\- names of features associated with the member, in no
particular order.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfoArray  (Since: 2.5)
Additional SchemaInfo members for meta\-type \(aqarray\(aq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBelement\-type\fP (\fBstring\fP) \-\- the array type\(aqs element type.
.UNINDENT
.UNINDENT
.sp
Values of this type are JSON array on the wire.
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfoObject  (Since: 2.5)
Additional SchemaInfo members for meta\-type \(aqobject\(aq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmembers\fP (\fB[\fP\fI\%SchemaInfoObjectMember\fP\fB]\fP) \-\- the object type\(aqs (non\-variant) members, in no particular
order.
.IP \(bu 2
\fBtag\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of the member serving as type tag.  An element of
\fBmembers\fP with this name must exist.
.IP \(bu 2
\fBvariants\fP (\fB[\fP\fI\%SchemaInfoObjectVariant\fP\fB]\fP, \fIoptional\fP) \-\- variant members, i.e. additional members that depend on
the type tag\(aqs value.  Present exactly when \fBtag\fP is present.
The variants are in no particular order, and may even differ
from the order of the values of the enum type of the \fBtag\fP\&.
.UNINDENT
.UNINDENT
.sp
Values of this type are JSON object on the wire.
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfoObjectMember  (Since: 2.5)
An object member.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the member\(aqs name, as defined in the QAPI schema.
.IP \(bu 2
\fBtype\fP (\fBstring\fP) \-\- the name of the member\(aqs type.
.IP \(bu 2
\fBdefault\fP (\fBvalue\fP, \fIoptional\fP) \-\- default when used as command parameter.  If absent, the
parameter is mandatory.  If present, the value must be null.
The parameter is optional, and behavior when it\(aqs missing is not
specified here.  Future extension: if present and non\-null, the
parameter is optional, and defaults to this value.
.IP \(bu 2
\fBfeatures\fP (\fB[\fP\fBstring\fP\fB]\fP, \fIoptional\fP) \-\- names of features associated with the member, in no
particular order.  (since 5.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfoObjectVariant  (Since: 2.5)
The variant members for a value of the type tag.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcase\fP (\fBstring\fP) \-\- a value of the type tag.
.IP \(bu 2
\fBtype\fP (\fBstring\fP) \-\- the name of the object type that provides the variant members
when the type tag has value \fBcase\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfoAlternate  (Since: 2.5)
Additional SchemaInfo members for meta\-type \(aqalternate\(aq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmembers\fP (\fB[\fP\fI\%SchemaInfoAlternateMember\fP\fB]\fP) \-\- the alternate type\(aqs members, in no particular order.  The
members\(aq wire encoding is distinct, see
/devel/qapi\-code\-gen section Alternate types.
.UNINDENT
.UNINDENT
.sp
On the wire, this can be any of the members.
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfoAlternateMember  (Since: 2.5)
An alternate member.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fBstring\fP) \-\- the name of the member\(aqs type.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfoCommand  (Since: 2.5)
Additional SchemaInfo members for meta\-type \(aqcommand\(aq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBarg\-type\fP (\fBstring\fP) \-\- the name of the object type that provides the command\(aqs
parameters.
.IP \(bu 2
\fBret\-type\fP (\fBstring\fP) \-\- the name of the command\(aqs result type.
.IP \(bu 2
\fBallow\-oob\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether the command allows out\-of\-band execution,
defaults to false (Since: 2.12)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SchemaInfoEvent  (Since: 2.5)
Additional SchemaInfo members for meta\-type \(aqevent\(aq.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBarg\-type\fP (\fBstring\fP) \-\- the name of the object type that provides the event\(aqs
parameters.
.UNINDENT
.UNINDENT
.UNINDENT
.SH QEMU OBJECT MODEL (QOM)
.INDENT 0.0
.TP
.B Object  ObjectPropertyInfo  (Since: 1.2)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the name of the property
.IP \(bu 2
\fBtype\fP (\fBstring\fP) \-\- 
.sp
the type of the property.  This will typically come in one of
four forms:
.INDENT 2.0
.IP 1. 3
A primitive type such as \(aqu8\(aq, \(aqu16\(aq, \(aqbool\(aq, \(aqstr\(aq, or
\(aqdouble\(aq.  These types are mapped to the appropriate JSON
type.
.IP 2. 3
A child type in the form \(aqchild<subtype>\(aq where subtype is a
qdev device type name.  Child properties create the
composition tree.
.IP 3. 3
A link type in the form \(aqlink<subtype>\(aq where subtype is a
qdev device type name.  Link properties form the device model
graph.
.UNINDENT

.IP \(bu 2
\fBdescription\fP (\fBstring\fP, \fIoptional\fP) \-\- if specified, the description of the property.
.IP \(bu 2
\fBdefault\-value\fP (\fBvalue\fP, \fIoptional\fP) \-\- the default value, if any (since 5.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  qom\-list  (Since: 1.2)
This command will list any properties of a object given a path in
the object model.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- the path within the object model.  See \fBqom\-get\fP for a
description of this parameter.
.UNINDENT
.TP
.B Return
\fB[\fP\fI\%ObjectPropertyInfo\fP\fB]\fP \-\- a list of \fBObjectPropertyInfo\fP that describe the properties
of the object.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqqom\-list\(dq,
     \(dqarguments\(dq: { \(dqpath\(dq: \(dq/chardevs\(dq } }
<\- { \(dqreturn\(dq: [ { \(dqname\(dq: \(dqtype\(dq, \(dqtype\(dq: \(dqstring\(dq },
                 { \(dqname\(dq: \(dqparallel0\(dq, \(dqtype\(dq: \(dqchild<chardev\-vc>\(dq },
                 { \(dqname\(dq: \(dqserial0\(dq, \(dqtype\(dq: \(dqchild<chardev\-vc>\(dq },
                 { \(dqname\(dq: \(dqmon0\(dq, \(dqtype\(dq: \(dqchild<chardev\-stdio>\(dq } ] }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  qom\-get  (Since: 1.2)
This command will get a property from a object model path and return
the value.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- 
.sp
The path within the object model.  There are two forms of
supported paths\-\-absolute and partial paths.
.sp
Absolute paths are derived from the root object and can follow
child<> or link<> properties.  Since they can follow link<>
properties, they can be arbitrarily long.  Absolute paths look
like absolute filenames and are prefixed  with a leading slash.
.sp
Partial paths look like relative filenames.  They do not begin
with a prefix.  The matching rules for partial paths are subtle
but designed to make specifying objects easy.  At each level of
the composition tree, the partial path is matched as an absolute
path.  The first match is not returned.  At least two matches
are searched for.  A successful result is only returned if only
one match is found.  If more than one match is found, a flag is
return to indicate that the match was ambiguous.

.IP \(bu 2
\fBproperty\fP (\fBstring\fP) \-\- The property name to read
.UNINDENT
.TP
.B Return
\fBvalue\fP \-\- The property value.  The type depends on the property type.
child<> and link<> properties are returned as #str pathnames.
All integer property types (u8, u16, etc) are returned as #int.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Use absolute path"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqqom\-get\(dq,
      \(dqarguments\(dq: { \(dqpath\(dq: \(dq/machine/unattached/device[0]\(dq,
                     \(dqproperty\(dq: \(dqhotplugged\(dq } }
 <\- { \(dqreturn\(dq: false }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Use partial path"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqqom\-get\(dq,
      \(dqarguments\(dq: { \(dqpath\(dq: \(dqunattached/sysbus\(dq,
                     \(dqproperty\(dq: \(dqtype\(dq } }
 <\- { \(dqreturn\(dq: \(dqSystem\(dq }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  qom\-set  (Since: 1.2)
This command will set a property from a object model path.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- see \fBqom\-get\fP for a description of this parameter
.IP \(bu 2
\fBproperty\fP (\fBstring\fP) \-\- the property name to set
.IP \(bu 2
\fBvalue\fP (\fBvalue\fP) \-\- a value who\(aqs type is appropriate for the property type.
See \fBqom\-get\fP for a description of type mapping.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqqom\-set\(dq,
     \(dqarguments\(dq: { \(dqpath\(dq: \(dq/machine\(dq,
                    \(dqproperty\(dq: \(dqgraphics\(dq,
                    \(dqvalue\(dq: false } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ObjectTypeInfo  (Since: 1.1)
This structure describes a search result from \fBqom\-list\-types\fP
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the type name found in the search
.IP \(bu 2
\fBabstract\fP (\fBboolean\fP, \fIoptional\fP) \-\- the type is abstract and can\(aqt be directly instantiated.
Omitted if false.  (since 2.10)
.IP \(bu 2
\fBparent\fP (\fBstring\fP, \fIoptional\fP) \-\- Name of parent type, if any (since 2.10)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  qom\-list\-types  (Since: 1.1)
This command will return a list of types given search parameters
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBimplements\fP (\fBstring\fP, \fIoptional\fP) \-\- if specified, only return types that implement this
type name
.IP \(bu 2
\fBabstract\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, include abstract types in the results
.UNINDENT
.TP
.B Return
\fB[\fP\fI\%ObjectTypeInfo\fP\fB]\fP \-\- a list of \fBObjectTypeInfo\fP or an empty list if no results
are found
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  qom\-list\-properties  (Since: 2.12)
List properties associated with a QOM object.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBtypename\fP (\fBstring\fP) \-\- the type name of an object
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
Objects can create properties at runtime, for example to
describe links between different devices and/or objects.  These
properties are not included in the output of this command.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%ObjectPropertyInfo\fP\fB]\fP \-\- a list of ObjectPropertyInfo describing object properties
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CanHostSocketcanProperties  (Since: 2.12)
\fIAvailability\fP: \fBCONFIG_LINUX\fP
.sp
Properties for can\-host\-socketcan objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBif\fP (\fBstring\fP) \-\- interface name of the host system CAN bus to connect to
.IP \(bu 2
\fBcanbus\fP (\fBstring\fP) \-\- object ID of the can\-bus object to connect to the host
interface
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ColoCompareProperties  (Since: 2.8)
Properties for colo\-compare objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBprimary_in\fP (\fBstring\fP) \-\- name of the character device backend to use for the
primary input (incoming packets are redirected to \fBoutdev\fP)
.IP \(bu 2
\fBsecondary_in\fP (\fBstring\fP) \-\- name of the character device backend to use for
secondary input (incoming packets are only compared to the input
on \fBprimary_in\fP and then dropped)
.IP \(bu 2
\fBoutdev\fP (\fBstring\fP) \-\- name of the character device backend to use for output
.IP \(bu 2
\fBiothread\fP (\fBstring\fP) \-\- name of the iothread to run in
.IP \(bu 2
\fBnotify_dev\fP (\fBstring\fP, \fIoptional\fP) \-\- name of the character device backend to be used to
communicate with the remote colo\-frame (only for Xen COLO)
.IP \(bu 2
\fBcompare_timeout\fP (\fBint\fP, \fIoptional\fP) \-\- the maximum time to hold a packet from \fBprimary_in\fP
for comparison with an incoming packet on \fBsecondary_in\fP in
milliseconds (default: 3000)
.IP \(bu 2
\fBexpired_scan_cycle\fP (\fBint\fP, \fIoptional\fP) \-\- the interval at which colo\-compare checks
whether packets from \fBprimary\fP have timed out, in milliseconds
(default: 3000)
.IP \(bu 2
\fBmax_queue_size\fP (\fBint\fP, \fIoptional\fP) \-\- the maximum number of packets to keep in the queue
for comparing with incoming packets from \fBsecondary_in\fP\&.  If the
queue is full and additional packets are received, the
additional packets are dropped.  (default: 1024)
.IP \(bu 2
\fBvnet_hdr_support\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, vnet header support is enabled
(default: false)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CryptodevBackendProperties  (Since: 2.8)
Properties for cryptodev\-backend and cryptodev\-backend\-builtin
objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBqueues\fP (\fBint\fP, \fIoptional\fP) \-\- the number of queues for the cryptodev backend.  Ignored
for cryptodev\-backend and must be 1 for
cryptodev\-backend\-builtin.  (default: 1)
.IP \(bu 2
\fBthrottle\-bps\fP (\fBint\fP, \fIoptional\fP) \-\- limit total bytes per second (Since 8.0)
.IP \(bu 2
\fBthrottle\-ops\fP (\fBint\fP, \fIoptional\fP) \-\- limit total operations per second (Since 8.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CryptodevVhostUserProperties  (Since: 2.12)
\fIAvailability\fP: \fBCONFIG_VHOST_CRYPTO\fP
.sp
Properties for cryptodev\-vhost\-user objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBchardev\fP (\fBstring\fP) \-\- the name of a Unix domain socket character device that
connects to the vhost\-user server
.IP \(bu 2
The members of \fI\%CryptodevBackendProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DBusVMStateProperties  (Since: 5.0)
Properties for dbus\-vmstate objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBaddr\fP (\fBstring\fP) \-\- the name of the DBus bus to connect to
.IP \(bu 2
\fBid\-list\fP (\fBstring\fP, \fIoptional\fP) \-\- a comma separated list of DBus IDs of helpers whose data
should be included in the VM state on migration
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  NetfilterInsert  (Since: 5.0)
Indicates where to insert a netfilter relative to a given other
filter.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBbefore\fP \-\- insert before the specified filter
.IP \(bu 2
\fBbehind\fP \-\- insert behind the specified filter
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NetfilterProperties  (Since: 2.5)
Properties for objects of classes derived from netfilter.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnetdev\fP (\fBstring\fP) \-\- id of the network device backend to filter
.IP \(bu 2
\fBqueue\fP (\fI\%NetFilterDirection\fP, \fIoptional\fP) \-\- indicates which queue(s) to filter (default: all)
.IP \(bu 2
\fBstatus\fP (\fBstring\fP, \fIoptional\fP) \-\- indicates whether the filter is enabled (\(dqon\(dq) or disabled
(\(dqoff\(dq) (default: \(dqon\(dq)
.IP \(bu 2
\fBposition\fP (\fBstring\fP, \fIoptional\fP) \-\- specifies where the filter should be inserted in the
filter list.  \(dqhead\(dq means the filter is inserted at the head of
the filter list, before any existing filters.  \(dqtail\(dq means the
filter is inserted at the tail of the filter list, behind any
existing filters (default).  \(dqid=<id>\(dq means the filter is
inserted before or behind the filter specified by <id>,
depending on the \fBinsert\fP property.  (default: \(dqtail\(dq)
.IP \(bu 2
\fBinsert\fP (\fI\%NetfilterInsert\fP, \fIoptional\fP) \-\- where to insert the filter relative to the filter given in
\fBposition\fP\&.  Ignored if \fBposition\fP is \(dqhead\(dq or \(dqtail\(dq.
(default: behind)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  FilterBufferProperties  (Since: 2.5)
Properties for filter\-buffer objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBinterval\fP (\fBint\fP) \-\- a non\-zero interval in microseconds.  All packets
arriving in the given interval are delayed until the end of the
interval.
.IP \(bu 2
The members of \fI\%NetfilterProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  FilterDumpProperties  (Since: 2.5)
Properties for filter\-dump objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfile\fP (\fBstring\fP) \-\- the filename where the dumped packets should be stored
.IP \(bu 2
\fBmaxlen\fP (\fBint\fP, \fIoptional\fP) \-\- maximum number of bytes in a packet that are stored
(default: 65536)
.IP \(bu 2
The members of \fI\%NetfilterProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  FilterMirrorProperties  (Since: 2.6)
Properties for filter\-mirror objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBoutdev\fP (\fBstring\fP) \-\- the name of a character device backend to which all
incoming packets are mirrored
.IP \(bu 2
\fBvnet_hdr_support\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, vnet header support is enabled
(default: false)
.IP \(bu 2
The members of \fI\%NetfilterProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  FilterRedirectorProperties  (Since: 2.6)
Properties for filter\-redirector objects.
.sp
At least one of \fBindev\fP or \fBoutdev\fP must be present.  If both are
present, they must not refer to the same character device backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBindev\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of a character device backend from which packets
are received and redirected to the filtered network device
.IP \(bu 2
\fBoutdev\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of a character device backend to which all
incoming packets are redirected
.IP \(bu 2
\fBvnet_hdr_support\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, vnet header support is enabled
(default: false)
.IP \(bu 2
The members of \fI\%NetfilterProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  FilterRewriterProperties  (Since: 2.8)
Properties for filter\-rewriter objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBvnet_hdr_support\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, vnet header support is enabled
(default: false)
.IP \(bu 2
The members of \fI\%NetfilterProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  InputBarrierProperties  (Since: 4.2)
Properties for input\-barrier objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the screen name as declared in the screens section of
barrier.conf
.IP \(bu 2
\fBserver\fP (\fBstring\fP, \fIoptional\fP) \-\- hostname of the Barrier server (default: \(dqlocalhost\(dq)
.IP \(bu 2
\fBport\fP (\fBstring\fP, \fIoptional\fP) \-\- TCP port of the Barrier server (default: \(dq24800\(dq)
.IP \(bu 2
\fBx\-origin\fP (\fBstring\fP, \fIoptional\fP) \-\- x coordinate of the leftmost pixel on the guest screen
(default: \(dq0\(dq)
.IP \(bu 2
\fBy\-origin\fP (\fBstring\fP, \fIoptional\fP) \-\- y coordinate of the topmost pixel on the guest screen
(default: \(dq0\(dq)
.IP \(bu 2
\fBwidth\fP (\fBstring\fP, \fIoptional\fP) \-\- the width of secondary screen in pixels (default: \(dq1920\(dq)
.IP \(bu 2
\fBheight\fP (\fBstring\fP, \fIoptional\fP) \-\- the height of secondary screen in pixels (default: \(dq1080\(dq)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  InputLinuxProperties  (Since: 2.6)
\fIAvailability\fP: \fBCONFIG_LINUX\fP
.sp
Properties for input\-linux objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBevdev\fP (\fBstring\fP) \-\- the path of the host evdev device to use
.IP \(bu 2
\fBgrab_all\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, grab is toggled for all devices (e.g. both
keyboard and mouse) instead of just one device (default: false)
.IP \(bu 2
\fBrepeat\fP (\fBboolean\fP, \fIoptional\fP) \-\- enables auto\-repeat events (default: false)
.IP \(bu 2
\fBgrab\-toggle\fP (\fI\%GrabToggleKeys\fP, \fIoptional\fP) \-\- the key or key combination that toggles device grab
(default: ctrl\-ctrl)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  EventLoopBaseProperties  (Since: 7.1)
Common properties for event loops
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBaio\-max\-batch\fP (\fBint\fP, \fIoptional\fP) \-\- maximum number of requests in a batch for the AIO
engine, 0 means that the engine will use its default.
(default: 0)
.IP \(bu 2
\fBthread\-pool\-min\fP (\fBint\fP, \fIoptional\fP) \-\- minimum number of threads reserved in the thread
pool (default:0)
.IP \(bu 2
\fBthread\-pool\-max\fP (\fBint\fP, \fIoptional\fP) \-\- maximum number of threads the thread pool can
contain (default:64)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  IothreadProperties  (Since: 2.0)
Properties for iothread objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpoll\-max\-ns\fP (\fBint\fP, \fIoptional\fP) \-\- the maximum number of nanoseconds to busy wait for
events.  0 means polling is disabled (default: 32768 on POSIX
hosts, 0 otherwise)
.IP \(bu 2
\fBpoll\-grow\fP (\fBint\fP, \fIoptional\fP) \-\- the multiplier used to increase the polling time when
the algorithm detects it is missing events due to not polling
long enough.  0 selects a default behaviour (default: 0)
.IP \(bu 2
\fBpoll\-shrink\fP (\fBint\fP, \fIoptional\fP) \-\- the divisor used to decrease the polling time when the
algorithm detects it is spending too long polling without
encountering events.  0 selects a default behaviour (default: 0)
.IP \(bu 2
The members of \fI\%EventLoopBaseProperties\fP\&.
.UNINDENT
.UNINDENT
.sp
The \fBaio\-max\-batch\fP option is available since 6.1.
.UNINDENT
.INDENT 0.0
.TP
.B Object  MainLoopProperties  (Since: 7.1)
Properties for the main\-loop object.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%EventLoopBaseProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MemoryBackendProperties  (Since: 2.1)
Properties for objects of classes derived from memory\-backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmerge\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, mark the memory as mergeable (default depends on
the machine type)
.IP \(bu 2
\fBdump\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, include the memory in core dumps (default depends on
the machine type)
.IP \(bu 2
\fBhost\-nodes\fP (\fB[\fP\fBint\fP\fB]\fP, \fIoptional\fP) \-\- the list of NUMA host nodes to bind the memory to
.IP \(bu 2
\fBpolicy\fP (\fI\%HostMemPolicy\fP, \fIoptional\fP) \-\- the NUMA policy (default: \(aqdefault\(aq)
.IP \(bu 2
\fBprealloc\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, preallocate memory (default: false)
.IP \(bu 2
\fBprealloc\-threads\fP (\fBint\fP, \fIoptional\fP) \-\- number of CPU threads to use for prealloc
(default: 1)
.IP \(bu 2
\fBprealloc\-context\fP (\fBstring\fP, \fIoptional\fP) \-\- thread context to use for creation of
preallocation threads (default: none) (since 7.2)
.IP \(bu 2
\fBshare\fP (\fBboolean\fP, \fIoptional\fP) \-\- if false, the memory is private to QEMU; if true, it is
shared (default false for backends memory\-backend\-file and
memory\-backend\-ram, true for backends memory\-backend\-epc,
memory\-backend\-memfd, and memory\-backend\-shm)
.IP \(bu 2
\fBreserve\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, reserve swap space (or huge pages) if applicable
(default: true) (since 6.1)
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- size of the memory region in bytes
.IP \(bu 2
\fBx\-use\-canonical\-path\-for\-ramblock\-id\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, the canonical path
is used for ramblock\-id.  Disable this for 4.0 machine types or
older to allow migration with newer QEMU versions.
(default: false generally, but true for machine types <= 4.0)
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
prealloc=true and reserve=false cannot be set at the same
time.  With reserve=true, the behavior depends on the operating
system: for example, Linux will not reserve swap space for shared
file mappings \-\- \(dqnot applicable\(dq.  In contrast, reserve=false
will bail out if it cannot be configured accordingly.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MemoryBackendFileProperties  (Since: 2.1)
Properties for memory\-backend\-file objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBalign\fP (\fBint\fP, \fIoptional\fP) \-\- the base address alignment when QEMU mmap(2)s \fBmem\-path\fP\&.
Some backend stores specified by \fBmem\-path\fP require an alignment
different than the default one used by QEMU, e.g. the device DAX
/dev/dax0.0 requires 2M alignment rather than 4K.  In such
cases, users can specify the required alignment via this option.
0 selects a default alignment (currently the page size).
(default: 0)
.IP \(bu 2
\fBoffset\fP (\fBint\fP, \fIoptional\fP) \-\- the offset into the target file that the region starts at.
You can use this option to back multiple regions with a single
file.  Must be a multiple of the page size.
(default: 0) (since 8.1)
.IP \(bu 2
\fBdiscard\-data\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, the file contents can be destroyed when QEMU
exits, to avoid unnecessarily flushing data to the backing file.
Note that \fBdiscard\-data\fP is only an optimization, and QEMU might
not discard file contents if it aborts unexpectedly or is
terminated using SIGKILL.  (default: false)
.IP \(bu 2
\fBmem\-path\fP (\fBstring\fP) \-\- the path to either a shared memory or huge page
filesystem mount
.IP \(bu 2
\fBpmem\fP (\fBboolean\fP, \fIoptional\fP) \-\- specifies whether the backing file specified by \fBmem\-path\fP is
in host persistent memory that can be accessed using the SNIA
NVM programming model (e.g. Intel NVDIMM).
.IP \(bu 2
\fBreadonly\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, the backing file is opened read\-only; if false,
it is opened read\-write.  (default: false)
.IP \(bu 2
\fBrom\fP (\fI\%OnOffAuto\fP, \fIoptional\fP) \-\- whether to create Read Only Memory (ROM) that cannot be
modified by the VM.  Any write attempts to such ROM will be
denied.  Most use cases want writable RAM instead of ROM.
However, selected use cases, like R/O NVDIMMs, can benefit from
ROM.  If set to \(aqon\(aq, create ROM; if set to \(aqoff\(aq, create
writable RAM; if set to \(aqauto\(aq, the value of the \fBreadonly\fP
property is used.  This property is primarily helpful when we
want to have proper RAM in configurations that would
traditionally create ROM before this property was introduced: VM
templating, where we want to open a file readonly (\fBreadonly\fP set
to true) and mark the memory to be private for QEMU (\fBshare\fP set
to false).  For this use case, we need writable RAM instead of
ROM, and want to set this property to \(aqoff\(aq.  (default: auto,
since 8.2)
.IP \(bu 2
The members of \fI\%MemoryBackendProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MemoryBackendMemfdProperties  (Since: 2.12)
\fIAvailability\fP: \fBCONFIG_LINUX\fP
.sp
Properties for memory\-backend\-memfd objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBhugetlb\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, the file to be created resides in the hugetlbfs
filesystem (default: false)
.IP \(bu 2
\fBhugetlbsize\fP (\fBint\fP, \fIoptional\fP) \-\- the hugetlb page size on systems that support multiple
hugetlb page sizes (it must be a power of 2 value supported by
the system).  0 selects a default page size.  This option is
ignored if \fBhugetlb\fP is false.  (default: 0)
.IP \(bu 2
\fBseal\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, create a sealed\-file, which will block further
resizing of the memory (default: true)
.IP \(bu 2
The members of \fI\%MemoryBackendProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MemoryBackendShmProperties  (Since: 9.1)
\fIAvailability\fP: \fBCONFIG_POSIX\fP
.sp
Properties for memory\-backend\-shm objects.
.sp
This memory backend supports only shared memory, which is the
default.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%MemoryBackendProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MemoryBackendEpcProperties  (Since: 6.2)
\fIAvailability\fP: \fBCONFIG_LINUX\fP
.sp
Properties for memory\-backend\-epc objects.
.sp
The \fBmerge\fP boolean option is false by default with epc
.sp
The \fBdump\fP boolean option is false by default with epc
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%MemoryBackendProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  PrManagerHelperProperties  (Since: 2.11)
\fIAvailability\fP: \fBCONFIG_LINUX\fP
.sp
Properties for pr\-manager\-helper objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- the path to a Unix domain socket for connecting to the
external helper
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QtestProperties  (Since: 6.0)
Properties for qtest objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBchardev\fP (\fBstring\fP) \-\- the chardev to be used to receive qtest commands on.
.IP \(bu 2
\fBlog\fP (\fBstring\fP, \fIoptional\fP) \-\- the path to a log file
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RemoteObjectProperties  (Since: 6.0)
Properties for x\-remote\-object objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfd\fP (\fBstring\fP) \-\- file descriptor name previously passed via \(aqgetfd\(aq command
.IP \(bu 2
\fBdevid\fP (\fBstring\fP) \-\- the id of the device to be associated with the file
descriptor
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VfioUserServerProperties  (Since: 7.1)
Properties for x\-vfio\-user\-server objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsocket\fP (\fI\%SocketAddress\fP) \-\- socket to be used by the libvfio\-user library
.IP \(bu 2
\fBdevice\fP (\fBstring\fP) \-\- the ID of the device to be emulated at the server
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  IOMMUFDProperties  (Since: 9.0)
Properties for iommufd objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfd\fP (\fBstring\fP, \fIoptional\fP) \-\- file descriptor name previously passed via \(aqgetfd\(aq command,
which represents a pre\-opened /dev/iommu.  This allows the
iommufd object to be shared across several subsystems (VFIO,
VDPA, ...), and the file descriptor to be shared with other
process, e.g. DPDK.  (default: QEMU opens /dev/iommu by itself)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AcpiGenericInitiatorProperties  (Since: 9.0)
Properties for acpi\-generic\-initiator objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpci\-dev\fP (\fBstring\fP) \-\- PCI device ID to be associated with the node
.IP \(bu 2
\fBnode\fP (\fBint\fP) \-\- NUMA node associated with the PCI device
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AcpiGenericPortProperties  (Since: 9.2)
Properties for acpi\-generic\-port objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpci\-bus\fP (\fBstring\fP) \-\- QOM path of the PCI bus of the hostbridge associated with
this SRAT Generic Port Affinity Structure.  This is the same as
the bus parameter for the root ports attached to this host
bridge.  The resulting SRAT Generic Port Affinity Structure will
refer to the ACPI object in DSDT that represents the host bridge
(e.g.  ACPI0016 for CXL host bridges).  See ACPI 6.5 Section
5.2.16.7 for more information.
.IP \(bu 2
\fBnode\fP (\fBint\fP) \-\- Similar to a NUMA node ID, but instead of providing a
reference point used for defining NUMA distances and access
characteristics to memory or from an initiator (e.g. CPU), this
node defines the boundary point between non\-discoverable system
buses which must be described by firmware, and a discoverable
bus.  NUMA distances and access characteristics are defined to
and from that point.  For system software to establish full
initiator to target characteristics this information must be
combined with information retrieved from the discoverable part
of the path.  An example would use CDAT (see UEFI.org)
information read from devices and switches in conjunction with
link characteristics read from PCIe Configuration space.
To get the full path latency from CPU to CXL attached DRAM
CXL device:  Add the latency from CPU to Generic Port (from
HMAT indexed via the node ID in this SRAT structure) to
that for CXL bus links, the latency across intermediate switches
and from the EP port to the actual memory.  Bandwidth is more
complex as there may be interleaving across multiple devices
and shared links in the path.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RngProperties  (Since: 1.3)
Properties for objects of classes derived from rng.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBopened\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, the device is opened immediately when applying
this option and will probably fail when processing the next
option.  Don\(aqt use; only provided for compatibility.
(default: false)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBdeprecated\fP \-\- Member \fBopened\fP is deprecated.  Setting true doesn\(aqt
make sense, and false is already the default.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RngEgdProperties  (Since: 1.3)
Properties for rng\-egd objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBchardev\fP (\fBstring\fP) \-\- the name of a character device backend that provides the
connection to the RNG daemon
.IP \(bu 2
The members of \fI\%RngProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  RngRandomProperties  (Since: 1.3)
\fIAvailability\fP: \fBCONFIG_POSIX\fP
.sp
Properties for rng\-random objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fBstring\fP, \fIoptional\fP) \-\- the filename of the device on the host to obtain entropy
from (default: \(dq/dev/urandom\(dq)
.IP \(bu 2
The members of \fI\%RngProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SevCommonProperties  (Since: 9.1)
Properties common to objects that are derivatives of sev\-common.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsev\-device\fP (\fBstring\fP, \fIoptional\fP) \-\- SEV device to use (default: \(dq/dev/sev\(dq)
.IP \(bu 2
\fBcbitpos\fP (\fBint\fP, \fIoptional\fP) \-\- C\-bit location in page table entry (default: 0)
.IP \(bu 2
\fBreduced\-phys\-bits\fP (\fBint\fP) \-\- number of bits in physical addresses that become
unavailable when SEV is enabled
.IP \(bu 2
\fBkernel\-hashes\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, add hashes of kernel/initrd/cmdline to a
designated guest firmware page for measured boot with \-kernel
(default: false) (since 6.2)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SevGuestProperties  (Since: 2.12)
Properties for sev\-guest objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdh\-cert\-file\fP (\fBstring\fP, \fIoptional\fP) \-\- guest owners DH certificate (encoded with base64)
.IP \(bu 2
\fBsession\-file\fP (\fBstring\fP, \fIoptional\fP) \-\- guest owners session parameters (encoded with base64)
.IP \(bu 2
\fBpolicy\fP (\fBint\fP, \fIoptional\fP) \-\- SEV policy value (default: 0x1)
.IP \(bu 2
\fBhandle\fP (\fBint\fP, \fIoptional\fP) \-\- SEV firmware handle (default: 0)
.IP \(bu 2
\fBlegacy\-vm\-type\fP (\fI\%OnOffAuto\fP, \fIoptional\fP) \-\- Use legacy KVM_SEV_INIT KVM interface for creating
the VM.  The newer KVM_SEV_INIT2 interface, from Linux >= 6.10,
syncs additional vCPU state when initializing the VMSA
structures, which will result in a different guest measurement.
Set this to \(aqon\(aq to force compatibility with older QEMU or kernel
versions that rely on legacy KVM_SEV_INIT behavior.  \(aqauto\(aq will
behave identically to \(aqon\(aq, but will automatically switch to
using KVM_SEV_INIT2 if the user specifies any additional options
that require it.  If set to \(aqoff\(aq, QEMU will require
KVM_SEV_INIT2 unconditionally.
(default: off) (since 9.1)
.IP \(bu 2
The members of \fI\%SevCommonProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SevSnpGuestProperties  (Since: 9.1)
Properties for sev\-snp\-guest objects.  Most of these are direct
arguments for the KVM_SNP_* interfaces documented in the Linux
kernel source under
Documentation/arch/x86/amd\-memory\-encryption.rst, which are in turn
closely coupled with the SNP_INIT/SNP_LAUNCH_* firmware commands
documented in the SEV\-SNP Firmware ABI Specification (Rev 0.9).
.sp
More usage information is also available in the QEMU source tree
under docs/amd\-memory\-encryption.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpolicy\fP (\fBint\fP, \fIoptional\fP) \-\- the \(aqPOLICY\(aq parameter to the SNP_LAUNCH_START command, as
defined in the SEV\-SNP firmware ABI (default: 0x30000)
.IP \(bu 2
\fBguest\-visible\-workarounds\fP (\fBstring\fP, \fIoptional\fP) \-\- 16\-byte, base64\-encoded blob to report
hypervisor\-defined workarounds, corresponding to the \(aqGOSVW\(aq
parameter of the SNP_LAUNCH_START command defined in the SEV\-SNP
firmware ABI (default: all\-zero)
.IP \(bu 2
\fBid\-block\fP (\fBstring\fP, \fIoptional\fP) \-\- 96\-byte, base64\-encoded blob to provide the \(aqID Block\(aq
structure for the SNP_LAUNCH_FINISH command defined in the
SEV\-SNP firmware ABI (default: all\-zero)
.IP \(bu 2
\fBid\-auth\fP (\fBstring\fP, \fIoptional\fP) \-\- 4096\-byte, base64\-encoded blob to provide the \(aqID
Authentication Information Structure\(aq for the SNP_LAUNCH_FINISH
command defined in the SEV\-SNP firmware ABI (default: all\-zero)
.IP \(bu 2
\fBauthor\-key\-enabled\fP (\fBboolean\fP, \fIoptional\fP) \-\- true if \(aqid\-auth\(aq blob contains the \(aqAUTHOR_KEY\(aq
field defined SEV\-SNP firmware ABI (default: false)
.IP \(bu 2
\fBhost\-data\fP (\fBstring\fP, \fIoptional\fP) \-\- 32\-byte, base64\-encoded, user\-defined blob to provide to
the guest, as documented for the \(aqHOST_DATA\(aq parameter of the
SNP_LAUNCH_FINISH command in the SEV\-SNP firmware ABI (default:
all\-zero)
.IP \(bu 2
\fBvcek\-disabled\fP (\fBboolean\fP, \fIoptional\fP) \-\- Guests are by default allowed to choose between VLEK
(Versioned Loaded Endorsement Key) or VCEK (Versioned Chip
Endorsement Key) when requesting attestation reports from
firmware.  Set this to true to disable the use of VCEK.
(default: false) (since: 9.1)
.IP \(bu 2
The members of \fI\%SevCommonProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  TdxGuestProperties  (Since: 10.1)
Properties for tdx\-guest objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBattributes\fP (\fBint\fP, \fIoptional\fP) \-\- The \(aqattributes\(aq of a TD guest that is passed to
KVM_TDX_INIT_VM
.IP \(bu 2
\fBsept\-ve\-disable\fP (\fBboolean\fP, \fIoptional\fP) \-\- toggle bit 28 of TD attributes to control disabling
of EPT violation conversion to #VE on guest TD access of PENDING
pages.  Some guest OS (e.g., Linux TD guest) may require this to
be set, otherwise they refuse to boot.
.IP \(bu 2
\fBmrconfigid\fP (\fBstring\fP, \fIoptional\fP) \-\- ID for non\-owner\-defined configuration of the guest TD,
e.g., run\-time or OS configuration (base64 encoded SHA384 digest).
Defaults to all zeros.
.IP \(bu 2
\fBmrowner\fP (\fBstring\fP, \fIoptional\fP) \-\- ID for the guest TD’s owner (base64 encoded SHA384 digest).
Defaults to all zeros.
.IP \(bu 2
\fBmrownerconfig\fP (\fBstring\fP, \fIoptional\fP) \-\- ID for owner\-defined configuration of the guest TD,
e.g., specific to the workload rather than the run\-time or OS
(base64 encoded SHA384 digest).  Defaults to all zeros.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ThreadContextProperties  (Since: 7.2)
Properties for thread context objects.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcpu\-affinity\fP (\fB[\fP\fBint\fP\fB]\fP, \fIoptional\fP) \-\- the list of host CPU numbers used as CPU affinity for
all threads created in the thread context (default: QEMU main
thread CPU affinity)
.IP \(bu 2
\fBnode\-affinity\fP (\fB[\fP\fBint\fP\fB]\fP, \fIoptional\fP) \-\- the list of host node numbers that will be resolved
to a list of host CPU numbers used as CPU affinity.  This is a
shortcut for specifying the list of host CPU numbers belonging
to the host nodes manually by setting \fBcpu\-affinity\fP\&.
(default: QEMU main thread affinity)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  ObjectType  (Since: 6.0)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBacpi\-generic\-initiator\fP \-\- Not documented
.IP \(bu 2
\fBacpi\-generic\-port\fP \-\- Not documented
.IP \(bu 2
\fBauthz\-list\fP \-\- Not documented
.IP \(bu 2
\fBauthz\-listfile\fP \-\- Not documented
.IP \(bu 2
\fBauthz\-pam\fP \-\- Not documented
.IP \(bu 2
\fBauthz\-simple\fP \-\- Not documented
.IP \(bu 2
\fBcan\-bus\fP \-\- Not documented
.IP \(bu 2
\fBcan\-host\-socketcan\fP \-\- Not documented
.IP \(bu 2
\fBcolo\-compare\fP \-\- Not documented
.IP \(bu 2
\fBcryptodev\-backend\fP \-\- Not documented
.IP \(bu 2
\fBcryptodev\-backend\-builtin\fP \-\- Not documented
.IP \(bu 2
\fBcryptodev\-backend\-lkcf\fP \-\- Not documented
.IP \(bu 2
\fBcryptodev\-vhost\-user\fP \-\- Not documented
.IP \(bu 2
\fBdbus\-vmstate\fP \-\- Not documented
.IP \(bu 2
\fBfilter\-buffer\fP \-\- Not documented
.IP \(bu 2
\fBfilter\-dump\fP \-\- Not documented
.IP \(bu 2
\fBfilter\-mirror\fP \-\- Not documented
.IP \(bu 2
\fBfilter\-redirector\fP \-\- Not documented
.IP \(bu 2
\fBfilter\-replay\fP \-\- Not documented
.IP \(bu 2
\fBfilter\-rewriter\fP \-\- Not documented
.IP \(bu 2
\fBinput\-barrier\fP \-\- Not documented
.IP \(bu 2
\fBinput\-linux\fP \-\- Not documented
.IP \(bu 2
\fBiommufd\fP \-\- Not documented
.IP \(bu 2
\fBiothread\fP \-\- Not documented
.IP \(bu 2
\fBmain\-loop\fP \-\- Not documented
.IP \(bu 2
\fBmemory\-backend\-epc\fP \-\- Not documented
.IP \(bu 2
\fBmemory\-backend\-file\fP \-\- Not documented
.IP \(bu 2
\fBmemory\-backend\-memfd\fP \-\- Not documented
.IP \(bu 2
\fBmemory\-backend\-ram\fP \-\- Not documented
.IP \(bu 2
\fBmemory\-backend\-shm\fP \-\- Not documented
.IP \(bu 2
\fBpef\-guest\fP \-\- Not documented
.IP \(bu 2
\fBpr\-manager\-helper\fP \-\- Not documented
.IP \(bu 2
\fBqtest\fP \-\- Not documented
.IP \(bu 2
\fBrng\-builtin\fP \-\- Not documented
.IP \(bu 2
\fBrng\-egd\fP \-\- Not documented
.IP \(bu 2
\fBrng\-random\fP \-\- Not documented
.IP \(bu 2
\fBsecret\fP \-\- Not documented
.IP \(bu 2
\fBsecret_keyring\fP \-\- Not documented
.IP \(bu 2
\fBsev\-guest\fP \-\- Not documented
.IP \(bu 2
\fBsev\-snp\-guest\fP \-\- Not documented
.IP \(bu 2
\fBthread\-context\fP \-\- Not documented
.IP \(bu 2
\fBs390\-pv\-guest\fP \-\- Not documented
.IP \(bu 2
\fBtdx\-guest\fP \-\- Not documented
.IP \(bu 2
\fBthrottle\-group\fP \-\- Not documented
.IP \(bu 2
\fBtls\-creds\-anon\fP \-\- Not documented
.IP \(bu 2
\fBtls\-creds\-psk\fP \-\- Not documented
.IP \(bu 2
\fBtls\-creds\-x509\fP \-\- Not documented
.IP \(bu 2
\fBtls\-cipher\-suites\fP \-\- Not documented
.IP \(bu 2
\fBx\-remote\-object\fP \-\- Not documented
.IP \(bu 2
\fBx\-vfio\-user\-server\fP \-\- Not documented
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- Members \fBx\-remote\-object\fP and \fBx\-vfio\-user\-server\fP are
experimental.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ObjectOptions  (Since: 6.0)
Describes the options of a user creatable QOM object.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBqom\-type\fP (\fI\%ObjectType\fP) \-\- the class name for the object to be created
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- the name of the new object
.IP \(bu 2
When \fBqom\-type\fP is \fBacpi\-generic\-initiator\fP: The members of \fI\%AcpiGenericInitiatorProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBacpi\-generic\-port\fP: The members of \fI\%AcpiGenericPortProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBauthz\-list\fP: The members of \fI\%AuthZListProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBauthz\-listfile\fP: The members of \fI\%AuthZListFileProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBauthz\-pam\fP: The members of \fI\%AuthZPAMProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBauthz\-simple\fP: The members of \fI\%AuthZSimpleProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBcan\-host\-socketcan\fP: The members of \fI\%CanHostSocketcanProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBcolo\-compare\fP: The members of \fI\%ColoCompareProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBcryptodev\-backend\fP: The members of \fI\%CryptodevBackendProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBcryptodev\-backend\-builtin\fP: The members of \fI\%CryptodevBackendProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBcryptodev\-backend\-lkcf\fP: The members of \fI\%CryptodevBackendProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBcryptodev\-vhost\-user\fP: The members of \fI\%CryptodevVhostUserProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBdbus\-vmstate\fP: The members of \fI\%DBusVMStateProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBfilter\-buffer\fP: The members of \fI\%FilterBufferProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBfilter\-dump\fP: The members of \fI\%FilterDumpProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBfilter\-mirror\fP: The members of \fI\%FilterMirrorProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBfilter\-redirector\fP: The members of \fI\%FilterRedirectorProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBfilter\-replay\fP: The members of \fI\%NetfilterProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBfilter\-rewriter\fP: The members of \fI\%FilterRewriterProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBinput\-barrier\fP: The members of \fI\%InputBarrierProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBinput\-linux\fP: The members of \fI\%InputLinuxProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBiommufd\fP: The members of \fI\%IOMMUFDProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBiothread\fP: The members of \fI\%IothreadProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBmain\-loop\fP: The members of \fI\%MainLoopProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBmemory\-backend\-epc\fP: The members of \fI\%MemoryBackendEpcProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBmemory\-backend\-file\fP: The members of \fI\%MemoryBackendFileProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBmemory\-backend\-memfd\fP: The members of \fI\%MemoryBackendMemfdProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBmemory\-backend\-ram\fP: The members of \fI\%MemoryBackendProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBmemory\-backend\-shm\fP: The members of \fI\%MemoryBackendShmProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBpr\-manager\-helper\fP: The members of \fI\%PrManagerHelperProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBqtest\fP: The members of \fI\%QtestProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBrng\-builtin\fP: The members of \fI\%RngProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBrng\-egd\fP: The members of \fI\%RngEgdProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBrng\-random\fP: The members of \fI\%RngRandomProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBsecret\fP: The members of \fI\%SecretProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBsecret_keyring\fP: The members of \fI\%SecretKeyringProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBsev\-guest\fP: The members of \fI\%SevGuestProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBsev\-snp\-guest\fP: The members of \fI\%SevSnpGuestProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBtdx\-guest\fP: The members of \fI\%TdxGuestProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBthread\-context\fP: The members of \fI\%ThreadContextProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBthrottle\-group\fP: The members of \fI\%ThrottleGroupProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBtls\-creds\-anon\fP: The members of \fI\%TlsCredsAnonProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBtls\-creds\-psk\fP: The members of \fI\%TlsCredsPskProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBtls\-creds\-x509\fP: The members of \fI\%TlsCredsX509Properties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBtls\-cipher\-suites\fP: The members of \fI\%TlsCredsProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBx\-remote\-object\fP: The members of \fI\%RemoteObjectProperties\fP\&.
.IP \(bu 2
When \fBqom\-type\fP is \fBx\-vfio\-user\-server\fP: The members of \fI\%VfioUserServerProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  object\-add  (Since: 2.0)
Create a QOM object.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%ObjectOptions\fP\&.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
Error if \fBqom\-type\fP is not a valid class name
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqobject\-add\(dq,
     \(dqarguments\(dq: { \(dqqom\-type\(dq: \(dqrng\-random\(dq, \(dqid\(dq: \(dqrng1\(dq,
                    \(dqfilename\(dq: \(dq/dev/hwrng\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  object\-del  (Since: 2.0)
Remove a QOM object.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- the name of the QOM object to remove
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
Error if \fBid\fP is not a valid id for a QOM object
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqobject\-del\(dq, \(dqarguments\(dq: { \(dqid\(dq: \(dqrng1\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH DEVICE INFRASTRUCTURE (QDEV)
.INDENT 0.0
.TP
.B Command  device\-list\-properties  (Since: 1.2)
List properties associated with a device.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBtypename\fP (\fBstring\fP) \-\- the type name of a device
.UNINDENT
.TP
.B Return
\fB[\fP\fI\%ObjectPropertyInfo\fP\fB]\fP \-\- a list of ObjectPropertyInfo describing a devices
properties
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
Objects can create properties at runtime, for example to
describe links between different devices and/or objects.  These
properties are not included in the output of this command.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  device_add  (Since: 0.13)
Add a device.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBdriver\fP (\fBstring\fP) \-\- the name of the new device\(aqs driver
.IP \(bu 2
\fBbus\fP (\fBstring\fP, \fIoptional\fP) \-\- the device\(aqs parent bus (device tree path)
.IP \(bu 2
\fBid\fP (\fBstring\fP, \fIoptional\fP) \-\- the device\(aqs ID, must be unique
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBjson\-cli\fP \-\- If present, the \(dq\-device\(dq command line option supports
JSON syntax with a structure identical to the arguments of this
command.
.IP \(bu 2
\fBjson\-cli\-hotplug\fP \-\- If present, the \(dq\-device\(dq command line option
supports JSON syntax without the reference counting leak that
broke hot\-unplug
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Notes"
.INDENT 0.0
.IP 1. 3
Additional arguments depend on the type.
.IP 2. 3
For detailed information about this command, please refer to
the \(aqdocs/qdev\-device\-use.txt\(aq file.
.IP 3. 3
It\(aqs possible to list device properties by running QEMU with
the \fB\-device DEVICE,help\fP command\-line argument, where
DEVICE is the device\(aqs name.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqdevice_add\(dq,
     \(dqarguments\(dq: { \(dqdriver\(dq: \(dqe1000\(dq, \(dqid\(dq: \(dqnet1\(dq,
                    \(dqbus\(dq: \(dqpci.0\(dq,
                    \(dqmac\(dq: \(dq52:54:00:12:34:56\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  device_del  (Since: 0.14)
Remove a device from a guest
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- the device\(aqs ID or QOM path
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBid\fP is not a valid device, DeviceNotFound
.UNINDENT

.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
When this command completes, the device may not be removed
from the guest.  Hot removal is an operation that requires guest
cooperation.  This command merely requests that the guest begin
the hot removal process.  Completion of the device removal
process is signaled with a DEVICE_DELETED event.  Guest reset
will automatically complete removal for all devices.  If a
guest\-side error in the hot removal process is detected, the
device will not be removed and a DEVICE_UNPLUG_GUEST_ERROR event
is sent.  Some errors cannot be detected.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqdevice_del\(dq,
     \(dqarguments\(dq: { \(dqid\(dq: \(dqnet1\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqdevice_del\(dq,
     \(dqarguments\(dq: { \(dqid\(dq: \(dq/machine/peripheral\-anon/device[0]\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  DEVICE_DELETED  (Since: 1.5)
Emitted whenever the device removal completion is acknowledged by
the guest.  At this point, it\(aqs safe to reuse the specified device
ID.  Device removal can be initiated by the guest or by HMP/QMP
commands.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP, \fIoptional\fP) \-\- the device\(aqs ID if it has one
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- the device\(aqs QOM path
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqDEVICE_DELETED\(dq,
     \(dqdata\(dq: { \(dqdevice\(dq: \(dqvirtio\-net\-pci\-0\(dq,
               \(dqpath\(dq: \(dq/machine/peripheral/virtio\-net\-pci\-0\(dq },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1265044230, \(dqmicroseconds\(dq: 450486 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  DEVICE_UNPLUG_GUEST_ERROR  (Since: 6.2)
Emitted when a device hot unplug fails due to a guest reported
error.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP, \fIoptional\fP) \-\- the device\(aqs ID if it has one
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- the device\(aqs QOM path
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqDEVICE_UNPLUG_GUEST_ERROR\(dq,
     \(dqdata\(dq: { \(dqdevice\(dq: \(dqcore1\(dq,
               \(dqpath\(dq: \(dq/machine/peripheral/core1\(dq },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1615570772, \(dqmicroseconds\(dq: 202844 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  device\-sync\-config  (Since: 9.2)
This command is unstable/experimental.
.sp
Synchronize device configuration from host to guest part.  First,
copy the configuration from the host part (backend) to the guest
part (frontend).  Then notify guest software that device
configuration changed.
.sp
The command may be used to notify the guest about block device
capacity change.  Currently only vhost\-user\-blk device supports
this.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- the device\(aqs ID or QOM path
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- The command is experimental.
.UNINDENT
.UNINDENT
.UNINDENT
.SH COMMON MACHINE TYPES
.INDENT 0.0
.TP
.B Enum  S390CpuEntitlement  (Since: 8.2)
An enumeration of CPU entitlements that can be assumed by a virtual
S390 CPU
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBauto\fP \-\- Not documented
.IP \(bu 2
\fBlow\fP \-\- Not documented
.IP \(bu 2
\fBmedium\fP \-\- Not documented
.IP \(bu 2
\fBhigh\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  CpuTopologyLevel  (Since: 9.2)
An enumeration of CPU topology levels.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBthread\fP \-\- thread level, which would also be called SMT level or
logical processor level.  The \fBthreads\fP option in
SMPConfiguration is used to configure the topology of this
level.
.IP \(bu 2
\fBcore\fP \-\- core level.  The \fBcores\fP option in SMPConfiguration is used
to configure the topology of this level.
.IP \(bu 2
\fBmodule\fP \-\- module level.  The \fBmodules\fP option in SMPConfiguration is
used to configure the topology of this level.
.IP \(bu 2
\fBcluster\fP \-\- cluster level.  The \fBclusters\fP option in SMPConfiguration
is used to configure the topology of this level.
.IP \(bu 2
\fBdie\fP \-\- die level.  The \fBdies\fP option in SMPConfiguration is used to
configure the topology of this level.
.IP \(bu 2
\fBsocket\fP \-\- socket level, which would also be called package level.
The \fBsockets\fP option in SMPConfiguration is used to configure
the topology of this level.
.IP \(bu 2
\fBbook\fP \-\- book level.  The \fBbooks\fP option in SMPConfiguration is used
to configure the topology of this level.
.IP \(bu 2
\fBdrawer\fP \-\- drawer level.  The \fBdrawers\fP option in SMPConfiguration is
used to configure the topology of this level.
.IP \(bu 2
\fBdefault\fP \-\- default level.  Some architectures will have default
topology settings (e.g., cache topology), and this special
level means following the architecture\-specific settings.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  CacheLevelAndType  (Since: 9.2)
Caches a system may have.  The enumeration value here is the
combination of cache level and cache type.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBl1d\fP \-\- L1 data cache.
.IP \(bu 2
\fBl1i\fP \-\- L1 instruction cache.
.IP \(bu 2
\fBl2\fP \-\- L2 (unified) cache.
.IP \(bu 2
\fBl3\fP \-\- L3 (unified) cache
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SmpCacheProperties  (Since: 9.2)
Cache information for SMP system.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcache\fP (\fI\%CacheLevelAndType\fP) \-\- Cache name, which is the combination of cache level
and cache type.
.IP \(bu 2
\fBtopology\fP (\fI\%CpuTopologyLevel\fP) \-\- Cache topology level.  It accepts the CPU topology
enumeration as the parameter, i.e., CPUs in the same
topology container share the same cache.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SmpCachePropertiesWrapper
List wrapper of SmpCacheProperties.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcaches\fP (\fB[\fP\fI\%SmpCacheProperties\fP\fB]\fP) \-\- the list of SmpCacheProperties.
.UNINDENT
.UNINDENT
.sp
Since 9.2
.UNINDENT
.SH MACHINES
.INDENT 0.0
.TP
.B Enum  SysEmuTarget  (Since: 3.0)
The comprehensive enumeration of QEMU system emulation (\(dqsoftmmu\(dq)
targets.  Run \(dq./configure \-\-help\(dq in the project root directory,
and look for the *\-softmmu targets near the \(dq\-\-target\-list\(dq option.
The individual target constants are not documented here, for the
time being.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBrx\fP \-\- since 5.0
.IP \(bu 2
\fBavr\fP \-\- since 5.1
.IP \(bu 2
\fBloongarch64\fP \-\- since 7.1
.IP \(bu 2
\fBaarch64\fP \-\- Not documented
.IP \(bu 2
\fBalpha\fP \-\- Not documented
.IP \(bu 2
\fBarm\fP \-\- Not documented
.IP \(bu 2
\fBhppa\fP \-\- Not documented
.IP \(bu 2
\fBi386\fP \-\- Not documented
.IP \(bu 2
\fBm68k\fP \-\- Not documented
.IP \(bu 2
\fBmicroblaze\fP \-\- Not documented
.IP \(bu 2
\fBmicroblazeel\fP \-\- Not documented
.IP \(bu 2
\fBmips\fP \-\- Not documented
.IP \(bu 2
\fBmips64\fP \-\- Not documented
.IP \(bu 2
\fBmips64el\fP \-\- Not documented
.IP \(bu 2
\fBmipsel\fP \-\- Not documented
.IP \(bu 2
\fBor1k\fP \-\- Not documented
.IP \(bu 2
\fBppc\fP \-\- Not documented
.IP \(bu 2
\fBppc64\fP \-\- Not documented
.IP \(bu 2
\fBriscv32\fP \-\- Not documented
.IP \(bu 2
\fBriscv64\fP \-\- Not documented
.IP \(bu 2
\fBs390x\fP \-\- Not documented
.IP \(bu 2
\fBsh4\fP \-\- Not documented
.IP \(bu 2
\fBsh4eb\fP \-\- Not documented
.IP \(bu 2
\fBsparc\fP \-\- Not documented
.IP \(bu 2
\fBsparc64\fP \-\- Not documented
.IP \(bu 2
\fBtricore\fP \-\- Not documented
.IP \(bu 2
\fBx86_64\fP \-\- Not documented
.IP \(bu 2
\fBxtensa\fP \-\- Not documented
.IP \(bu 2
\fBxtensaeb\fP \-\- Not documented
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
The resulting QMP strings can be appended to the
\(dqqemu\-system\-\(dq prefix to produce the corresponding QEMU
executable name.  This is true even for \(dqqemu\-system\-x86_64\(dq.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  S390CpuState  (Since: 2.12)
An enumeration of cpu states that can be assumed by a virtual S390
CPU
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBuninitialized\fP \-\- Not documented
.IP \(bu 2
\fBstopped\fP \-\- Not documented
.IP \(bu 2
\fBcheck\-stop\fP \-\- Not documented
.IP \(bu 2
\fBoperating\fP \-\- Not documented
.IP \(bu 2
\fBload\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CpuInfoS390  (Since: 2.12)
Additional information about a virtual S390 CPU
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcpu\-state\fP (\fI\%S390CpuState\fP) \-\- the virtual CPU\(aqs state
.IP \(bu 2
\fBdedicated\fP (\fBboolean\fP, \fIoptional\fP) \-\- the virtual CPU\(aqs dedication (since 8.2)
.IP \(bu 2
\fBentitlement\fP (\fI\%S390CpuEntitlement\fP, \fIoptional\fP) \-\- the virtual CPU\(aqs entitlement (since 8.2)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CpuInfoFast  (Since: 2.12)
Information about a virtual CPU
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcpu\-index\fP (\fBint\fP) \-\- index of the virtual CPU
.IP \(bu 2
\fBqom\-path\fP (\fBstring\fP) \-\- path to the CPU object in the QOM tree
.IP \(bu 2
\fBthread\-id\fP (\fBint\fP) \-\- ID of the underlying host thread
.IP \(bu 2
\fBprops\fP (\fI\%CpuInstanceProperties\fP, \fIoptional\fP) \-\- properties associated with a virtual CPU, e.g. the socket id
.IP \(bu 2
\fBtarget\fP (\fI\%SysEmuTarget\fP) \-\- the QEMU system emulation target, which determines which
additional fields will be listed (since 3.0)
.IP \(bu 2
When \fBtarget\fP is \fBs390x\fP: The members of \fI\%CpuInfoS390\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-cpus\-fast  (Since: 2.12)
Return information about all virtual CPUs.
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%CpuInfoFast\fP\fB]\fP \-\- list of \fBCpuInfoFast\fP
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-cpus\-fast\(dq }
<\- { \(dqreturn\(dq: [
        {
            \(dqthread\-id\(dq: 25627,
            \(dqprops\(dq: {
                \(dqcore\-id\(dq: 0,
                \(dqthread\-id\(dq: 0,
                \(dqsocket\-id\(dq: 0
            },
            \(dqqom\-path\(dq: \(dq/machine/unattached/device[0]\(dq,
            \(dqtarget\(dq:\(dqx86_64\(dq,
            \(dqcpu\-index\(dq: 0
        },
        {
            \(dqthread\-id\(dq: 25628,
            \(dqprops\(dq: {
                \(dqcore\-id\(dq: 0,
                \(dqthread\-id\(dq: 0,
                \(dqsocket\-id\(dq: 1
            },
            \(dqqom\-path\(dq: \(dq/machine/unattached/device[2]\(dq,
            \(dqtarget\(dq:\(dqx86_64\(dq,
            \(dqcpu\-index\(dq: 1
        }
    ]
}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CompatProperty  (Since: 9.1)
Property default values specific to a machine type, for use by
scripts/compare\-machine\-types.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBqom\-type\fP (\fBstring\fP) \-\- name of the QOM type to which the default applies
.IP \(bu 2
\fBproperty\fP (\fBstring\fP) \-\- name of its property to which the default applies
.IP \(bu 2
\fBvalue\fP (\fBstring\fP) \-\- the default value (machine\-specific default can overwrite
the \(dqdefault\(dq default, to avoid this use \-machine none)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MachineInfo  (Since: 1.2)
Information describing a machine.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the name of the machine
.IP \(bu 2
\fBalias\fP (\fBstring\fP, \fIoptional\fP) \-\- an alias for the machine name
.IP \(bu 2
\fBis\-default\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether the machine is default
.IP \(bu 2
\fBcpu\-max\fP (\fBint\fP) \-\- maximum number of CPUs supported by the machine type
(since 1.5)
.IP \(bu 2
\fBhotpluggable\-cpus\fP (\fBboolean\fP) \-\- cpu hotplug via \-device is supported (since 2.7)
.IP \(bu 2
\fBnuma\-mem\-supported\fP (\fBboolean\fP) \-\- true if \(aq\-numa node,mem\(aq option is supported by
the machine type and false otherwise (since 4.1)
.IP \(bu 2
\fBdeprecated\fP (\fBboolean\fP) \-\- if true, the machine type is deprecated and may be
removed in future versions of QEMU according to the QEMU
deprecation policy (since 4.1)
.IP \(bu 2
\fBdefault\-cpu\-type\fP (\fBstring\fP, \fIoptional\fP) \-\- default CPU model typename if none is requested
via the \-cpu argument.  (since 4.2)
.IP \(bu 2
\fBdefault\-ram\-id\fP (\fBstring\fP, \fIoptional\fP) \-\- the default ID of initial RAM memory backend (since
5.2)
.IP \(bu 2
\fBacpi\fP (\fBboolean\fP) \-\- machine type supports ACPI (since 8.0)
.IP \(bu 2
\fBcompat\-props\fP (\fB[\fP\fI\%CompatProperty\fP\fB]\fP, \fIoptional\fP) \-\- The machine type\(aqs compatibility properties.  Only
present when query\-machines argument \fBcompat\-props\fP is true.
(since 9.1)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- Member \fBcompat\-props\fP is experimental.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-machines  (Since: 1.2)
Return a list of supported machines
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBcompat\-props\fP (\fBboolean\fP, \fIoptional\fP) \-\- if true, also return compatibility properties.
(default: false) (since 9.1)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- Argument \fBcompat\-props\fP is experimental.
.UNINDENT
.TP
.B Return
\fB[\fP\fI\%MachineInfo\fP\fB]\fP \-\- a list of MachineInfo
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-machines\(dq, \(dqarguments\(dq: { \(dqcompat\-props\(dq: true } }
<\- { \(dqreturn\(dq: [
          {
             \(dqhotpluggable\-cpus\(dq: true,
             \(dqname\(dq: \(dqpc\-q35\-6.2\(dq,
             \(dqcompat\-props\(dq: [
                  {
                     \(dqqom\-type\(dq: \(dqvirtio\-mem\(dq,
                     \(dqproperty\(dq: \(dqunplugged\-inaccessible\(dq,
                     \(dqvalue\(dq: \(dqoff\(dq
                  }
              ],
              \(dqnuma\-mem\-supported\(dq: false,
              \(dqdefault\-cpu\-type\(dq: \(dqqemu64\-x86_64\-cpu\(dq,
              \(dqcpu\-max\(dq: 288,
              \(dqdeprecated\(dq: false,
              \(dqdefault\-ram\-id\(dq: \(dqpc.ram\(dq
          },
          ...
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CurrentMachineParams  (Since: 4.0)
Information describing the running machine parameters.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBwakeup\-suspend\-support\fP (\fBboolean\fP) \-\- true if the machine supports wake up from
suspend
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-current\-machine  (Since: 4.0)
Return information on the current virtual machine.
.INDENT 7.0
.TP
.B Return
\fI\%CurrentMachineParams\fP \-\- CurrentMachineParams
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QemuTargetInfo  (Since: 1.2)
Information on the target configuration built into the QEMU binary.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBarch\fP (\fI\%SysEmuTarget\fP) \-\- the target architecture
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-target  (Since: 1.2)
Return information about the target for this QEMU
.INDENT 7.0
.TP
.B Return
\fI\%QemuTargetInfo\fP \-\- QemuTargetInfo
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  UuidInfo  (Since: 0.14)
Guest UUID information (Universally Unique Identifier).
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBUUID\fP (\fBstring\fP) \-\- the UUID of the guest
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
If no UUID was specified for the guest, the nil UUID (all
zeroes) is returned.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-uuid  (Since: 0.14)
Query the guest UUID information.
.INDENT 7.0
.TP
.B Return
\fI\%UuidInfo\fP \-\- The \fBUuidInfo\fP for the guest
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-uuid\(dq }
<\- { \(dqreturn\(dq: { \(dqUUID\(dq: \(dq550e8400\-e29b\-41d4\-a716\-446655440000\(dq } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  GuidInfo  (Since: 2.9)
GUID information.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBguid\fP (\fBstring\fP) \-\- the globally unique identifier
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-vm\-generation\-id  (Since: 2.9)
Show Virtual Machine Generation ID
.UNINDENT
.INDENT 0.0
.TP
.B Command  system_reset  (Since: 0.14)
Performs a hard reset of a guest.
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqsystem_reset\(dq }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  system_powerdown  (Since: 0.14)
Requests that a guest perform a powerdown operation.
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
A guest may or may not respond to this command.  This
command returning does not indicate that a guest has accepted the
request or that it has shut down.  Many guests will respond to
this command by prompting the user in some way.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqsystem_powerdown\(dq }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  system_wakeup  (Since: 1.1)
Wake up guest from suspend.  If the guest has wake\-up from suspend
support enabled (wakeup\-suspend\-support flag from
query\-current\-machine), wake\-up guest from suspend if the guest is
in SUSPENDED state.  Return an error otherwise.
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
Prior to 4.0, this command does nothing in case the guest
isn\(aqt suspended.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqsystem_wakeup\(dq }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  LostTickPolicy  (Since: 2.0)
Policy for handling lost ticks in timer devices.  Ticks end up
getting lost when, for example, the guest is paused.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBdiscard\fP \-\- throw away the missed ticks and continue with future
injection normally.  The guest OS will see the timer jump ahead
by a potentially quite significant amount all at once, as if the
intervening chunk of time had simply not existed; needless to
say, such a sudden jump can easily confuse a guest OS which is
not specifically prepared to deal with it.  Assuming the guest
OS can deal correctly with the time jump, the time in the guest
and in the host should now match.
.IP \(bu 2
\fBdelay\fP \-\- continue to deliver ticks at the normal rate.  The guest OS
will not notice anything is amiss, as from its point of view
time will have continued to flow normally.  The time in the
guest should now be behind the time in the host by exactly the
amount of time during which ticks have been missed.
.IP \(bu 2
\fBslew\fP \-\- deliver ticks at a higher rate to catch up with the missed
ticks.  The guest OS will not notice anything is amiss, as from
its point of view time will have continued to flow normally.
Once the timer has managed to catch up with all the missing
ticks, the time in the guest and in the host should match.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  inject\-nmi  (Since: 0.14)
Injects a Non\-Maskable Interrupt into the default CPU (x86/s390) or
all CPUs (ppc64).  The command fails when the guest doesn\(aqt support
injecting.
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
Prior to 2.1, this command was only supported for x86 and
s390 VMs.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqinject\-nmi\(dq }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  KvmInfo  (Since: 0.14)
Information about support for KVM acceleration
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBenabled\fP (\fBboolean\fP) \-\- true if KVM acceleration is active
.IP \(bu 2
\fBpresent\fP (\fBboolean\fP) \-\- true if KVM acceleration is built into this executable
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-kvm  (Since: 0.14)
Return information about KVM acceleration
.INDENT 7.0
.TP
.B Return
\fI\%KvmInfo\fP \-\- \fBKvmInfo\fP
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-kvm\(dq }
<\- { \(dqreturn\(dq: { \(dqenabled\(dq: true, \(dqpresent\(dq: true } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  NumaOptionsType  (Since: 2.1)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnode\fP \-\- NUMA nodes configuration
.IP \(bu 2
\fBdist\fP \-\- NUMA distance configuration (since 2.10)
.IP \(bu 2
\fBcpu\fP \-\- property based CPU(s) to node mapping (Since: 2.10)
.IP \(bu 2
\fBhmat\-lb\fP \-\- memory latency and bandwidth information (Since: 5.0)
.IP \(bu 2
\fBhmat\-cache\fP \-\- memory side cache information (Since: 5.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NumaOptions  (Since: 2.1)
A discriminated record of NUMA options.  (for OptsVisitor)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%NumaOptionsType\fP) \-\- NUMA option type
.IP \(bu 2
When \fBtype\fP is \fBnode\fP: The members of \fI\%NumaNodeOptions\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBdist\fP: The members of \fI\%NumaDistOptions\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBcpu\fP: The members of \fI\%NumaCpuOptions\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBhmat\-lb\fP: The members of \fI\%NumaHmatLBOptions\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBhmat\-cache\fP: The members of \fI\%NumaHmatCacheOptions\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NumaNodeOptions  (Since: 2.1)
Create a guest NUMA node.  (for OptsVisitor)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnodeid\fP (\fBint\fP, \fIoptional\fP) \-\- NUMA node ID (increase by 1 from 0 if omitted)
.IP \(bu 2
\fBcpus\fP (\fB[\fP\fBint\fP\fB]\fP, \fIoptional\fP) \-\- VCPUs belonging to this node (assign VCPUS round\-robin if
omitted)
.IP \(bu 2
\fBmem\fP (\fBint\fP, \fIoptional\fP) \-\- memory size of this node; mutually exclusive with \fBmemdev\fP\&.
Equally divide total memory among nodes if both \fBmem\fP and \fBmemdev\fP
are omitted.
.IP \(bu 2
\fBmemdev\fP (\fBstring\fP, \fIoptional\fP) \-\- memory backend object.  If specified for one node, it must
be specified for all nodes.
.IP \(bu 2
\fBinitiator\fP (\fBint\fP, \fIoptional\fP) \-\- defined in ACPI 6.3 Chapter 5.2.27.3 Table 5\-145, points
to the nodeid which has the memory controller responsible for
this NUMA node.  This field provides additional information as
to the initiator node that is closest (as in directly attached)
to this node, and therefore has the best performance (since 5.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NumaDistOptions  (Since: 2.10)
Set the distance between 2 NUMA nodes.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsrc\fP (\fBint\fP) \-\- source NUMA node.
.IP \(bu 2
\fBdst\fP (\fBint\fP) \-\- destination NUMA node.
.IP \(bu 2
\fBval\fP (\fBint\fP) \-\- NUMA distance from source node to destination node.  When a
node is unreachable from another node, set the distance between
them to 255.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CXLFixedMemoryWindowOptions  (Since: 7.1)
Create a CXL Fixed Memory Window
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- Size of the Fixed Memory Window in bytes.  Must be a multiple
of 256MiB.
.IP \(bu 2
\fBinterleave\-granularity\fP (\fBint\fP, \fIoptional\fP) \-\- Number of contiguous bytes for which
accesses will go to a given interleave target.  Accepted values
[256, 512, 1k, 2k, 4k, 8k, 16k]
.IP \(bu 2
\fBtargets\fP (\fB[\fP\fBstring\fP\fB]\fP) \-\- Target root bridge IDs from \-device ...,id=<ID> for each
root bridge.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CXLFMWProperties  (Since: 7.1)
List of CXL Fixed Memory Windows.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcxl\-fmw\fP (\fB[\fP\fI\%CXLFixedMemoryWindowOptions\fP\fB]\fP) \-\- List of CXLFixedMemoryWindowOptions
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  X86CPURegister32  (Since: 1.5)
A X86 32\-bit register
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBEAX\fP \-\- Not documented
.IP \(bu 2
\fBEBX\fP \-\- Not documented
.IP \(bu 2
\fBECX\fP \-\- Not documented
.IP \(bu 2
\fBEDX\fP \-\- Not documented
.IP \(bu 2
\fBESP\fP \-\- Not documented
.IP \(bu 2
\fBEBP\fP \-\- Not documented
.IP \(bu 2
\fBESI\fP \-\- Not documented
.IP \(bu 2
\fBEDI\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  X86CPUFeatureWordInfo  (Since: 1.5)
Information about a X86 CPU feature word
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcpuid\-input\-eax\fP (\fBint\fP) \-\- Input EAX value for CPUID instruction for that
feature word
.IP \(bu 2
\fBcpuid\-input\-ecx\fP (\fBint\fP, \fIoptional\fP) \-\- Input ECX value for CPUID instruction for that
feature word
.IP \(bu 2
\fBcpuid\-register\fP (\fI\%X86CPURegister32\fP) \-\- Output register containing the feature bits
.IP \(bu 2
\fBfeatures\fP (\fBint\fP) \-\- value of output register, containing the feature bits
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DummyForceArrays  (Since: 2.5)
Not used by QMP; hack to let us use X86CPUFeatureWordInfoList
internally
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBunused\fP (\fB[\fP\fI\%X86CPUFeatureWordInfo\fP\fB]\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NumaCpuOptions  (Since: 2.10)
Option \(dq\-numa cpu\(dq overrides default cpu to node mapping.  It
accepts the same set of cpu properties as returned by
query\-hotpluggable\-cpus[].props, where node\-id could be used to
override default node mapping.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%CpuInstanceProperties\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  HmatLBMemoryHierarchy  (Since: 5.0)
The memory hierarchy in the System Locality Latency and Bandwidth
Information Structure of HMAT (Heterogeneous Memory Attribute Table)
.sp
For more information about \fBHmatLBMemoryHierarchy\fP, see chapter
5.2.27.4: Table 5\-146: Field \(dqFlags\(dq of ACPI 6.3 spec.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBmemory\fP \-\- the structure represents the memory performance
.IP \(bu 2
\fBfirst\-level\fP \-\- first level of memory side cache
.IP \(bu 2
\fBsecond\-level\fP \-\- second level of memory side cache
.IP \(bu 2
\fBthird\-level\fP \-\- third level of memory side cache
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  HmatLBDataType  (Since: 5.0)
Data type in the System Locality Latency and Bandwidth Information
Structure of HMAT (Heterogeneous Memory Attribute Table)
.sp
For more information about \fBHmatLBDataType\fP, see chapter 5.2.27.4:
Table 5\-146:  Field \(dqData Type\(dq of ACPI 6.3 spec.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBaccess\-latency\fP \-\- access latency (nanoseconds)
.IP \(bu 2
\fBread\-latency\fP \-\- read latency (nanoseconds)
.IP \(bu 2
\fBwrite\-latency\fP \-\- write latency (nanoseconds)
.IP \(bu 2
\fBaccess\-bandwidth\fP \-\- access bandwidth (Bytes per second)
.IP \(bu 2
\fBread\-bandwidth\fP \-\- read bandwidth (Bytes per second)
.IP \(bu 2
\fBwrite\-bandwidth\fP \-\- write bandwidth (Bytes per second)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NumaHmatLBOptions  (Since: 5.0)
Set the system locality latency and bandwidth information between
Initiator and Target proximity Domains.
.sp
For more information about \fBNumaHmatLBOptions\fP, see chapter 5.2.27.4:
Table 5\-146 of ACPI 6.3 spec.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBinitiator\fP (\fBint\fP) \-\- the Initiator Proximity Domain.
.IP \(bu 2
\fBtarget\fP (\fBint\fP) \-\- the Target Proximity Domain.
.IP \(bu 2
\fBhierarchy\fP (\fI\%HmatLBMemoryHierarchy\fP) \-\- the Memory Hierarchy.  Indicates the performance of
memory or side cache.
.IP \(bu 2
\fBdata\-type\fP (\fI\%HmatLBDataType\fP) \-\- presents the type of data, access/read/write latency or
hit latency.
.IP \(bu 2
\fBlatency\fP (\fBint\fP, \fIoptional\fP) \-\- the value of latency from \fBinitiator\fP to \fBtarget\fP proximity
domain, the latency unit is \(dqns(nanosecond)\(dq.
.IP \(bu 2
\fBbandwidth\fP (\fBint\fP, \fIoptional\fP) \-\- the value of bandwidth between \fBinitiator\fP and \fBtarget\fP
proximity domain, the bandwidth unit is \(dqBytes per second\(dq.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  HmatCacheAssociativity  (Since: 5.0)
Cache associativity in the Memory Side Cache Information Structure
of HMAT
.sp
For more information of \fBHmatCacheAssociativity\fP, see chapter
5.2.27.5: Table 5\-147 of ACPI 6.3 spec.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnone\fP \-\- None (no memory side cache in this proximity domain, or cache
associativity unknown)
.IP \(bu 2
\fBdirect\fP \-\- Direct Mapped
.IP \(bu 2
\fBcomplex\fP \-\- Complex Cache Indexing (implementation specific)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  HmatCacheWritePolicy  (Since: 5.0)
Cache write policy in the Memory Side Cache Information Structure of
HMAT
.sp
For more information of \fBHmatCacheWritePolicy\fP, see chapter 5.2.27.5:
Table 5\-147: Field \(dqCache Attributes\(dq of ACPI 6.3 spec.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnone\fP \-\- None (no memory side cache in this proximity domain, or cache
write policy unknown)
.IP \(bu 2
\fBwrite\-back\fP \-\- Write Back (WB)
.IP \(bu 2
\fBwrite\-through\fP \-\- Write Through (WT)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NumaHmatCacheOptions  (Since: 5.0)
Set the memory side cache information for a given memory domain.
.sp
For more information of \fBNumaHmatCacheOptions\fP, see chapter 5.2.27.5:
Table 5\-147: Field \(dqCache Attributes\(dq of ACPI 6.3 spec.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnode\-id\fP (\fBint\fP) \-\- the memory proximity domain to which the memory belongs.
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- the size of memory side cache in bytes.
.IP \(bu 2
\fBlevel\fP (\fBint\fP) \-\- the cache level described in this structure.
.IP \(bu 2
\fBassociativity\fP (\fI\%HmatCacheAssociativity\fP) \-\- the cache associativity,
none/direct\-mapped/complex(complex cache indexing).
.IP \(bu 2
\fBpolicy\fP (\fI\%HmatCacheWritePolicy\fP) \-\- the write policy, none/write\-back/write\-through.
.IP \(bu 2
\fBline\fP (\fBint\fP) \-\- the cache Line size in bytes.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  memsave  (Since: 0.14)
Save a portion of guest memory to a file.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBval\fP (\fBint\fP) \-\- the virtual address of the guest to start from
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- the size of memory region to save
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- the file to save the memory to as binary data
.IP \(bu 2
\fBcpu\-index\fP (\fBint\fP, \fIoptional\fP) \-\- the index of the virtual CPU to use for translating the
virtual address (defaults to CPU 0)
.UNINDENT
.UNINDENT
.sp
\fBCAUTION:\fP
.INDENT 7.0
.INDENT 3.5
Errors were not reliably returned until 1.1.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqmemsave\(dq,
     \(dqarguments\(dq: { \(dqval\(dq: 10,
                    \(dqsize\(dq: 100,
                    \(dqfilename\(dq: \(dq/tmp/virtual\-mem\-dump\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  pmemsave  (Since: 0.14)
Save a portion of guest physical memory to a file.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBval\fP (\fBint\fP) \-\- the physical address of the guest to start from
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- the size of memory region to save
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- the file to save the memory to as binary data
.UNINDENT
.UNINDENT
.sp
\fBCAUTION:\fP
.INDENT 7.0
.INDENT 3.5
Errors were not reliably returned until 1.1.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqpmemsave\(dq,
     \(dqarguments\(dq: { \(dqval\(dq: 10,
                    \(dqsize\(dq: 100,
                    \(dqfilename\(dq: \(dq/tmp/physical\-mem\-dump\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  Memdev  (Since: 2.1)
Information about memory backend
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP, \fIoptional\fP) \-\- backend\(aqs ID if backend has \(aqid\(aq property (since 2.9)
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- memory backend size
.IP \(bu 2
\fBmerge\fP (\fBboolean\fP) \-\- whether memory merge support is enabled
.IP \(bu 2
\fBdump\fP (\fBboolean\fP) \-\- whether memory backend\(aqs memory is included in a core dump
.IP \(bu 2
\fBprealloc\fP (\fBboolean\fP) \-\- whether memory was preallocated
.IP \(bu 2
\fBshare\fP (\fBboolean\fP) \-\- whether memory is private to QEMU or shared (since 6.1)
.IP \(bu 2
\fBreserve\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether swap space (or huge pages) was reserved if
applicable.  This corresponds to the user configuration and not
the actual behavior implemented in the OS to perform the
reservation.  For example, Linux will never reserve swap space
for shared file mappings.  (since 6.1)
.IP \(bu 2
\fBhost\-nodes\fP (\fB[\fP\fBint\fP\fB]\fP) \-\- host nodes for its memory policy
.IP \(bu 2
\fBpolicy\fP (\fI\%HostMemPolicy\fP) \-\- memory policy of memory backend
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-memdev  (Since: 2.1)
Return information for all memory backends.
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%Memdev\fP\fB]\fP \-\- a list of \fBMemdev\fP\&.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-memdev\(dq }
<\- { \(dqreturn\(dq: [
       {
         \(dqid\(dq: \(dqmem1\(dq,
         \(dqsize\(dq: 536870912,
         \(dqmerge\(dq: false,
         \(dqdump\(dq: true,
         \(dqprealloc\(dq: false,
         \(dqshare\(dq: false,
         \(dqhost\-nodes\(dq: [0, 1],
         \(dqpolicy\(dq: \(dqbind\(dq
       },
       {
         \(dqsize\(dq: 536870912,
         \(dqmerge\(dq: false,
         \(dqdump\(dq: true,
         \(dqprealloc\(dq: true,
         \(dqshare\(dq: false,
         \(dqhost\-nodes\(dq: [2, 3],
         \(dqpolicy\(dq: \(dqpreferred\(dq
       }
     ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CpuInstanceProperties  (Since: 2.7)
Properties identifying a CPU.
.sp
Which members are optional and which mandatory depends on the
architecture and board.
.sp
For s390x see cpu\-topology\-s390x\&.
.sp
The ids other than the node\-id specify the position of the CPU
within the CPU topology (as defined by the machine property \(dqsmp\(dq,
thus see also type \fBSMPConfiguration\fP)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnode\-id\fP (\fBint\fP, \fIoptional\fP) \-\- NUMA node ID the CPU belongs to
.IP \(bu 2
\fBdrawer\-id\fP (\fBint\fP, \fIoptional\fP) \-\- drawer number within CPU topology the CPU belongs to
(since 8.2)
.IP \(bu 2
\fBbook\-id\fP (\fBint\fP, \fIoptional\fP) \-\- book number within parent container the CPU belongs to
(since 8.2)
.IP \(bu 2
\fBsocket\-id\fP (\fBint\fP, \fIoptional\fP) \-\- socket number within parent container the CPU belongs to
.IP \(bu 2
\fBdie\-id\fP (\fBint\fP, \fIoptional\fP) \-\- die number within the parent container the CPU belongs to
(since 4.1)
.IP \(bu 2
\fBcluster\-id\fP (\fBint\fP, \fIoptional\fP) \-\- cluster number within the parent container the CPU
belongs to (since 7.1)
.IP \(bu 2
\fBmodule\-id\fP (\fBint\fP, \fIoptional\fP) \-\- module number within the parent container the CPU
belongs to (since 9.1)
.IP \(bu 2
\fBcore\-id\fP (\fBint\fP, \fIoptional\fP) \-\- core number within the parent container the CPU belongs to
.IP \(bu 2
\fBthread\-id\fP (\fBint\fP, \fIoptional\fP) \-\- thread number within the core the CPU  belongs to
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  HotpluggableCPU  (Since: 2.7)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fBstring\fP) \-\- CPU object type for usage with device_add command
.IP \(bu 2
\fBprops\fP (\fI\%CpuInstanceProperties\fP) \-\- list of properties to pass for hotplugging a CPU with
device_add
.IP \(bu 2
\fBvcpus\-count\fP (\fBint\fP) \-\- number of logical VCPU threads \fBHotpluggableCPU\fP
provides
.IP \(bu 2
\fBqom\-path\fP (\fBstring\fP, \fIoptional\fP) \-\- link to existing CPU object if CPU is present or omitted
if CPU is not present.
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
Management should be prepared to pass through additional
properties with device_add.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-hotpluggable\-cpus  (Since: 2.7)
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%HotpluggableCPU\fP\fB]\fP \-\- a list of HotpluggableCPU objects.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.sp
For pseries machine type started with
\fB\-smp 2,cores=2,maxcpus=4 \-cpu POWER8\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-hotpluggable\-cpus\(dq }
<\- {\(dqreturn\(dq: [
     { \(dqprops\(dq: { \(dqcore\-id\(dq: 8 }, \(dqtype\(dq: \(dqPOWER8\-spapr\-cpu\-core\(dq,
       \(dqvcpus\-count\(dq: 1 },
     { \(dqprops\(dq: { \(dqcore\-id\(dq: 0 }, \(dqtype\(dq: \(dqPOWER8\-spapr\-cpu\-core\(dq,
       \(dqvcpus\-count\(dq: 1, \(dqqom\-path\(dq: \(dq/machine/unattached/device[0]\(dq}
   ]}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.sp
For pc machine type started with \fB\-smp 1,maxcpus=2\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-hotpluggable\-cpus\(dq }
<\- {\(dqreturn\(dq: [
     {
        \(dqtype\(dq: \(dqqemu64\-x86_64\-cpu\(dq, \(dqvcpus\-count\(dq: 1,
        \(dqprops\(dq: {\(dqcore\-id\(dq: 0, \(dqsocket\-id\(dq: 1, \(dqthread\-id\(dq: 0}
     },
     {
        \(dqqom\-path\(dq: \(dq/machine/unattached/device[0]\(dq,
        \(dqtype\(dq: \(dqqemu64\-x86_64\-cpu\(dq, \(dqvcpus\-count\(dq: 1,
        \(dqprops\(dq: {\(dqcore\-id\(dq: 0, \(dqsocket\-id\(dq: 0, \(dqthread\-id\(dq: 0}
     }
   ]}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.sp
For s390x\-virtio\-ccw machine type started with
\fB\-smp 1,maxcpus=2 \-cpu qemu\fP (Since: 2.11):
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-hotpluggable\-cpus\(dq }
<\- {\(dqreturn\(dq: [
     {
        \(dqtype\(dq: \(dqqemu\-s390x\-cpu\(dq, \(dqvcpus\-count\(dq: 1,
        \(dqprops\(dq: { \(dqcore\-id\(dq: 1 }
     },
     {
        \(dqqom\-path\(dq: \(dq/machine/unattached/device[0]\(dq,
        \(dqtype\(dq: \(dqqemu\-s390x\-cpu\(dq, \(dqvcpus\-count\(dq: 1,
        \(dqprops\(dq: { \(dqcore\-id\(dq: 0 }
     }
   ]}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  set\-numa\-node  (Since: 3.0)
Runtime equivalent of \(aq\-numa\(aq CLI option, available at preconfigure
stage to configure numa mapping before initializing machine.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%NumaOptions\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  balloon  (Since: 0.14)
Request the balloon driver to change its balloon size.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBvalue\fP (\fBint\fP) \-\- 
.sp
the target logical size of the VM in bytes.  We can deduce
the size of the balloon using this formula:
.INDENT 2.0
.INDENT 3.5
logical_vm_size = vm_ram_size \- balloon_size
.UNINDENT
.UNINDENT
.sp
From it we have: balloon_size = vm_ram_size \- \fBvalue\fP

.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If the balloon driver is enabled but not functional because
the KVM kernel module cannot support it, KVMMissingCap
.IP \(bu 2
If no balloon device is present, DeviceNotActive
.UNINDENT

.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
This command just issues a request to the guest.  When it
returns, the balloon size may not have changed.  A guest can
change the balloon size independent of this command.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqballoon\(dq, \(dqarguments\(dq: { \(dqvalue\(dq: 536870912 } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
With a 2.5GiB guest this command inflated the ballon to 3GiB.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BalloonInfo  (Since: 0.14)
Information about the guest balloon device.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBactual\fP (\fBint\fP) \-\- the logical size of the VM in bytes Formula used:
logical_vm_size = vm_ram_size \- balloon_size
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-balloon  (Since: 0.14)
Return information about the balloon device.
.INDENT 7.0
.TP
.B Return
\fI\%BalloonInfo\fP \-\- \fBBalloonInfo\fP
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If the balloon driver is enabled but not functional because
the KVM kernel module cannot support it, KVMMissingCap
.IP \(bu 2
If no balloon device is present, DeviceNotActive
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-balloon\(dq }
<\- { \(dqreturn\(dq: {
         \(dqactual\(dq: 1073741824
      }
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  BALLOON_CHANGE  (Since: 1.2)
Emitted when the guest changes the actual BALLOON level.  This value
is equivalent to the \fBactual\fP field return by the \(aqquery\-balloon\(aq
command
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBactual\fP (\fBint\fP) \-\- the logical size of the VM in bytes Formula used:
logical_vm_size = vm_ram_size \- balloon_size
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
This event is rate\-limited.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqBALLOON_CHANGE\(dq,
     \(dqdata\(dq: { \(dqactual\(dq: 944766976 },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1267020223, \(dqmicroseconds\(dq: 435656 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  HvBalloonInfo  (Since: 8.2)
hv\-balloon guest\-provided memory status information.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcommitted\fP (\fBint\fP) \-\- the amount of memory in use inside the guest plus the
amount of the memory unusable inside the guest (ballooned out,
offline, etc.)
.IP \(bu 2
\fBavailable\fP (\fBint\fP) \-\- the amount of the memory inside the guest available for
new allocations (\(dqfree\(dq)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-hv\-balloon\-status\-report  (Since: 8.2)
Return the hv\-balloon driver data contained in the last received
\(dqSTATUS\(dq message from the guest.
.INDENT 7.0
.TP
.B Return
\fI\%HvBalloonInfo\fP \-\- \fBHvBalloonInfo\fP
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If no hv\-balloon device is present, guest memory status
reporting is not enabled or no guest memory status report
received yet, GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-hv\-balloon\-status\-report\(dq }
<\- { \(dqreturn\(dq: {
         \(dqcommitted\(dq: 816640000,
         \(dqavailable\(dq: 3333054464
      }
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  HV_BALLOON_STATUS_REPORT  (Since: 8.2)
Emitted when the hv\-balloon driver receives a \(dqSTATUS\(dq message from
the guest.
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
This event is rate\-limited.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
The members of \fI\%HvBalloonInfo\fP\&.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqHV_BALLOON_STATUS_REPORT\(dq,
     \(dqdata\(dq: { \(dqcommitted\(dq: 816640000, \(dqavailable\(dq: 3333054464 },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1600295492, \(dqmicroseconds\(dq: 661044 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MemoryInfo  (Since: 2.11)
Actual memory information in bytes.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBbase\-memory\fP (\fBint\fP) \-\- size of \(dqbase\(dq memory specified with command line
option \-m.
.IP \(bu 2
\fBplugged\-memory\fP (\fBint\fP, \fIoptional\fP) \-\- size of memory that can be hot\-unplugged.  This
field is omitted if target doesn\(aqt support memory hotplug (i.e.
CONFIG_MEM_DEVICE not defined at build time).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-memory\-size\-summary  (Since: 2.11)
Return the amount of initially allocated and present hotpluggable
(if enabled) memory in bytes.
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-memory\-size\-summary\(dq }
<\- { \(dqreturn\(dq: { \(dqbase\-memory\(dq: 4294967296, \(dqplugged\-memory\(dq: 0 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  PCDIMMDeviceInfo  (Since: 2.1)
PCDIMMDevice state information
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP, \fIoptional\fP) \-\- device\(aqs ID
.IP \(bu 2
\fBaddr\fP (\fBint\fP) \-\- physical address, where device is mapped
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- size of memory that the device provides
.IP \(bu 2
\fBslot\fP (\fBint\fP) \-\- slot number at which device is plugged in
.IP \(bu 2
\fBnode\fP (\fBint\fP) \-\- NUMA node number where device is plugged in
.IP \(bu 2
\fBmemdev\fP (\fBstring\fP) \-\- memory backend linked with device
.IP \(bu 2
\fBhotplugged\fP (\fBboolean\fP) \-\- true if device was hotplugged
.IP \(bu 2
\fBhotpluggable\fP (\fBboolean\fP) \-\- true if device if could be added/removed while
machine is running
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VirtioPMEMDeviceInfo  (Since: 4.1)
VirtioPMEM state information
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP, \fIoptional\fP) \-\- device\(aqs ID
.IP \(bu 2
\fBmemaddr\fP (\fBint\fP) \-\- physical address in memory, where device is mapped
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- size of memory that the device provides
.IP \(bu 2
\fBmemdev\fP (\fBstring\fP) \-\- memory backend linked with device
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VirtioMEMDeviceInfo  (Since: 5.1)
VirtioMEMDevice state information
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP, \fIoptional\fP) \-\- device\(aqs ID
.IP \(bu 2
\fBmemaddr\fP (\fBint\fP) \-\- physical address in memory, where device is mapped
.IP \(bu 2
\fBrequested\-size\fP (\fBint\fP) \-\- the user requested size of the device
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- the (current) size of memory that the device provides
.IP \(bu 2
\fBmax\-size\fP (\fBint\fP) \-\- the maximum size of memory that the device can provide
.IP \(bu 2
\fBblock\-size\fP (\fBint\fP) \-\- the block size of memory that the device provides
.IP \(bu 2
\fBnode\fP (\fBint\fP) \-\- NUMA node number where device is assigned to
.IP \(bu 2
\fBmemdev\fP (\fBstring\fP) \-\- memory backend linked with the region
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SgxEPCDeviceInfo  (Since: 6.2)
Sgx EPC state information
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP, \fIoptional\fP) \-\- device\(aqs ID
.IP \(bu 2
\fBmemaddr\fP (\fBint\fP) \-\- physical address in memory, where device is mapped
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- size of memory that the device provides
.IP \(bu 2
\fBmemdev\fP (\fBstring\fP) \-\- memory backend linked with device
.IP \(bu 2
\fBnode\fP (\fBint\fP) \-\- the numa node (Since: 7.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  HvBalloonDeviceInfo  (Since: 8.2)
hv\-balloon provided memory state information
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP, \fIoptional\fP) \-\- device\(aqs ID
.IP \(bu 2
\fBmemaddr\fP (\fBint\fP, \fIoptional\fP) \-\- physical address in memory, where device is mapped
.IP \(bu 2
\fBmax\-size\fP (\fBint\fP) \-\- the maximum size of memory that the device can provide
.IP \(bu 2
\fBmemdev\fP (\fBstring\fP, \fIoptional\fP) \-\- memory backend linked with device
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  MemoryDeviceInfoKind  (Since: 2.1)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnvdimm\fP \-\- since 2.12
.IP \(bu 2
\fBvirtio\-pmem\fP \-\- since 4.1
.IP \(bu 2
\fBvirtio\-mem\fP \-\- since 5.1
.IP \(bu 2
\fBsgx\-epc\fP \-\- since 6.2.
.IP \(bu 2
\fBhv\-balloon\fP \-\- since 8.2.
.IP \(bu 2
\fBdimm\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  PCDIMMDeviceInfoWrapper  (Since: 2.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%PCDIMMDeviceInfo\fP) \-\- PCDIMMDevice state information
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VirtioPMEMDeviceInfoWrapper  (Since: 2.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%VirtioPMEMDeviceInfo\fP) \-\- VirtioPMEM state information
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VirtioMEMDeviceInfoWrapper  (Since: 2.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%VirtioMEMDeviceInfo\fP) \-\- VirtioMEMDevice state information
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SgxEPCDeviceInfoWrapper  (Since: 6.2)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%SgxEPCDeviceInfo\fP) \-\- Sgx EPC state information
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  HvBalloonDeviceInfoWrapper  (Since: 8.2)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fI\%HvBalloonDeviceInfo\fP) \-\- hv\-balloon provided memory state information
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MemoryDeviceInfo  (Since: 2.1)
Union containing information about a memory device
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%MemoryDeviceInfoKind\fP) \-\- memory device type
.IP \(bu 2
When \fBtype\fP is \fBdimm\fP: The members of \fI\%PCDIMMDeviceInfoWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBnvdimm\fP: The members of \fI\%PCDIMMDeviceInfoWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBvirtio\-pmem\fP: The members of \fI\%VirtioPMEMDeviceInfoWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBvirtio\-mem\fP: The members of \fI\%VirtioMEMDeviceInfoWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBsgx\-epc\fP: The members of \fI\%SgxEPCDeviceInfoWrapper\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBhv\-balloon\fP: The members of \fI\%HvBalloonDeviceInfoWrapper\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SgxEPC  (Since: 6.2)
Sgx EPC cmdline information
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmemdev\fP (\fBstring\fP) \-\- memory backend linked with device
.IP \(bu 2
\fBnode\fP (\fBint\fP) \-\- the numa node (Since: 7.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SgxEPCProperties  (Since: 6.2)
SGX properties of machine types.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsgx\-epc\fP (\fB[\fP\fI\%SgxEPC\fP\fB]\fP) \-\- list of ids of memory\-backend\-epc objects.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-memory\-devices  (Since: 2.1)
Lists available memory devices and their state
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-memory\-devices\(dq }
<\- { \(dqreturn\(dq: [ { \(dqdata\(dq:
                      { \(dqaddr\(dq: 5368709120,
                        \(dqhotpluggable\(dq: true,
                        \(dqhotplugged\(dq: true,
                        \(dqid\(dq: \(dqd1\(dq,
                        \(dqmemdev\(dq: \(dq/objects/memX\(dq,
                        \(dqnode\(dq: 0,
                        \(dqsize\(dq: 1073741824,
                        \(dqslot\(dq: 0},
                   \(dqtype\(dq: \(dqdimm\(dq
                 } ] }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  MEMORY_DEVICE_SIZE_CHANGE  (Since: 5.1)
Emitted when the size of a memory device changes.  Only emitted for
memory devices that can actually change the size (e.g., virtio\-mem
due to guest action).
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP, \fIoptional\fP) \-\- device\(aqs ID
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- the new size of memory that the device provides
.IP \(bu 2
\fBqom\-path\fP (\fBstring\fP) \-\- path to the device object in the QOM tree (since 6.2)
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
This event is rate\-limited.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqMEMORY_DEVICE_SIZE_CHANGE\(dq,
     \(dqdata\(dq: { \(dqid\(dq: \(dqvm0\(dq, \(dqsize\(dq: 1073741824,
               \(dqqom\-path\(dq: \(dq/machine/unattached/device[2]\(dq },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1588168529, \(dqmicroseconds\(dq: 201316 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  BootConfiguration  (Since: 7.1)
Schema for virtual machine boot configuration.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBorder\fP (\fBstring\fP, \fIoptional\fP) \-\- Boot order (a=floppy, c=hard disk, d=CD\-ROM, n=network)
.IP \(bu 2
\fBonce\fP (\fBstring\fP, \fIoptional\fP) \-\- Boot order to apply on first boot
.IP \(bu 2
\fBmenu\fP (\fBboolean\fP, \fIoptional\fP) \-\- Whether to show a boot menu
.IP \(bu 2
\fBsplash\fP (\fBstring\fP, \fIoptional\fP) \-\- The name of the file to be passed to the firmware as logo
picture, if \fBmenu\fP is true.
.IP \(bu 2
\fBsplash\-time\fP (\fBint\fP, \fIoptional\fP) \-\- How long to show the logo picture, in milliseconds
.IP \(bu 2
\fBreboot\-timeout\fP (\fBint\fP, \fIoptional\fP) \-\- Timeout before guest reboots after boot fails
.IP \(bu 2
\fBstrict\fP (\fBboolean\fP, \fIoptional\fP) \-\- Whether to attempt booting from devices not included in the
boot order
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SMPConfiguration  (Since: 6.1)
Schema for CPU topology configuration.  A missing value lets QEMU
figure out a suitable value based on the ones that are provided.
.sp
The members other than \fBcpus\fP and \fBmaxcpus\fP define a topology of
containers.
.sp
The ordering from highest/coarsest to lowest/finest is: \fBdrawers\fP,
\fBbooks\fP, \fBsockets\fP, \fBdies\fP, \fBclusters\fP, \fBcores\fP, \fBthreads\fP\&.
.sp
Different architectures support different subsets of topology
containers.
.sp
For example, s390x does not have clusters and dies, and the socket
is the parent container of cores.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBcpus\fP (\fBint\fP, \fIoptional\fP) \-\- number of virtual CPUs in the virtual machine
.IP \(bu 2
\fBmaxcpus\fP (\fBint\fP, \fIoptional\fP) \-\- maximum number of hotpluggable virtual CPUs in the virtual
machine
.IP \(bu 2
\fBdrawers\fP (\fBint\fP, \fIoptional\fP) \-\- number of drawers in the CPU topology (since 8.2)
.IP \(bu 2
\fBbooks\fP (\fBint\fP, \fIoptional\fP) \-\- number of books in the CPU topology (since 8.2)
.IP \(bu 2
\fBsockets\fP (\fBint\fP, \fIoptional\fP) \-\- number of sockets per parent container
.IP \(bu 2
\fBdies\fP (\fBint\fP, \fIoptional\fP) \-\- number of dies per parent container
.IP \(bu 2
\fBclusters\fP (\fBint\fP, \fIoptional\fP) \-\- number of clusters per parent container (since 7.0)
.IP \(bu 2
\fBmodules\fP (\fBint\fP, \fIoptional\fP) \-\- number of modules per parent container (since 9.1)
.IP \(bu 2
\fBcores\fP (\fBint\fP, \fIoptional\fP) \-\- number of cores per parent container
.IP \(bu 2
\fBthreads\fP (\fBint\fP, \fIoptional\fP) \-\- number of threads per core
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-query\-irq  (Since: 6.2)
This command is unstable/experimental.
.sp
Query interrupt statistics
.INDENT 7.0
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is meant for debugging.
.UNINDENT
.TP
.B Return
\fI\%HumanReadableText\fP \-\- interrupt statistics
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-query\-jit  (Since: 6.2)
This command is unstable/experimental.\fIAvailability\fP: \fBCONFIG_TCG\fP
.sp
Query TCG compiler statistics
.INDENT 7.0
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is meant for debugging.
.UNINDENT
.TP
.B Return
\fI\%HumanReadableText\fP \-\- TCG compiler statistics
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-query\-numa  (Since: 6.2)
This command is unstable/experimental.
.sp
Query NUMA topology information
.INDENT 7.0
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is meant for debugging.
.UNINDENT
.TP
.B Return
\fI\%HumanReadableText\fP \-\- topology information
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-query\-opcount  (Since: 6.2)
This command is unstable/experimental.\fIAvailability\fP: \fBCONFIG_TCG\fP
.sp
Query TCG opcode counters
.INDENT 7.0
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is meant for debugging.
.UNINDENT
.TP
.B Return
\fI\%HumanReadableText\fP \-\- TCG opcode counters
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-query\-ramblock  (Since: 6.2)
This command is unstable/experimental.
.sp
Query system ramblock information
.INDENT 7.0
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is meant for debugging.
.UNINDENT
.TP
.B Return
\fI\%HumanReadableText\fP \-\- system ramblock information
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-query\-roms  (Since: 6.2)
This command is unstable/experimental.
.sp
Query information on the registered ROMS
.INDENT 7.0
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is meant for debugging.
.UNINDENT
.TP
.B Return
\fI\%HumanReadableText\fP \-\- registered ROMs
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-query\-usb  (Since: 6.2)
This command is unstable/experimental.
.sp
Query information on the USB devices
.INDENT 7.0
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is meant for debugging.
.UNINDENT
.TP
.B Return
\fI\%HumanReadableText\fP \-\- USB device information
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  SmbiosEntryPointType  (Since: 7.0)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fB32\fP \-\- SMBIOS version 2.1 (32\-bit) Entry Point
.IP \(bu 2
\fB64\fP \-\- SMBIOS version 3.0 (64\-bit) Entry Point
.IP \(bu 2
\fBauto\fP \-\- Either 2.x or 3.x SMBIOS version, 2.x if configuration can be
described by it and 3.x otherwise (since: 9.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  MemorySizeConfiguration  (Since: 7.1)
Schema for memory size configuration.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsize\fP (\fBint\fP, \fIoptional\fP) \-\- memory size in bytes
.IP \(bu 2
\fBmax\-size\fP (\fBint\fP, \fIoptional\fP) \-\- maximum hotpluggable memory size in bytes
.IP \(bu 2
\fBslots\fP (\fBint\fP, \fIoptional\fP) \-\- number of available memory slots for hotplug
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  dumpdtb  (Since: 7.2)
\fIAvailability\fP: \fBCONFIG_FDT\fP
.sp
Save the FDT in dtb format.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- name of the dtb file to be created
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqdumpdtb\(dq }
     \(dqarguments\(dq: { \(dqfilename\(dq: \(dqfdt.dtb\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-query\-interrupt\-controllers  (Since: 9.1)
This command is unstable/experimental.
.sp
Query information on interrupt controller devices
.INDENT 7.0
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is meant for debugging.
.UNINDENT
.TP
.B Return
\fI\%HumanReadableText\fP \-\- Interrupt controller devices information
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  dump\-skeys  (Since: 2.5)
Dump the storage keys for an s390x guest
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fBstring\fP) \-\- the path to the file to dump to
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqdump\-skeys\(dq,
     \(dqarguments\(dq: { \(dqfilename\(dq: \(dq/tmp/skeys\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CpuModelInfo  (Since: 2.8)
Virtual CPU model.
.sp
A CPU model consists of the name of a CPU definition, to which delta
changes are applied (e.g. features added/removed).  Most magic
values that an architecture might require should be hidden behind
the name.  However, if required, architectures can expose relevant
properties.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the name of the CPU definition the model is based on
.IP \(bu 2
\fBprops\fP (\fBvalue\fP, \fIoptional\fP) \-\- a dictionary of QOM properties to be applied
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  CpuModelExpansionType  (Since: 2.8)
An enumeration of CPU model expansion types.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBstatic\fP \-\- Expand to a static CPU model, a combination of a static
base model name and property delta changes.  As the static base
model will never change, the expanded CPU model will be the
same, independent of QEMU version, machine type, machine
options, and accelerator options.  Therefore, the resulting
model can be used by tooling without having to specify a
compatibility machine \- e.g. when displaying the \(dqhost\(dq model.
The \fBstatic\fP CPU models are migration\-safe.
.IP \(bu 2
\fBfull\fP \-\- Expand all properties.  The produced model is not guaranteed
to be migration\-safe, but allows tooling to get an insight and
work with model details.
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
When a non\-migration\-safe CPU model is expanded in static
mode, some features enabled by the CPU model may be omitted,
because they can\(aqt be implemented by a static CPU model
definition (e.g. cache info passthrough and PMU passthrough in
x86).  If you need an accurate representation of the features
enabled by a non\-migration\-safe CPU model, use \fBfull\fP\&.  If you
need a static representation that will keep ABI compatibility
even when changing QEMU version or machine\-type, use \fBstatic\fP (but
keep in mind that some features may be omitted).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  CpuModelCompareResult  (Since: 2.8)
An enumeration of CPU model comparison results.  The result is
usually calculated using e.g. CPU features or CPU generations.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBincompatible\fP \-\- If model A is incompatible to model B, model A is not
guaranteed to run where model B runs and the other way around.
.IP \(bu 2
\fBidentical\fP \-\- If model A is identical to model B, model A is
guaranteed to run where model B runs and the other way around.
.IP \(bu 2
\fBsuperset\fP \-\- If model A is a superset of model B, model B is
guaranteed to run where model A runs.  There are no guarantees
about the other way.
.IP \(bu 2
\fBsubset\fP \-\- If model A is a subset of model B, model A is guaranteed to
run where model B runs.  There are no guarantees about the other
way.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CpuModelBaselineInfo  (Since: 2.8)
The result of a CPU model baseline.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmodel\fP (\fI\%CpuModelInfo\fP) \-\- the baselined CpuModelInfo.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CpuModelCompareInfo  (Since: 2.8)
The result of a CPU model comparison.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBresult\fP (\fI\%CpuModelCompareResult\fP) \-\- The result of the compare operation.
.IP \(bu 2
\fBresponsible\-properties\fP (\fB[\fP\fBstring\fP\fB]\fP) \-\- List of properties that led to the
comparison result not being identical.
.UNINDENT
.UNINDENT
.sp
\fBresponsible\-properties\fP is a list of QOM property names that led to
both CPUs not being detected as identical.  For identical models,
this list is empty.  If a QOM property is read\-only, that means
there\(aqs no known way to make the CPU models identical.  If the
special property name \(dqtype\(dq is included, the models are by
definition not identical and cannot be made identical.
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-cpu\-model\-comparison  (Since: 2.8)
Compares two CPU models, \fBmodela\fP and \fBmodelb\fP, returning how they
compare in a specific configuration.  The results indicates how
both models compare regarding runnability.  This result can be
used by tooling to make decisions if a certain CPU model will
run in a certain configuration or if a compatible CPU model has
to be created by baselining.
.sp
Usually, a CPU model is compared against the maximum possible CPU
model of a certain configuration (e.g. the \(dqhost\(dq model for KVM).
If that CPU model is identical or a subset, it will run in that
configuration.
.sp
The result returned by this command may be affected by:
.INDENT 7.0
.IP \(bu 2
QEMU version: CPU models may look different depending on the QEMU
version.  (Except for CPU models reported as \(dqstatic\(dq in
query\-cpu\-definitions.)
.IP \(bu 2
machine\-type: CPU model may look different depending on the
machine\-type.  (Except for CPU models reported as \(dqstatic\(dq in
query\-cpu\-definitions.)
.IP \(bu 2
machine options (including accelerator): in some architectures,
CPU models may look different depending on machine and accelerator
options.  (Except for CPU models reported as \(dqstatic\(dq in
query\-cpu\-definitions.)
.IP \(bu 2
\(dq\-cpu\(dq arguments and global properties: arguments to the \-cpu
option and global properties may affect expansion of CPU models.
Using query\-cpu\-model\-expansion while using these is not advised.
.UNINDENT
.sp
Some architectures may not support comparing CPU models.  s390x
supports comparing CPU models.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBmodela\fP (\fI\%CpuModelInfo\fP) \-\- description of the first CPU model to compare, referred to
as \(dqmodel A\(dq in CpuModelCompareResult
.IP \(bu 2
\fBmodelb\fP (\fI\%CpuModelInfo\fP) \-\- description of the second CPU model to compare, referred to
as \(dqmodel B\(dq in CpuModelCompareResult
.UNINDENT
.TP
.B Return
\fI\%CpuModelCompareInfo\fP \-\- a CpuModelCompareInfo describing how both CPU models
compare
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
if comparing CPU models is not supported by the target
.IP \(bu 2
if a model cannot be used
.IP \(bu 2
if a model contains an unknown cpu definition name, unknown
properties or properties with wrong types.
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-cpu\-model\-baseline  (Since: 2.8)
Baseline two CPU models, \fBmodela\fP and \fBmodelb\fP, creating a compatible
third model.  The created model will always be a static,
migration\-safe CPU model (see \(dqstatic\(dq CPU model expansion for
details).
.sp
This interface can be used by tooling to create a compatible CPU
model out two CPU models.  The created CPU model will be identical
to or a subset of both CPU models when comparing them.  Therefore,
the created CPU model is guaranteed to run where the given CPU
models run.
.sp
The result returned by this command may be affected by:
.INDENT 7.0
.IP \(bu 2
QEMU version: CPU models may look different depending on the QEMU
version.  (Except for CPU models reported as \(dqstatic\(dq in
query\-cpu\-definitions.)
.IP \(bu 2
machine\-type: CPU model may look different depending on the
machine\-type.  (Except for CPU models reported as \(dqstatic\(dq in
query\-cpu\-definitions.)
.IP \(bu 2
machine options (including accelerator): in some architectures,
CPU models may look different depending on machine and accelerator
options.  (Except for CPU models reported as \(dqstatic\(dq in
query\-cpu\-definitions.)
.IP \(bu 2
\(dq\-cpu\(dq arguments and global properties: arguments to the \-cpu
option and global properties may affect expansion of CPU models.
Using query\-cpu\-model\-expansion while using these is not advised.
.UNINDENT
.sp
Some architectures may not support baselining CPU models.  s390x
supports baselining CPU models.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBmodela\fP (\fI\%CpuModelInfo\fP) \-\- description of the first CPU model to baseline
.IP \(bu 2
\fBmodelb\fP (\fI\%CpuModelInfo\fP) \-\- description of the second CPU model to baseline
.UNINDENT
.TP
.B Return
\fI\%CpuModelBaselineInfo\fP \-\- a CpuModelBaselineInfo describing the baselined CPU model
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
if baselining CPU models is not supported by the target
.IP \(bu 2
if a model cannot be used
.IP \(bu 2
if a model contains an unknown cpu definition name, unknown
properties or properties with wrong types.
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CpuModelExpansionInfo  (Since: 2.8)
The result of a cpu model expansion.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmodel\fP (\fI\%CpuModelInfo\fP) \-\- the expanded CpuModelInfo.
.IP \(bu 2
\fBdeprecated\-props\fP (\fB[\fP\fBstring\fP\fB]\fP, \fIoptional\fP) \-\- an optional list of properties that are flagged as
deprecated by the CPU vendor.  The list depends on the
CpuModelExpansionType: \(dqstatic\(dq properties are a subset of the
enabled\-properties for the expanded model; \(dqfull\(dq properties are
a set of properties that are deprecated across all models for
the architecture.  (since: 10.1 \-\- since 9.1 on s390x \-\-).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-cpu\-model\-expansion  (Since: 2.8)
Expands a given CPU model, \fBmodel\fP, (or a combination of CPU model +
additional options) to different granularities, specified by \fBtype\fP,
allowing tooling to get an understanding what a specific CPU model
looks like in QEMU under a certain configuration.
.sp
This interface can be used to query the \(dqhost\(dq CPU model.
.sp
The data returned by this command may be affected by:
.INDENT 7.0
.IP \(bu 2
QEMU version: CPU models may look different depending on the QEMU
version.  (Except for CPU models reported as \(dqstatic\(dq in
query\-cpu\-definitions.)
.IP \(bu 2
machine\-type: CPU model may look different depending on the
machine\-type.  (Except for CPU models reported as \(dqstatic\(dq in
query\-cpu\-definitions.)
.IP \(bu 2
machine options (including accelerator): in some architectures,
CPU models may look different depending on machine and accelerator
options.  (Except for CPU models reported as \(dqstatic\(dq in
query\-cpu\-definitions.)
.IP \(bu 2
\(dq\-cpu\(dq arguments and global properties: arguments to the \-cpu
option and global properties may affect expansion of CPU models.
Using query\-cpu\-model\-expansion while using these is not advised.
.UNINDENT
.sp
Some architectures may not support all expansion types.  s390x
supports \(dqfull\(dq and \(dqstatic\(dq.  Arm only supports \(dqfull\(dq.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBmodel\fP (\fI\%CpuModelInfo\fP) \-\- description of the CPU model to expand
.IP \(bu 2
\fBtype\fP (\fI\%CpuModelExpansionType\fP) \-\- expansion type, specifying how to expand the CPU model
.UNINDENT
.TP
.B Return
\fI\%CpuModelExpansionInfo\fP \-\- a CpuModelExpansionInfo describing the expanded CPU model
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
if expanding CPU models is not supported
.IP \(bu 2
if the model cannot be expanded
.IP \(bu 2
if the model contains an unknown CPU definition name, unknown
properties or properties with a wrong type
.IP \(bu 2
if an expansion type is not supported
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CpuDefinitionInfo  (Since: 1.2)
Virtual CPU definition.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- the name of the CPU definition
.IP \(bu 2
\fBmigration\-safe\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether a CPU definition can be safely used for
migration in combination with a QEMU compatibility machine when
migrating between different QEMU versions and between hosts with
different sets of (hardware or software) capabilities.  If not
provided, information is not available and callers should not
assume the CPU definition to be migration\-safe.  (since 2.8)
.IP \(bu 2
\fBstatic\fP (\fBboolean\fP) \-\- whether a CPU definition is static and will not change
depending on QEMU version, machine type, machine options and
accelerator options.  A static model is always migration\-safe.
(since 2.8)
.IP \(bu 2
\fBunavailable\-features\fP (\fB[\fP\fBstring\fP\fB]\fP, \fIoptional\fP) \-\- List of properties that prevent the CPU model
from running in the current host.  (since 2.8)
.IP \(bu 2
\fBtypename\fP (\fBstring\fP) \-\- Type name that can be used as argument to
\fBdevice\-list\-properties\fP, to introspect properties configurable
using \-cpu or \-global.  (since 2.9)
.IP \(bu 2
\fBalias\-of\fP (\fBstring\fP, \fIoptional\fP) \-\- Name of CPU model this model is an alias for.  The target
of the CPU model alias may change depending on the machine type.
Management software is supposed to translate CPU model aliases
in the VM configuration, because aliases may stop being
migration\-safe in the future (since 4.1)
.IP \(bu 2
\fBdeprecated\fP (\fBboolean\fP) \-\- If true, this CPU model is deprecated and may be
removed in some future version of QEMU according to the QEMU
deprecation policy.  (since 5.2)
.UNINDENT
.UNINDENT
.sp
\fBunavailable\-features\fP is a list of QOM property names that represent
CPU model attributes that prevent the CPU from running.  If the QOM
property is read\-only, that means there\(aqs no known way to make the
CPU model run in the current host.  Implementations that choose not
to provide specific information return the property name \(dqtype\(dq.  If
the property is read\-write, it means that it MAY be possible to run
the CPU model in the current host if that property is changed.
Management software can use it as hints to suggest or choose an
alternative for the user, or just to generate meaningful error
messages explaining why the CPU model can\(aqt be used.  If
\fBunavailable\-features\fP is an empty list, the CPU model is runnable
using the current host and machine\-type.  If \fBunavailable\-features\fP
is not present, runnability information for the CPU is not
available.
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-cpu\-definitions  (Since: 1.2)
Return a list of supported virtual CPU definitions
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%CpuDefinitionInfo\fP\fB]\fP \-\- a list of CpuDefinitionInfo
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  S390CpuPolarization  (Since: 8.2)
An enumeration of CPU polarization that can be assumed by a virtual
S390 CPU
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBhorizontal\fP \-\- Not documented
.IP \(bu 2
\fBvertical\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  set\-cpu\-topology  (Since: 8.2)
This command is unstable/experimental.
.sp
Modify the topology by moving the CPU inside the topology tree, or
by changing a modifier attribute of a CPU.  Absent values will not
be modified.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBcore\-id\fP (\fBint\fP) \-\- the vCPU ID to be moved
.IP \(bu 2
\fBsocket\-id\fP (\fBint\fP, \fIoptional\fP) \-\- destination socket to move the vCPU to
.IP \(bu 2
\fBbook\-id\fP (\fBint\fP, \fIoptional\fP) \-\- destination book to move the vCPU to
.IP \(bu 2
\fBdrawer\-id\fP (\fBint\fP, \fIoptional\fP) \-\- destination drawer to move the vCPU to
.IP \(bu 2
\fBentitlement\fP (\fI\%S390CpuEntitlement\fP, \fIoptional\fP) \-\- entitlement to set
.IP \(bu 2
\fBdedicated\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether the provisioning of real to virtual CPU is
dedicated
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is experimental.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  CPU_POLARIZATION_CHANGE  (Since: 8.2)
This event is unstable/experimental.
.sp
Emitted when the guest asks to change the polarization.
.sp
The guest can tell the host (via the PTF instruction) whether the
CPUs should be provisioned using horizontal or vertical
polarization.
.sp
On horizontal polarization the host is expected to provision all
vCPUs equally.
.sp
On vertical polarization the host can provision each vCPU
differently.  The guest will get information on the details of the
provisioning the next time it uses the STSI(15) instruction.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpolarization\fP (\fI\%S390CpuPolarization\fP) \-\- polarization specified by the guest
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This event is experimental.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqCPU_POLARIZATION_CHANGE\(dq,
     \(dqdata\(dq: { \(dqpolarization\(dq: \(dqhorizontal\(dq },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1401385907, \(dqmicroseconds\(dq: 422329 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CpuPolarizationInfo  (Since: 8.2)
The result of a CPU polarization query.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpolarization\fP (\fI\%S390CpuPolarization\fP) \-\- the CPU polarization
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-s390x\-cpu\-polarization  (Since: 8.2)
This command is unstable/experimental..INDENT 7.0
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is experimental.
.UNINDENT
.TP
.B Return
\fI\%CpuPolarizationInfo\fP \-\- the machine\(aqs CPU polarization
.UNINDENT
.UNINDENT
.SH RECORD/REPLAY
.INDENT 0.0
.TP
.B Enum  ReplayMode  (Since: 2.5)
Mode of the replay subsystem.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBnone\fP \-\- normal execution mode.  Replay or record are not enabled.
.IP \(bu 2
\fBrecord\fP \-\- record mode.  All non\-deterministic data is written into
the replay log.
.IP \(bu 2
\fBplay\fP \-\- replay mode.  Non\-deterministic data required for system
execution is read from the log.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ReplayInfo  (Since: 5.2)
Record/replay information.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmode\fP (\fI\%ReplayMode\fP) \-\- current mode.
.IP \(bu 2
\fBfilename\fP (\fBstring\fP, \fIoptional\fP) \-\- name of the record/replay log file.  It is present only
in record or replay modes, when the log is recorded or replayed.
.IP \(bu 2
\fBicount\fP (\fBint\fP) \-\- current number of executed instructions.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-replay  (Since: 5.2)
Retrieve the record/replay information.  It includes current
instruction count which may be used for \fBreplay\-break\fP and
\fBreplay\-seek\fP commands.
.INDENT 7.0
.TP
.B Return
\fI\%ReplayInfo\fP \-\- record/replay information.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-replay\(dq }
<\- { \(dqreturn\(dq: { \(dqmode\(dq: \(dqplay\(dq, \(dqfilename\(dq: \(dqlog.rr\(dq, \(dqicount\(dq: 220414 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  replay\-break  (Since: 5.2)
Set replay breakpoint at instruction count \fBicount\fP\&.  Execution stops
when the specified instruction is reached.  There can be at most one
breakpoint.  When breakpoint is set, any prior one is removed.  The
breakpoint may be set only in replay mode and only \(dqin the future\(dq,
i.e. at instruction counts greater than the current one.  The
current instruction count can be observed with \fBquery\-replay\fP\&.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBicount\fP (\fBint\fP) \-\- instruction count to stop at
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqreplay\-break\(dq, \(dqarguments\(dq: { \(dqicount\(dq: 220414 } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  replay\-delete\-break  (Since: 5.2)
Remove replay breakpoint which was set with \fBreplay\-break\fP\&.  The
command is ignored when there are no replay breakpoints.
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqreplay\-delete\-break\(dq }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  replay\-seek  (Since: 5.2)
Automatically proceed to the instruction count \fBicount\fP, when
replaying the execution.  The command automatically loads nearest
snapshot and replays the execution to find the desired instruction.
When there is no preceding snapshot or the execution is not
replayed, then the command fails.  Instruction count can be obtained
with the \fBquery\-replay\fP command.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBicount\fP (\fBint\fP) \-\- target instruction count
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqreplay\-seek\(dq, \(dqarguments\(dq: { \(dqicount\(dq: 220414 } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH YANK FEATURE
.INDENT 0.0
.TP
.B Enum  YankInstanceType  (Since: 6.0)
An enumeration of yank instance types.  See \fBYankInstance\fP for more
information.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBblock\-node\fP \-\- Not documented
.IP \(bu 2
\fBchardev\fP \-\- Not documented
.IP \(bu 2
\fBmigration\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  YankInstanceBlockNode  (Since: 6.0)
Specifies which block graph node to yank.  See \fBYankInstance\fP for
more information.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnode\-name\fP (\fBstring\fP) \-\- the name of the block graph node
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  YankInstanceChardev  (Since: 6.0)
Specifies which character device to yank.  See \fBYankInstance\fP for
more information.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- the chardev\(aqs ID
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  YankInstance  (Since: 6.0)
A yank instance can be yanked with the \fByank\fP qmp command to recover
from a hanging QEMU.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%YankInstanceType\fP) \-\- yank instance type
.IP \(bu 2
When \fBtype\fP is \fBblock\-node\fP: The members of \fI\%YankInstanceBlockNode\fP\&.
.IP \(bu 2
When \fBtype\fP is \fBchardev\fP: The members of \fI\%YankInstanceChardev\fP\&.
.UNINDENT
.UNINDENT
.sp
Currently implemented yank instances:
.INDENT 7.0
.IP \(bu 2
nbd block device: Yanking it will shut down the connection to the
nbd server without attempting to reconnect.
.IP \(bu 2
socket chardev: Yanking it will shut down the connected socket.
.IP \(bu 2
migration: Yanking it will shut down all migration connections.
Unlike \fBmigrate_cancel\fP, it will not notify the migration process,
so migration will go into \fBfailed\fP state, instead of \fBcancelled\fP
state.  \fByank\fP should be used to recover from hangs.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  yank  (Since: 6.0)
Try to recover from hanging QEMU by yanking the specified instances.
See \fBYankInstance\fP for more information.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBinstances\fP (\fB[\fP\fI\%YankInstance\fP\fB]\fP) \-\- the instances to be yanked
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If any of the YankInstances doesn\(aqt exist, DeviceNotFound
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqyank\(dq,
     \(dqarguments\(dq: {
         \(dqinstances\(dq: [
              { \(dqtype\(dq: \(dqblock\-node\(dq,
                \(dqnode\-name\(dq: \(dqnbd0\(dq }
         ] } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-yank  (Since: 6.0)
Query yank instances.  See \fBYankInstance\fP for more information.
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%YankInstance\fP\fB]\fP \-\- list of \fBYankInstance\fP
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-yank\(dq }
<\- { \(dqreturn\(dq: [
         { \(dqtype\(dq: \(dqblock\-node\(dq,
           \(dqnode\-name\(dq: \(dqnbd0\(dq }
     ] }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH MISCELLANEA
.INDENT 0.0
.TP
.B Command  add_client  (Since: 0.14)
Allow client connections for VNC, Spice and socket based character
devices to be passed in to QEMU via SCM_RIGHTS.
.sp
If the FD associated with \fBfdname\fP is not a socket, the command will
fail and the FD will be closed.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBprotocol\fP (\fBstring\fP) \-\- protocol name.  Valid names are \(dqvnc\(dq, \(dqspice\(dq,
\(dq\fBdbus\-display\fP\(dq or the name of a character device (e.g. from
\-chardev id=XXXX)
.IP \(bu 2
\fBfdname\fP (\fBstring\fP) \-\- file descriptor name previously passed via \(aqgetfd\(aq command
.IP \(bu 2
\fBskipauth\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether to skip authentication.  Only applies to \(dqvnc\(dq
and \(dqspice\(dq protocols
.IP \(bu 2
\fBtls\fP (\fBboolean\fP, \fIoptional\fP) \-\- whether to perform TLS.  Only applies to the \(dqspice\(dq protocol
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqadd_client\(dq, \(dqarguments\(dq: { \(dqprotocol\(dq: \(dqvnc\(dq,
                                             \(dqfdname\(dq: \(dqmyclient\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  NameInfo  (Since: 0.14)
Guest name information.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP, \fIoptional\fP) \-\- The name of the guest
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-name  (Since: 0.14)
Return the name information of a guest.
.INDENT 7.0
.TP
.B Return
\fI\%NameInfo\fP \-\- \fBNameInfo\fP of the guest
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-name\(dq }
<\- { \(dqreturn\(dq: { \(dqname\(dq: \(dqqemu\-name\(dq } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  IOThreadInfo  (Since: 2.0)
Information about an iothread
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- the identifier of the iothread
.IP \(bu 2
\fBthread\-id\fP (\fBint\fP) \-\- ID of the underlying host thread
.IP \(bu 2
\fBpoll\-max\-ns\fP (\fBint\fP) \-\- maximum polling time in ns, 0 means polling is
disabled (since 2.9)
.IP \(bu 2
\fBpoll\-grow\fP (\fBint\fP) \-\- how many ns will be added to polling time, 0 means that
it\(aqs not configured (since 2.9)
.IP \(bu 2
\fBpoll\-shrink\fP (\fBint\fP) \-\- how many ns will be removed from polling time, 0 means
that it\(aqs not configured (since 2.9)
.IP \(bu 2
\fBaio\-max\-batch\fP (\fBint\fP) \-\- maximum number of requests in a batch for the AIO
engine, 0 means that the engine will use its default (since 6.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-iothreads  (Since: 2.0)
Return a list of information about each iothread.
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
This list excludes the QEMU main loop thread, which is not
declared using the \fB\-object iothread\fP command\-line option.  It
is always the main thread of the process.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%IOThreadInfo\fP\fB]\fP \-\- a list of \fBIOThreadInfo\fP for each iothread
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-iothreads\(dq }
<\- { \(dqreturn\(dq: [
         {
            \(dqid\(dq:\(dqiothread0\(dq,
            \(dqthread\-id\(dq:3134
         },
         {
            \(dqid\(dq:\(dqiothread1\(dq,
            \(dqthread\-id\(dq:3135
         }
      ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  stop  (Since: 0.14)
Stop guest VM execution.
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
This function will succeed even if the guest is already in
the stopped state.  In \(dqinmigrate\(dq state, it will ensure that the
guest remains paused once migration finishes, as if the \fB\-S\fP
option was passed on the command line.
.sp
In the \(dqsuspended\(dq state, it will completely stop the VM and
cause a transition to the \(dqpaused\(dq state.  (Since 9.0)
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqstop\(dq }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  cont  (Since: 0.14)
Resume guest VM execution.
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
This command will succeed if the guest is currently
running.  It will also succeed if the guest is in the \(dqinmigrate\(dq
state; in this case, the effect of the command is to make sure
the guest starts once migration finishes, removing the effect of
the \fB\-S\fP command line option if it was passed.
.sp
If the VM was previously suspended, and not been reset or woken,
this command will transition back to the \(dqsuspended\(dq state.
(Since 9.0)
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqcont\(dq }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-exit\-preconfig  (Since: 3.0)
This command is unstable/experimental.
.sp
Exit from \(dqpreconfig\(dq state
.sp
This command makes QEMU exit the preconfig state and proceed with VM
initialization using configuration data provided on the command line
and via the QMP monitor during the preconfig state.  The command is
only available during the preconfig state (i.e. when the \-\-preconfig
command line option was in use).
.INDENT 7.0
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is experimental.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqx\-exit\-preconfig\(dq }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  human\-monitor\-command  (Since: 0.14)
Execute a command on the human monitor and return the output.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBcommand\-line\fP (\fBstring\fP) \-\- the command to execute in the human monitor
.IP \(bu 2
\fBcpu\-index\fP (\fBint\fP, \fIoptional\fP) \-\- The CPU to use for commands that require an implicit CPU
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBsavevm\-monitor\-nodes\fP \-\- If present, HMP command savevm only snapshots
monitor\-owned nodes if they have no parents.  This allows the
use of \(aqsavevm\(aq with \-blockdev.  (since 4.2)
.UNINDENT
.TP
.B Return
\fBstring\fP \-\- the output of the command as a string
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
This command only exists as a stop\-gap.  Its use is highly
discouraged.  The semantics of this command are not guaranteed:
this means that command names, arguments and responses can change
or be removed at ANY time.  Applications that rely on long term
stability guarantees should NOT use this command.
.sp
Known limitations:
.INDENT 0.0
.IP \(bu 2
This command is stateless, this means that commands that depend
on state information (such as getfd) might not work.
.IP \(bu 2
Commands that prompt the user for data don\(aqt currently work.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqhuman\-monitor\-command\(dq,
     \(dqarguments\(dq: { \(dqcommand\-line\(dq: \(dqinfo kvm\(dq } }
<\- { \(dqreturn\(dq: \(dqkvm support: enabled\er\en\(dq }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  getfd  (Since: 0.14)
\fIAvailability\fP: \fBCONFIG_POSIX\fP
.sp
Receive a file descriptor via SCM rights and assign it a name
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBfdname\fP (\fBstring\fP) \-\- file descriptor name
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
If \fBfdname\fP already exists, the file descriptor assigned to
it will be closed and replaced by the received file descriptor.
.sp
The \(aqclosefd\(aq command can be used to explicitly close the file
descriptor when it is no longer needed.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqgetfd\(dq, \(dqarguments\(dq: { \(dqfdname\(dq: \(dqfd1\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  get\-win32\-socket  (Since: 8.0)
\fIAvailability\fP: \fBCONFIG_WIN32\fP
.sp
Add a socket that was duplicated to QEMU process with
WSADuplicateSocketW() via WSASocket() & WSAPROTOCOL_INFOW structure
and assign it a name (the SOCKET is associated with a CRT file
descriptor)
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBinfo\fP (\fBstring\fP) \-\- the WSAPROTOCOL_INFOW structure (encoded in base64)
.IP \(bu 2
\fBfdname\fP (\fBstring\fP) \-\- file descriptor name
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
If \fBfdname\fP already exists, the file descriptor assigned to
it will be closed and replaced by the received file descriptor.
.sp
The \(aqclosefd\(aq command can be used to explicitly close the file
descriptor when it is no longer needed.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqget\-win32\-socket\(dq,
     \(dqarguments\(dq: { \(dqinfo\(dq: \(dqabcd123..\(dq, \(dqfdname\(dq: \(dqskclient\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  closefd  (Since: 0.14)
Close a file descriptor previously passed via SCM rights
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBfdname\fP (\fBstring\fP) \-\- file descriptor name
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqclosefd\(dq, \(dqarguments\(dq: { \(dqfdname\(dq: \(dqfd1\(dq } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AddfdInfo  (Since: 1.2)
Information about a file descriptor that was added to an fd set.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfdset\-id\fP (\fBint\fP) \-\- The ID of the fd set that \fBfd\fP was added to.
.IP \(bu 2
\fBfd\fP (\fBint\fP) \-\- The file descriptor that was received via SCM rights and added
to the fd set.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  add\-fd  (Since: 1.2)
Add a file descriptor, that was passed via SCM rights, to an fd set.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBfdset\-id\fP (\fBint\fP, \fIoptional\fP) \-\- The ID of the fd set to add the file descriptor to.
.IP \(bu 2
\fBopaque\fP (\fBstring\fP, \fIoptional\fP) \-\- A free\-form string that can be used to describe the fd.
.UNINDENT
.TP
.B Return
\fI\%AddfdInfo\fP \-\- \fBAddfdInfo\fP
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If file descriptor was not received, GenericError
.IP \(bu 2
If \fBfdset\-id\fP is a negative value, GenericError
.UNINDENT

.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
The list of fd sets is shared by all monitor connections.
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
If \fBfdset\-id\fP is not specified, a new fd set will be
created.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqadd\-fd\(dq, \(dqarguments\(dq: { \(dqfdset\-id\(dq: 1 } }
<\- { \(dqreturn\(dq: { \(dqfdset\-id\(dq: 1, \(dqfd\(dq: 3 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  remove\-fd  (Since: 1.2)
Remove a file descriptor from an fd set.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBfdset\-id\fP (\fBint\fP) \-\- The ID of the fd set that the file descriptor belongs to.
.IP \(bu 2
\fBfd\fP (\fBint\fP, \fIoptional\fP) \-\- The file descriptor that is to be removed.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If \fBfdset\-id\fP or \fBfd\fP is not found, GenericError
.UNINDENT

.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
The list of fd sets is shared by all monitor connections.
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
If \fBfd\fP is not specified, all file descriptors in \fBfdset\-id\fP
will be removed.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqremove\-fd\(dq, \(dqarguments\(dq: { \(dqfdset\-id\(dq: 1, \(dqfd\(dq: 3 } }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  FdsetFdInfo  (Since: 1.2)
Information about a file descriptor that belongs to an fd set.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfd\fP (\fBint\fP) \-\- The file descriptor value.
.IP \(bu 2
\fBopaque\fP (\fBstring\fP, \fIoptional\fP) \-\- A free\-form string that can be used to describe the fd.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  FdsetInfo  (Since: 1.2)
Information about an fd set.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBfdset\-id\fP (\fBint\fP) \-\- The ID of the fd set.
.IP \(bu 2
\fBfds\fP (\fB[\fP\fI\%FdsetFdInfo\fP\fB]\fP) \-\- A list of file descriptors that belong to this fd set.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-fdsets  (Since: 1.2)
Return information describing all fd sets.
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%FdsetInfo\fP\fB]\fP \-\- A list of \fBFdsetInfo\fP
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
The list of fd sets is shared by all monitor connections.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-fdsets\(dq }
<\- { \(dqreturn\(dq: [
       {
         \(dqfds\(dq: [
           {
             \(dqfd\(dq: 30,
             \(dqopaque\(dq: \(dqrdonly:/path/to/file\(dq
           },
           {
             \(dqfd\(dq: 24,
             \(dqopaque\(dq: \(dqrdwr:/path/to/file\(dq
           }
         ],
         \(dqfdset\-id\(dq: 1
       },
       {
         \(dqfds\(dq: [
           {
             \(dqfd\(dq: 28
           },
           {
             \(dqfd\(dq: 29
           }
         ],
         \(dqfdset\-id\(dq: 0
       }
     ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  CommandLineParameterType  (Since: 1.5)
Possible types for an option parameter.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBstring\fP \-\- accepts a character string
.IP \(bu 2
\fBboolean\fP \-\- accepts \(dqon\(dq or \(dqoff\(dq
.IP \(bu 2
\fBnumber\fP \-\- accepts a number
.IP \(bu 2
\fBsize\fP \-\- accepts a number followed by an optional suffix (K)ilo,
(M)ega, (G)iga, (T)era
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CommandLineParameterInfo  (Since: 1.5)
Details about a single parameter of a command line option.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- parameter name
.IP \(bu 2
\fBtype\fP (\fI\%CommandLineParameterType\fP) \-\- parameter \fBCommandLineParameterType\fP
.IP \(bu 2
\fBhelp\fP (\fBstring\fP, \fIoptional\fP) \-\- human readable text string, not suitable for parsing.
.IP \(bu 2
\fBdefault\fP (\fBstring\fP, \fIoptional\fP) \-\- default value string (since 2.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CommandLineOptionInfo  (Since: 1.5)
Details about a command line option, including its list of parameter
details
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBoption\fP (\fBstring\fP) \-\- option name
.IP \(bu 2
\fBparameters\fP (\fB[\fP\fI\%CommandLineParameterInfo\fP\fB]\fP) \-\- an array of \fBCommandLineParameterInfo\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-command\-line\-options  (Since: 1.5)
Query command line option schema.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBoption\fP (\fBstring\fP, \fIoptional\fP) \-\- option name
.UNINDENT
.TP
.B Return
\fB[\fP\fI\%CommandLineOptionInfo\fP\fB]\fP \-\- list of \fBCommandLineOptionInfo\fP for all options (or for the
given \fBoption\fP).
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
if the given \fBoption\fP doesn\(aqt exist
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-command\-line\-options\(dq,
     \(dqarguments\(dq: { \(dqoption\(dq: \(dqoption\-rom\(dq } }
<\- { \(dqreturn\(dq: [
        {
            \(dqparameters\(dq: [
                {
                    \(dqname\(dq: \(dqromfile\(dq,
                    \(dqtype\(dq: \(dqstring\(dq
                },
                {
                    \(dqname\(dq: \(dqbootindex\(dq,
                    \(dqtype\(dq: \(dqnumber\(dq
                }
            ],
            \(dqoption\(dq: \(dqoption\-rom\(dq
        }
     ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  RTC_CHANGE  (Since: 0.13)
Emitted when the guest changes the RTC time.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBoffset\fP (\fBint\fP) \-\- offset in seconds between base RTC clock (as specified by
\-rtc base), and new RTC clock value
.IP \(bu 2
\fBqom\-path\fP (\fBstring\fP) \-\- path to the RTC object in the QOM tree
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
This event is rate\-limited.  It is not guaranteed that the
RTC in the system implements this event, or even that the system
has an RTC at all.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqRTC_CHANGE\(dq,
     \(dqdata\(dq: { \(dqoffset\(dq: 78 },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1267020223, \(dqmicroseconds\(dq: 435656 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  VFU_CLIENT_HANGUP  (Since: 7.1)
Emitted when the client of a TYPE_VFIO_USER_SERVER closes the
communication channel
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBvfu\-id\fP (\fBstring\fP) \-\- ID of the TYPE_VFIO_USER_SERVER object.  It is the last
component of \fBvfu\-qom\-path\fP referenced below
.IP \(bu 2
\fBvfu\-qom\-path\fP (\fBstring\fP) \-\- path to the TYPE_VFIO_USER_SERVER object in the QOM
tree
.IP \(bu 2
\fBdev\-id\fP (\fBstring\fP) \-\- ID of attached PCI device
.IP \(bu 2
\fBdev\-qom\-path\fP (\fBstring\fP) \-\- path to attached PCI device in the QOM tree
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqVFU_CLIENT_HANGUP\(dq,
     \(dqdata\(dq: { \(dqvfu\-id\(dq: \(dqvfu1\(dq,
               \(dqvfu\-qom\-path\(dq: \(dq/objects/vfu1\(dq,
               \(dqdev\-id\(dq: \(dqsas1\(dq,
               \(dqdev\-qom\-path\(dq: \(dq/machine/peripheral/sas1\(dq },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1265044230, \(dqmicroseconds\(dq: 450486 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  GICCapability  (Since: 2.6)
The struct describes capability for a specific GIC (Generic
Interrupt Controller) version.  These bits are not only decided by
QEMU/KVM software version, but also decided by the hardware that the
program is running upon.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBversion\fP (\fBint\fP) \-\- version of GIC to be described.  Currently, only 2 and 3
are supported.
.IP \(bu 2
\fBemulated\fP (\fBboolean\fP) \-\- whether current QEMU/hardware supports emulated GIC
device in user space.
.IP \(bu 2
\fBkernel\fP (\fBboolean\fP) \-\- whether current QEMU/hardware supports hardware accelerated
GIC device in kernel.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-gic\-capabilities  (Since: 2.6)
It will return a list of GICCapability objects that describe its
capability bits.
.sp
On non\-ARM targets this command will report an error as the GIC
technology is not applicable.
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%GICCapability\fP\fB]\fP \-\- a list of GICCapability objects.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-gic\-capabilities\(dq }
<\- { \(dqreturn\(dq: [{ \(dqversion\(dq: 2, \(dqemulated\(dq: true, \(dqkernel\(dq: false },
                { \(dqversion\(dq: 3, \(dqemulated\(dq: false, \(dqkernel\(dq: true } ] }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  rtc\-reset\-reinjection  (Since: 2.1)
This command will reset the RTC interrupt reinjection backlog.  Can
be used if another mechanism to synchronize guest time is in effect,
for example QEMU guest agent\(aqs guest\-set\-time command.
.sp
Use of this command is only applicable for x86 machines with an RTC,
and on other machines will silently return without performing any
action.
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqrtc\-reset\-reinjection\(dq }
<\- { \(dqreturn\(dq: {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  SevState  (Since: 2.12)
An enumeration of SEV state information used during \fBquery\-sev\fP\&.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBuninit\fP \-\- The guest is uninitialized.
.IP \(bu 2
\fBlaunch\-update\fP \-\- The guest is currently being launched; plaintext
data and register state is being imported.
.IP \(bu 2
\fBlaunch\-secret\fP \-\- The guest is currently being launched; ciphertext
data is being imported.
.IP \(bu 2
\fBrunning\fP \-\- The guest is fully launched or migrated in.
.IP \(bu 2
\fBsend\-update\fP \-\- The guest is currently being migrated out to another
machine.
.IP \(bu 2
\fBreceive\-update\fP \-\- The guest is currently being migrated from another
machine.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  SevGuestType  (Since: 6.2)
An enumeration indicating the type of SEV guest being run.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBsev\fP \-\- The guest is a legacy SEV or SEV\-ES guest.
.IP \(bu 2
\fBsev\-snp\fP \-\- The guest is an SEV\-SNP guest.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SevGuestInfo  (Since: 2.12)
Information specific to legacy SEV/SEV\-ES guests.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpolicy\fP (\fBint\fP) \-\- SEV policy value
.IP \(bu 2
\fBhandle\fP (\fBint\fP) \-\- SEV firmware handle
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SevSnpGuestInfo  (Since: 9.1)
Information specific to SEV\-SNP guests.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsnp\-policy\fP (\fBint\fP) \-\- SEV\-SNP policy value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SevInfo  (Since: 2.12)
Information about Secure Encrypted Virtualization (SEV) support
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBenabled\fP (\fBboolean\fP) \-\- true if SEV is active
.IP \(bu 2
\fBapi\-major\fP (\fBint\fP) \-\- SEV API major version
.IP \(bu 2
\fBapi\-minor\fP (\fBint\fP) \-\- SEV API minor version
.IP \(bu 2
\fBbuild\-id\fP (\fBint\fP) \-\- SEV FW build id
.IP \(bu 2
\fBstate\fP (\fI\%SevState\fP) \-\- SEV guest state
.IP \(bu 2
\fBsev\-type\fP (\fI\%SevGuestType\fP) \-\- Type of SEV guest being run
.IP \(bu 2
When \fBsev\-type\fP is \fBsev\fP: The members of \fI\%SevGuestInfo\fP\&.
.IP \(bu 2
When \fBsev\-type\fP is \fBsev\-snp\fP: The members of \fI\%SevSnpGuestInfo\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-sev  (Since: 2.12)
Return information about SEV/SEV\-ES/SEV\-SNP.
.sp
If unavailable due to an incompatible configuration the returned
\fBenabled\fP field is set to \(aqfalse\(aq and the state of all other fields
is unspecified.
.INDENT 7.0
.TP
.B Return
\fI\%SevInfo\fP \-\- \fBSevInfo\fP
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-sev\(dq }
<\- { \(dqreturn\(dq: { \(dqenabled\(dq: true, \(dqapi\-major\(dq : 0, \(dqapi\-minor\(dq : 0,
                 \(dqbuild\-id\(dq : 0, \(dqpolicy\(dq : 0, \(dqstate\(dq : \(dqrunning\(dq,
                 \(dqhandle\(dq : 1 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SevLaunchMeasureInfo  (Since: 2.12)
SEV Guest Launch measurement information
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fBstring\fP) \-\- the measurement value encoded in base64
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-sev\-launch\-measure  (Since: 2.12)
Query the SEV/SEV\-ES guest launch information.
.sp
This is only valid on x86 machines configured with KVM and the
\(aqsev\-guest\(aq confidential virtualization object.  The launch
measurement for SEV\-SNP guests is only available within the guest.
.INDENT 7.0
.TP
.B Return
\fI\%SevLaunchMeasureInfo\fP \-\- The \fBSevLaunchMeasureInfo\fP for the guest
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If the launch measurement is unavailable, either due to an
invalid guest configuration or if the guest has not reached
the required SEV state, GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-sev\-launch\-measure\(dq }
<\- { \(dqreturn\(dq: { \(dqdata\(dq: \(dq4l8LXeNlSPUDlXPJG5966/8%YZ\(dq } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SevCapability  (Since: 2.12)
The struct describes capability for a Secure Encrypted
Virtualization feature.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpdh\fP (\fBstring\fP) \-\- Platform Diffie\-Hellman key (base64 encoded)
.IP \(bu 2
\fBcert\-chain\fP (\fBstring\fP) \-\- PDH certificate chain (base64 encoded)
.IP \(bu 2
\fBcpu0\-id\fP (\fBstring\fP) \-\- Unique ID of CPU0 (base64 encoded) (since 7.1)
.IP \(bu 2
\fBcbitpos\fP (\fBint\fP) \-\- C\-bit location in page table entry
.IP \(bu 2
\fBreduced\-phys\-bits\fP (\fBint\fP) \-\- Number of physical Address bit reduction when
SEV is enabled
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-sev\-capabilities  (Since: 2.12)
Get SEV capabilities.
.sp
This is only supported on AMD X86 platforms with KVM enabled.
.INDENT 7.0
.TP
.B Return
\fI\%SevCapability\fP \-\- SevCapability objects.
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If SEV is not available on the platform, GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-sev\-capabilities\(dq }
<\- { \(dqreturn\(dq: { \(dqpdh\(dq: \(dq8CCDD8DDD\(dq, \(dqcert\-chain\(dq: \(dq888CCCDDDEE\(dq,
                 \(dqcpu0\-id\(dq: \(dq2lvmGwo+...61iEinw==\(dq,
                 \(dqcbitpos\(dq: 47, \(dqreduced\-phys\-bits\(dq: 1}}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  sev\-inject\-launch\-secret  (Since: 6.0)
This command injects a secret blob into memory of a SEV/SEV\-ES
guest.
.sp
This is only valid on x86 machines configured with KVM and the
\(aqsev\-guest\(aq confidential virtualization object.  SEV\-SNP guests do
not support launch secret injection.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBpacket\-header\fP (\fBstring\fP) \-\- the launch secret packet header encoded in base64
.IP \(bu 2
\fBsecret\fP (\fBstring\fP) \-\- the launch secret data to be injected encoded in base64
.IP \(bu 2
\fBgpa\fP (\fBint\fP, \fIoptional\fP) \-\- the guest physical address where secret will be injected.
.UNINDENT
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
If launch secret injection is not possible, either due to
an invalid guest configuration, or if the guest has not
reached the required SEV state, GenericError
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SevAttestationReport  (Since: 6.1)
The struct describes attestation report for a Secure Encrypted
Virtualization feature.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdata\fP (\fBstring\fP) \-\- guest attestation report (base64 encoded)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-sev\-attestation\-report  (Since: 6.1)
This command is used to get the SEV attestation report.
.sp
This is only valid on x86 machines configured with KVM and the
\(aqsev\-guest\(aq confidential virtualization object.  The attestation
report for SEV\-SNP guests is only available within the guest.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBmnonce\fP (\fBstring\fP) \-\- a random 16 bytes value encoded in base64 (it will be
included in report)
.UNINDENT
.TP
.B Return
\fI\%SevAttestationReport\fP \-\- SevAttestationReport objects.
.TP
.B Errors
.INDENT 7.0
.IP \(bu 2
This will return an error if the attestation report is
unavailable, either due to an invalid guest configuration
or if the guest has not reached the required SEV state,
GenericError
.UNINDENT

.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq : \(dqquery\-sev\-attestation\-report\(dq,
                 \(dqarguments\(dq: { \(dqmnonce\(dq: \(dqaaaaaaa\(dq } }
<\- { \(dqreturn\(dq : { \(dqdata\(dq: \(dqaaaaaaaabbbddddd\(dq} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SgxEpcSection  (Since: 7.0)
Information about intel SGX EPC section
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnode\fP (\fBint\fP) \-\- the numa node
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- the size of EPC section
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  SgxInfo  (Since: 6.2)
Information about intel Safe Guard eXtension (SGX) support
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsgx\fP (\fBboolean\fP) \-\- true if SGX is supported
.IP \(bu 2
\fBsgx1\fP (\fBboolean\fP) \-\- true if SGX1 is supported
.IP \(bu 2
\fBsgx2\fP (\fBboolean\fP) \-\- true if SGX2 is supported
.IP \(bu 2
\fBflc\fP (\fBboolean\fP) \-\- true if FLC is supported
.IP \(bu 2
\fBsections\fP (\fB[\fP\fI\%SgxEpcSection\fP\fB]\fP) \-\- The EPC sections information (Since: 7.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-sgx  (Since: 6.2)
Return information about configured SGX capabilities of guest
.INDENT 7.0
.TP
.B Return
\fI\%SgxInfo\fP \-\- \fBSgxInfo\fP
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-sgx\(dq }
<\- { \(dqreturn\(dq: { \(dqsgx\(dq: true, \(dqsgx1\(dq : true, \(dqsgx2\(dq : true,
                 \(dqflc\(dq: true,
                 \(dqsections\(dq: [{\(dqnode\(dq: 0, \(dqsize\(dq: 67108864},
                 {\(dqnode\(dq: 1, \(dqsize\(dq: 29360128}]} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-sgx\-capabilities  (Since: 6.2)
Return information about SGX capabilities of host
.INDENT 7.0
.TP
.B Return
\fI\%SgxInfo\fP \-\- \fBSgxInfo\fP
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-sgx\-capabilities\(dq }
<\- { \(dqreturn\(dq: { \(dqsgx\(dq: true, \(dqsgx1\(dq : true, \(dqsgx2\(dq : true,
                 \(dqflc\(dq: true,
                 \(dqsection\(dq : [{\(dqnode\(dq: 0, \(dqsize\(dq: 67108864},
                 {\(dqnode\(dq: 1, \(dqsize\(dq: 29360128}]} }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  EvtchnPortType  (Since: 8.0)
An enumeration of Xen event channel port types.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBclosed\fP \-\- The port is unused.
.IP \(bu 2
\fBunbound\fP \-\- The port is allocated and ready to be bound.
.IP \(bu 2
\fBinterdomain\fP \-\- The port is connected as an interdomain interrupt.
.IP \(bu 2
\fBpirq\fP \-\- The port is bound to a physical IRQ (PIRQ).
.IP \(bu 2
\fBvirq\fP \-\- The port is bound to a virtual IRQ (VIRQ).
.IP \(bu 2
\fBipi\fP \-\- The post is an inter\-processor interrupt (IPI).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  EvtchnInfo  (Since: 8.0)
Information about a Xen event channel port
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBport\fP (\fBint\fP) \-\- the port number
.IP \(bu 2
\fBvcpu\fP (\fBint\fP) \-\- target vCPU for this port
.IP \(bu 2
\fBtype\fP (\fI\%EvtchnPortType\fP) \-\- the port type
.IP \(bu 2
\fBremote\-domain\fP (\fBstring\fP) \-\- remote domain for interdomain ports
.IP \(bu 2
\fBtarget\fP (\fBint\fP) \-\- remote port ID, or virq/pirq number
.IP \(bu 2
\fBpending\fP (\fBboolean\fP) \-\- port is currently active pending delivery
.IP \(bu 2
\fBmasked\fP (\fBboolean\fP) \-\- port is masked
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  xen\-event\-list  (Since: 8.0)
Query the Xen event channels opened by the guest.
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%EvtchnInfo\fP\fB]\fP \-\- list of open event channel ports.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqxen\-event\-list\(dq }
<\- { \(dqreturn\(dq: [
        {
            \(dqpending\(dq: false,
            \(dqport\(dq: 1,
            \(dqvcpu\(dq: 1,
            \(dqremote\-domain\(dq: \(dqqemu\(dq,
            \(dqmasked\(dq: false,
            \(dqtype\(dq: \(dqinterdomain\(dq,
            \(dqtarget\(dq: 1
        },
        {
            \(dqpending\(dq: false,
            \(dqport\(dq: 2,
            \(dqvcpu\(dq: 0,
            \(dqremote\-domain\(dq: \(dq\(dq,
            \(dqmasked\(dq: false,
            \(dqtype\(dq: \(dqvirq\(dq,
            \(dqtarget\(dq: 0
        }
     ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  xen\-event\-inject  (Since: 8.0)
Inject a Xen event channel port (interrupt) to the guest.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBport\fP (\fBint\fP) \-\- The port number
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqxen\-event\-inject\(dq, \(dqarguments\(dq: { \(dqport\(dq: 1 } }
<\- { \(dqreturn\(dq: { } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH AUDIO
.INDENT 0.0
.TP
.B Object  AudiodevPerDirectionOptions  (Since: 4.0)
General audio backend options that are used for both playback and
recording.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBmixing\-engine\fP (\fBboolean\fP, \fIoptional\fP) \-\- use QEMU\(aqs mixing engine to mix all streams inside
QEMU and convert audio formats when not supported by the
backend.  When set to off, fixed\-settings must be also off
(default on, since 4.2)
.IP \(bu 2
\fBfixed\-settings\fP (\fBboolean\fP, \fIoptional\fP) \-\- use fixed settings for host input/output.  When
off, frequency, channels and format must not be specified
(default true)
.IP \(bu 2
\fBfrequency\fP (\fBint\fP, \fIoptional\fP) \-\- frequency to use when using fixed settings (default
44100)
.IP \(bu 2
\fBchannels\fP (\fBint\fP, \fIoptional\fP) \-\- number of channels when using fixed settings (default 2)
.IP \(bu 2
\fBvoices\fP (\fBint\fP, \fIoptional\fP) \-\- number of voices to use (default 1)
.IP \(bu 2
\fBformat\fP (\fI\%AudioFormat\fP, \fIoptional\fP) \-\- sample format to use when using fixed settings (default
s16)
.IP \(bu 2
\fBbuffer\-length\fP (\fBint\fP, \fIoptional\fP) \-\- the buffer length in microseconds
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AudiodevGenericOptions  (Since: 4.0)
Generic driver\-specific options.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBin\fP (\fI\%AudiodevPerDirectionOptions\fP, \fIoptional\fP) \-\- options of the capture stream
.IP \(bu 2
\fBout\fP (\fI\%AudiodevPerDirectionOptions\fP, \fIoptional\fP) \-\- options of the playback stream
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AudiodevDBusOptions  (Since: 10.0)
Options of the D\-Bus audio backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBin\fP (\fI\%AudiodevPerDirectionOptions\fP, \fIoptional\fP) \-\- options of the capture stream
.IP \(bu 2
\fBout\fP (\fI\%AudiodevPerDirectionOptions\fP, \fIoptional\fP) \-\- options of the playback stream
.IP \(bu 2
\fBnsamples\fP (\fBint\fP, \fIoptional\fP) \-\- set the number of samples per read/write calls (default to 480,
.UNINDENT
.UNINDENT
.sp
10ms at 48kHz).
.UNINDENT
.INDENT 0.0
.TP
.B Object  AudiodevAlsaPerDirectionOptions  (Since: 4.0)
Options of the ALSA backend that are used for both playback and
recording.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdev\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of the ALSA device to use (default \(aqdefault\(aq)
.IP \(bu 2
\fBperiod\-length\fP (\fBint\fP, \fIoptional\fP) \-\- the period length in microseconds
.IP \(bu 2
\fBtry\-poll\fP (\fBboolean\fP, \fIoptional\fP) \-\- attempt to use poll mode, falling back to non\-polling
access on failure (default false)
.IP \(bu 2
The members of \fI\%AudiodevPerDirectionOptions\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AudiodevAlsaOptions  (Since: 4.0)
Options of the ALSA audio backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBin\fP (\fI\%AudiodevAlsaPerDirectionOptions\fP, \fIoptional\fP) \-\- options of the capture stream
.IP \(bu 2
\fBout\fP (\fI\%AudiodevAlsaPerDirectionOptions\fP, \fIoptional\fP) \-\- options of the playback stream
.IP \(bu 2
\fBthreshold\fP (\fBint\fP, \fIoptional\fP) \-\- set the threshold (in microseconds) when playback starts
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AudiodevSndioOptions  (Since: 7.2)
Options of the sndio audio backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBin\fP (\fI\%AudiodevPerDirectionOptions\fP, \fIoptional\fP) \-\- options of the capture stream
.IP \(bu 2
\fBout\fP (\fI\%AudiodevPerDirectionOptions\fP, \fIoptional\fP) \-\- options of the playback stream
.IP \(bu 2
\fBdev\fP (\fBstring\fP, \fIoptional\fP) \-\- the name of the sndio device to use (default \(aqdefault\(aq)
.IP \(bu 2
\fBlatency\fP (\fBint\fP, \fIoptional\fP) \-\- play buffer size (in microseconds)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AudiodevCoreaudioPerDirectionOptions  (Since: 4.0)
Options of the Core Audio backend that are used for both playback
and recording.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBbuffer\-count\fP (\fBint\fP, \fIoptional\fP) \-\- number of buffers
.IP \(bu 2
The members of \fI\%AudiodevPerDirectionOptions\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AudiodevCoreaudioOptions  (Since: 4.0)
Options of the coreaudio audio backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBin\fP (\fI\%AudiodevCoreaudioPerDirectionOptions\fP, \fIoptional\fP) \-\- options of the capture stream
.IP \(bu 2
\fBout\fP (\fI\%AudiodevCoreaudioPerDirectionOptions\fP, \fIoptional\fP) \-\- options of the playback stream
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AudiodevDsoundOptions  (Since: 4.0)
Options of the DirectSound audio backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBin\fP (\fI\%AudiodevPerDirectionOptions\fP, \fIoptional\fP) \-\- options of the capture stream
.IP \(bu 2
\fBout\fP (\fI\%AudiodevPerDirectionOptions\fP, \fIoptional\fP) \-\- options of the playback stream
.IP \(bu 2
\fBlatency\fP (\fBint\fP, \fIoptional\fP) \-\- add extra latency to playback in microseconds (default
10000)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AudiodevJackPerDirectionOptions  (Since: 5.1)
Options of the JACK backend that are used for both playback and
recording.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBserver\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- select from among several possible concurrent server
instances (default: environment variable $JACK_DEFAULT_SERVER if
set, else \(dqdefault\(dq)
.IP \(bu 2
\fBclient\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- the client name to use.  The server will modify this
name to create a unique variant, if needed unless \fBexact\-name\fP is
true (default: the guest\(aqs name)
.IP \(bu 2
\fBconnect\-ports\fP (\fBstring\fP, \fIoptional\fP) \-\- if set, a regular expression of JACK client port
name(s) to monitor for and automatically connect to
.IP \(bu 2
\fBstart\-server\fP (\fBboolean\fP, \fIoptional\fP) \-\- start a jack server process if one is not already
present (default: false)
.IP \(bu 2
\fBexact\-name\fP (\fBboolean\fP, \fIoptional\fP) \-\- use the exact name requested otherwise JACK
automatically generates a unique one, if needed (default: false)
.IP \(bu 2
The members of \fI\%AudiodevPerDirectionOptions\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AudiodevJackOptions  (Since: 5.1)
Options of the JACK audio backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBin\fP (\fI\%AudiodevJackPerDirectionOptions\fP, \fIoptional\fP) \-\- options of the capture stream
.IP \(bu 2
\fBout\fP (\fI\%AudiodevJackPerDirectionOptions\fP, \fIoptional\fP) \-\- options of the playback stream
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AudiodevOssPerDirectionOptions  (Since: 4.0)
Options of the OSS backend that are used for both playback and
recording.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdev\fP (\fBstring\fP, \fIoptional\fP) \-\- file name of the OSS device (default \(aq/dev/dsp\(aq)
.IP \(bu 2
\fBbuffer\-count\fP (\fBint\fP, \fIoptional\fP) \-\- number of buffers
.IP \(bu 2
\fBtry\-poll\fP (\fBboolean\fP, \fIoptional\fP) \-\- attempt to use poll mode, falling back to non\-polling
access on failure (default true)
.IP \(bu 2
The members of \fI\%AudiodevPerDirectionOptions\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AudiodevOssOptions  (Since: 4.0)
Options of the OSS audio backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBin\fP (\fI\%AudiodevOssPerDirectionOptions\fP, \fIoptional\fP) \-\- options of the capture stream
.IP \(bu 2
\fBout\fP (\fI\%AudiodevOssPerDirectionOptions\fP, \fIoptional\fP) \-\- options of the playback stream
.IP \(bu 2
\fBtry\-mmap\fP (\fBboolean\fP, \fIoptional\fP) \-\- try using memory\-mapped access, falling back to
non\-memory\-mapped access on failure (default true)
.IP \(bu 2
\fBexclusive\fP (\fBboolean\fP, \fIoptional\fP) \-\- open device in exclusive mode (vmix won\(aqt work) (default
false)
.IP \(bu 2
\fBdsp\-policy\fP (\fBint\fP, \fIoptional\fP) \-\- set the timing policy of the device (between 0 and 10,
where smaller number means smaller latency but higher CPU usage)
or \-1 to use fragment mode (option ignored on some platforms)
(default 5)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AudiodevPaPerDirectionOptions  (Since: 4.0)
Options of the Pulseaudio backend that are used for both playback
and recording.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP, \fIoptional\fP) \-\- name of the sink/source to use
.IP \(bu 2
\fBstream\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- name of the PulseAudio stream created by qemu.  Can be
used to identify the stream in PulseAudio when you create
multiple PulseAudio devices or run multiple qemu instances
(default: audiodev\(aqs id, since 4.2)
.IP \(bu 2
\fBlatency\fP (\fBint\fP, \fIoptional\fP) \-\- latency you want PulseAudio to achieve in microseconds
(default 15000)
.IP \(bu 2
The members of \fI\%AudiodevPerDirectionOptions\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AudiodevPaOptions  (Since: 4.0)
Options of the PulseAudio audio backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBin\fP (\fI\%AudiodevPaPerDirectionOptions\fP, \fIoptional\fP) \-\- options of the capture stream
.IP \(bu 2
\fBout\fP (\fI\%AudiodevPaPerDirectionOptions\fP, \fIoptional\fP) \-\- options of the playback stream
.IP \(bu 2
\fBserver\fP (\fBstring\fP, \fIoptional\fP) \-\- PulseAudio server address (default: let PulseAudio choose)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AudiodevPipewirePerDirectionOptions  (Since: 8.1)
Options of the PipeWire backend that are used for both playback and
recording.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP, \fIoptional\fP) \-\- name of the sink/source to use
.IP \(bu 2
\fBstream\-name\fP (\fBstring\fP, \fIoptional\fP) \-\- name of the PipeWire stream created by qemu.  Can be
used to identify the stream in PipeWire when you create multiple
PipeWire devices or run multiple qemu instances (default:
audiodev\(aqs id)
.IP \(bu 2
\fBlatency\fP (\fBint\fP, \fIoptional\fP) \-\- latency you want PipeWire to achieve in microseconds
(default 46000)
.IP \(bu 2
The members of \fI\%AudiodevPerDirectionOptions\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AudiodevPipewireOptions  (Since: 8.1)
Options of the PipeWire audio backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBin\fP (\fI\%AudiodevPipewirePerDirectionOptions\fP, \fIoptional\fP) \-\- options of the capture stream
.IP \(bu 2
\fBout\fP (\fI\%AudiodevPipewirePerDirectionOptions\fP, \fIoptional\fP) \-\- options of the playback stream
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AudiodevSdlPerDirectionOptions  (Since: 6.0)
Options of the SDL audio backend that are used for both playback and
recording.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBbuffer\-count\fP (\fBint\fP, \fIoptional\fP) \-\- number of buffers (default 4)
.IP \(bu 2
The members of \fI\%AudiodevPerDirectionOptions\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AudiodevSdlOptions  (Since: 6.0)
Options of the SDL audio backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBin\fP (\fI\%AudiodevSdlPerDirectionOptions\fP, \fIoptional\fP) \-\- options of the recording stream
.IP \(bu 2
\fBout\fP (\fI\%AudiodevSdlPerDirectionOptions\fP, \fIoptional\fP) \-\- options of the playback stream
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  AudiodevWavOptions  (Since: 4.0)
Options of the wav audio backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBin\fP (\fI\%AudiodevPerDirectionOptions\fP, \fIoptional\fP) \-\- options of the capture stream
.IP \(bu 2
\fBout\fP (\fI\%AudiodevPerDirectionOptions\fP, \fIoptional\fP) \-\- options of the playback stream
.IP \(bu 2
\fBpath\fP (\fBstring\fP, \fIoptional\fP) \-\- name of the wav file to record (default \(aqqemu.wav\(aq)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  AudioFormat  (Since: 4.0)
An enumeration of possible audio formats.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBu8\fP \-\- unsigned 8 bit integer
.IP \(bu 2
\fBs8\fP \-\- signed 8 bit integer
.IP \(bu 2
\fBu16\fP \-\- unsigned 16 bit integer
.IP \(bu 2
\fBs16\fP \-\- signed 16 bit integer
.IP \(bu 2
\fBu32\fP \-\- unsigned 32 bit integer
.IP \(bu 2
\fBs32\fP \-\- signed 32 bit integer
.IP \(bu 2
\fBf32\fP \-\- single precision floating\-point (since 5.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  AudiodevDriver  (Since: 4.0)
An enumeration of possible audio backend drivers.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBjack\fP \-\- JACK audio backend (since 5.1)
.IP \(bu 2
\fBnone\fP \-\- Not documented
.IP \(bu 2
\fBalsa\fP \-\- Not documented
.IP \(bu 2
\fBcoreaudio\fP \-\- Not documented
.IP \(bu 2
\fBdbus\fP \-\- Not documented
.IP \(bu 2
\fBdsound\fP \-\- Not documented
.IP \(bu 2
\fBoss\fP \-\- Not documented
.IP \(bu 2
\fBpa\fP \-\- Not documented
.IP \(bu 2
\fBpipewire\fP \-\- Not documented
.IP \(bu 2
\fBsdl\fP \-\- Not documented
.IP \(bu 2
\fBsndio\fP \-\- Not documented
.IP \(bu 2
\fBspice\fP \-\- Not documented
.IP \(bu 2
\fBwav\fP \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  Audiodev  (Since: 4.0)
Options of an audio backend.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- identifier of the backend
.IP \(bu 2
\fBdriver\fP (\fI\%AudiodevDriver\fP) \-\- the backend driver to use
.IP \(bu 2
\fBtimer\-period\fP (\fBint\fP, \fIoptional\fP) \-\- timer period (in microseconds, 0: use lowest
possible)
.IP \(bu 2
When \fBdriver\fP is \fBnone\fP: The members of \fI\%AudiodevGenericOptions\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBalsa\fP: The members of \fI\%AudiodevAlsaOptions\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBcoreaudio\fP: The members of \fI\%AudiodevCoreaudioOptions\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBdbus\fP: The members of \fI\%AudiodevDBusOptions\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBdsound\fP: The members of \fI\%AudiodevDsoundOptions\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBjack\fP: The members of \fI\%AudiodevJackOptions\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBoss\fP: The members of \fI\%AudiodevOssOptions\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBpa\fP: The members of \fI\%AudiodevPaOptions\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBpipewire\fP: The members of \fI\%AudiodevPipewireOptions\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBsdl\fP: The members of \fI\%AudiodevSdlOptions\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBsndio\fP: The members of \fI\%AudiodevSndioOptions\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBspice\fP: The members of \fI\%AudiodevGenericOptions\fP\&.
.IP \(bu 2
When \fBdriver\fP is \fBwav\fP: The members of \fI\%AudiodevWavOptions\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-audiodevs  (Since: 8.0)
Return information about audiodev configuration
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%Audiodev\fP\fB]\fP \-\- array of \fBAudiodev\fP
.UNINDENT
.UNINDENT
.SH ACPI
.INDENT 0.0
.TP
.B Object  AcpiTableOptions  (Since: 1.5)
Specify an ACPI table on the command line to load.
.sp
At most one of \fBfile\fP and \fBdata\fP can be specified.  The list of files
specified by any one of them is loaded and concatenated in order.
If both are omitted, \fBdata\fP is implied.
.sp
Other fields / optargs can be used to override fields of the generic
ACPI table header; refer to the ACPI specification 5.0, section
5.2.6 System Description Table Header.  If a header field is not
overridden, then the corresponding value from the concatenated blob
is used (in case of \fBfile\fP), or it is filled in with a hard\-coded
value (in case of \fBdata\fP).
.sp
String fields are copied into the matching ACPI member from lowest
address upwards, and silently truncated / NUL\-padded to length.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBsig\fP (\fBstring\fP, \fIoptional\fP) \-\- table signature / identifier (4 bytes)
.IP \(bu 2
\fBrev\fP (\fBint\fP, \fIoptional\fP) \-\- table revision number (dependent on signature, 1 byte)
.IP \(bu 2
\fBoem_id\fP (\fBstring\fP, \fIoptional\fP) \-\- OEM identifier (6 bytes)
.IP \(bu 2
\fBoem_table_id\fP (\fBstring\fP, \fIoptional\fP) \-\- OEM table identifier (8 bytes)
.IP \(bu 2
\fBoem_rev\fP (\fBint\fP, \fIoptional\fP) \-\- OEM\-supplied revision number (4 bytes)
.IP \(bu 2
\fBasl_compiler_id\fP (\fBstring\fP, \fIoptional\fP) \-\- identifier of the utility that created the table
(4 bytes)
.IP \(bu 2
\fBasl_compiler_rev\fP (\fBint\fP, \fIoptional\fP) \-\- revision number of the utility that created the
table (4 bytes)
.IP \(bu 2
\fBfile\fP (\fBstring\fP, \fIoptional\fP) \-\- colon (:) separated list of pathnames to load and concatenate
as table data.  The resultant binary blob is expected to have an
ACPI table header.  At least one file is required.  This field
excludes \fBdata\fP\&.
.IP \(bu 2
\fBdata\fP (\fBstring\fP, \fIoptional\fP) \-\- colon (:) separated list of pathnames to load and concatenate
as table data.  The resultant binary blob must not have an ACPI
table header.  At least one file is required.  This field
excludes \fBfile\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  ACPISlotType
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBDIMM\fP \-\- memory slot
.IP \(bu 2
\fBCPU\fP \-\- logical CPU slot (since 2.7)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  ACPIOSTInfo  (Since: 2.1)
OSPM Status Indication for a device For description of possible
values of \fBsource\fP and \fBstatus\fP fields see \(dq_OST (OSPM Status
Indication)\(dq chapter of ACPI5.0 spec.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBstring\fP, \fIoptional\fP) \-\- device ID associated with slot
.IP \(bu 2
\fBslot\fP (\fBstring\fP) \-\- slot ID, unique per slot of a given \fBslot\-type\fP
.IP \(bu 2
\fBslot\-type\fP (\fI\%ACPISlotType\fP) \-\- type of the slot
.IP \(bu 2
\fBsource\fP (\fBint\fP) \-\- an integer containing the source event
.IP \(bu 2
\fBstatus\fP (\fBint\fP) \-\- an integer containing the status code
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-acpi\-ospm\-status  (Since: 2.1)
Return a list of ACPIOSTInfo for devices that support status
reporting via ACPI _OST method.
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-acpi\-ospm\-status\(dq }
<\- { \(dqreturn\(dq: [ { \(dqdevice\(dq: \(dqd1\(dq, \(dqslot\(dq: \(dq0\(dq, \(dqslot\-type\(dq: \(dqDIMM\(dq, \(dqsource\(dq: 1, \(dqstatus\(dq: 0},
                 { \(dqslot\(dq: \(dq1\(dq, \(dqslot\-type\(dq: \(dqDIMM\(dq, \(dqsource\(dq: 0, \(dqstatus\(dq: 0},
                 { \(dqslot\(dq: \(dq2\(dq, \(dqslot\-type\(dq: \(dqDIMM\(dq, \(dqsource\(dq: 0, \(dqstatus\(dq: 0},
                 { \(dqslot\(dq: \(dq3\(dq, \(dqslot\-type\(dq: \(dqDIMM\(dq, \(dqsource\(dq: 0, \(dqstatus\(dq: 0}
   ]}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  ACPI_DEVICE_OST  (Since: 2.1)
Emitted when guest executes ACPI _OST method.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBinfo\fP (\fI\%ACPIOSTInfo\fP) \-\- OSPM Status Indication
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqevent\(dq: \(dqACPI_DEVICE_OST\(dq,
     \(dqdata\(dq: { \(dqinfo\(dq: { \(dqdevice\(dq: \(dqd1\(dq, \(dqslot\(dq: \(dq0\(dq,
                         \(dqslot\-type\(dq: \(dqDIMM\(dq, \(dqsource\(dq: 1, \(dqstatus\(dq: 0 } },
     \(dqtimestamp\(dq: { \(dqseconds\(dq: 1265044230, \(dqmicroseconds\(dq: 450486 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH PCI
.INDENT 0.0
.TP
.B Object  PciMemoryRange  (Since: 0.14)
A PCI device memory region
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBbase\fP (\fBint\fP) \-\- the starting address (guest physical)
.IP \(bu 2
\fBlimit\fP (\fBint\fP) \-\- the ending address (guest physical)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  PciMemoryRegion  (Since: 0.14)
Information about a PCI device I/O region.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBbar\fP (\fBint\fP) \-\- the index of the Base Address Register for this region
.IP \(bu 2
\fBtype\fP (\fBstring\fP) \-\- .INDENT 2.0
.IP \(bu 2
\(aqio\(aq if the region is a PIO region
.IP \(bu 2
\(aqmemory\(aq if the region is a MMIO region
.UNINDENT

.IP \(bu 2
\fBaddress\fP (\fBint\fP) \-\- memory address
.IP \(bu 2
\fBsize\fP (\fBint\fP) \-\- memory size
.IP \(bu 2
\fBprefetch\fP (\fBboolean\fP, \fIoptional\fP) \-\- if \fBtype\fP is \(aqmemory\(aq, true if the memory is prefetchable
.IP \(bu 2
\fBmem_type_64\fP (\fBboolean\fP, \fIoptional\fP) \-\- if \fBtype\fP is \(aqmemory\(aq, true if the BAR is 64\-bit
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  PciBusInfo  (Since: 2.4)
Information about a bus of a PCI Bridge device
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBnumber\fP (\fBint\fP) \-\- primary bus interface number.  This should be the number of
the bus the device resides on.
.IP \(bu 2
\fBsecondary\fP (\fBint\fP) \-\- secondary bus interface number.  This is the number of
the main bus for the bridge
.IP \(bu 2
\fBsubordinate\fP (\fBint\fP) \-\- This is the highest number bus that resides below the
bridge.
.IP \(bu 2
\fBio_range\fP (\fI\%PciMemoryRange\fP) \-\- The PIO range for all devices on this bridge
.IP \(bu 2
\fBmemory_range\fP (\fI\%PciMemoryRange\fP) \-\- The MMIO range for all devices on this bridge
.IP \(bu 2
\fBprefetchable_range\fP (\fI\%PciMemoryRange\fP) \-\- The range of prefetchable MMIO for all devices
on this bridge
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  PciBridgeInfo  (Since: 0.14)
Information about a PCI Bridge device
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBbus\fP (\fI\%PciBusInfo\fP) \-\- information about the bus the device resides on
.IP \(bu 2
\fBdevices\fP (\fB[\fP\fI\%PciDeviceInfo\fP\fB]\fP, \fIoptional\fP) \-\- a list of \fBPciDeviceInfo\fP for each device on this bridge
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  PciDeviceClass  (Since: 2.4)
Information about the Class of a PCI device
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdesc\fP (\fBstring\fP, \fIoptional\fP) \-\- a string description of the device\(aqs class (not stable, and
should only be treated as informational)
.IP \(bu 2
\fBclass\fP (\fBint\fP) \-\- the class code of the device
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  PciDeviceId  (Since: 2.4)
Information about the Id of a PCI device
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fBint\fP) \-\- the PCI device id
.IP \(bu 2
\fBvendor\fP (\fBint\fP) \-\- the PCI vendor id
.IP \(bu 2
\fBsubsystem\fP (\fBint\fP, \fIoptional\fP) \-\- the PCI subsystem id (since 3.1)
.IP \(bu 2
\fBsubsystem\-vendor\fP (\fBint\fP, \fIoptional\fP) \-\- the PCI subsystem vendor id (since 3.1)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  PciDeviceInfo  (Since: 0.14)
Information about a PCI device
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBbus\fP (\fBint\fP) \-\- the bus number of the device
.IP \(bu 2
\fBslot\fP (\fBint\fP) \-\- the slot the device is located in
.IP \(bu 2
\fBfunction\fP (\fBint\fP) \-\- the function of the slot used by the device
.IP \(bu 2
\fBclass_info\fP (\fI\%PciDeviceClass\fP) \-\- the class of the device
.IP \(bu 2
\fBid\fP (\fI\%PciDeviceId\fP) \-\- the PCI device id
.IP \(bu 2
\fBirq\fP (\fBint\fP, \fIoptional\fP) \-\- if an IRQ is assigned to the device, the IRQ number
.IP \(bu 2
\fBirq_pin\fP (\fBint\fP) \-\- the IRQ pin, zero means no IRQ (since 5.1)
.IP \(bu 2
\fBqdev_id\fP (\fBstring\fP) \-\- the device name of the PCI device
.IP \(bu 2
\fBpci_bridge\fP (\fI\%PciBridgeInfo\fP, \fIoptional\fP) \-\- if the device is a PCI bridge, the bridge information
.IP \(bu 2
\fBregions\fP (\fB[\fP\fI\%PciMemoryRegion\fP\fB]\fP) \-\- a list of the PCI I/O regions associated with the device
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  PciInfo  (Since: 0.14)
Information about a PCI bus
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBbus\fP (\fBint\fP) \-\- the bus index
.IP \(bu 2
\fBdevices\fP (\fB[\fP\fI\%PciDeviceInfo\fP\fB]\fP) \-\- a list of devices on this bus
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-pci  (Since: 0.14)
Return information about the PCI bus topology of the guest.
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%PciInfo\fP\fB]\fP \-\- a list of \fBPciInfo\fP for each PCI bus.  Each bus is
represented by a json\-object, which has a key with a json\-array
of all PCI devices attached to it.  Each device is represented
by a json\-object.
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqquery\-pci\(dq }
<\- { \(dqreturn\(dq: [
         {
            \(dqbus\(dq: 0,
            \(dqdevices\(dq: [
               {
                  \(dqbus\(dq: 0,
                  \(dqqdev_id\(dq: \(dq\(dq,
                  \(dqslot\(dq: 0,
                  \(dqclass_info\(dq: {
                     \(dqclass\(dq: 1536,
                     \(dqdesc\(dq: \(dqHost bridge\(dq
                  },
                  \(dqid\(dq: {
                     \(dqdevice\(dq: 32902,
                     \(dqvendor\(dq: 4663
                  },
                  \(dqfunction\(dq: 0,
                  \(dqregions\(dq: [
                  ]
               },
               {
                  \(dqbus\(dq: 0,
                  \(dqqdev_id\(dq: \(dq\(dq,
                  \(dqslot\(dq: 1,
                  \(dqclass_info\(dq: {
                     \(dqclass\(dq: 1537,
                     \(dqdesc\(dq: \(dqISA bridge\(dq
                  },
                  \(dqid\(dq: {
                     \(dqdevice\(dq: 32902,
                     \(dqvendor\(dq: 28672
                  },
                  \(dqfunction\(dq: 0,
                  \(dqregions\(dq: [
                  ]
               },
               {
                  \(dqbus\(dq: 0,
                  \(dqqdev_id\(dq: \(dq\(dq,
                  \(dqslot\(dq: 1,
                  \(dqclass_info\(dq: {
                     \(dqclass\(dq: 257,
                     \(dqdesc\(dq: \(dqIDE controller\(dq
                  },
                  \(dqid\(dq: {
                     \(dqdevice\(dq: 32902,
                     \(dqvendor\(dq: 28688
                  },
                  \(dqfunction\(dq: 1,
                  \(dqregions\(dq: [
                     {
                        \(dqbar\(dq: 4,
                        \(dqsize\(dq: 16,
                        \(dqaddress\(dq: 49152,
                        \(dqtype\(dq: \(dqio\(dq
                     }
                  ]
               },
               {
                  \(dqbus\(dq: 0,
                  \(dqqdev_id\(dq: \(dq\(dq,
                  \(dqslot\(dq: 2,
                  \(dqclass_info\(dq: {
                     \(dqclass\(dq: 768,
                     \(dqdesc\(dq: \(dqVGA controller\(dq
                  },
                  \(dqid\(dq: {
                     \(dqdevice\(dq: 4115,
                     \(dqvendor\(dq: 184
                  },
                  \(dqfunction\(dq: 0,
                  \(dqregions\(dq: [
                     {
                        \(dqprefetch\(dq: true,
                        \(dqmem_type_64\(dq: false,
                        \(dqbar\(dq: 0,
                        \(dqsize\(dq: 33554432,
                        \(dqaddress\(dq: 4026531840,
                        \(dqtype\(dq: \(dqmemory\(dq
                     },
                     {
                        \(dqprefetch\(dq: false,
                        \(dqmem_type_64\(dq: false,
                        \(dqbar\(dq: 1,
                        \(dqsize\(dq: 4096,
                        \(dqaddress\(dq: 4060086272,
                        \(dqtype\(dq: \(dqmemory\(dq
                     },
                     {
                        \(dqprefetch\(dq: false,
                        \(dqmem_type_64\(dq: false,
                        \(dqbar\(dq: 6,
                        \(dqsize\(dq: 65536,
                        \(dqaddress\(dq: \-1,
                        \(dqtype\(dq: \(dqmemory\(dq
                     }
                  ]
               },
               {
                  \(dqbus\(dq: 0,
                  \(dqqdev_id\(dq: \(dq\(dq,
                  \(dqirq\(dq: 11,
                  \(dqslot\(dq: 4,
                  \(dqclass_info\(dq: {
                     \(dqclass\(dq: 1280,
                     \(dqdesc\(dq: \(dqRAM controller\(dq
                  },
                  \(dqid\(dq: {
                     \(dqdevice\(dq: 6900,
                     \(dqvendor\(dq: 4098
                  },
                  \(dqfunction\(dq: 0,
                  \(dqregions\(dq: [
                     {
                        \(dqbar\(dq: 0,
                        \(dqsize\(dq: 32,
                        \(dqaddress\(dq: 49280,
                        \(dqtype\(dq: \(dqio\(dq
                     }
                  ]
               }
            ]
         }
      ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
This example has been shortened as the real response is too long.
.UNINDENT
.SH STATISTICS
.INDENT 0.0
.TP
.B Enum  StatsType  (Since: 7.1)
Enumeration of statistics types
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBcumulative\fP \-\- stat is cumulative; value can only increase.
.IP \(bu 2
\fBinstant\fP \-\- stat is instantaneous; value can increase or decrease.
.IP \(bu 2
\fBpeak\fP \-\- stat is the peak value; value can only increase.
.IP \(bu 2
\fBlinear\-histogram\fP \-\- stat is a linear histogram.
.IP \(bu 2
\fBlog2\-histogram\fP \-\- stat is a logarithmic histogram, with one bucket
for each power of two.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  StatsUnit  (Since: 7.1)
Enumeration of unit of measurement for statistics
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBbytes\fP \-\- stat reported in bytes.
.IP \(bu 2
\fBseconds\fP \-\- stat reported in seconds.
.IP \(bu 2
\fBcycles\fP \-\- stat reported in clock cycles.
.IP \(bu 2
\fBboolean\fP \-\- stat is a boolean value.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  StatsProvider  (Since: 7.1)
Enumeration of statistics providers.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBkvm\fP \-\- since 7.1
.IP \(bu 2
\fBcryptodev\fP \-\- since 8.0
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  StatsTarget  (Since: 7.1)
The kinds of objects on which one can request statistics.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBvm\fP \-\- statistics that apply to the entire virtual machine or the
entire QEMU process.
.IP \(bu 2
\fBvcpu\fP \-\- statistics that apply to a single virtual CPU.
.IP \(bu 2
\fBcryptodev\fP \-\- statistics that apply to a crypto device (since 8.0)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  StatsRequest  (Since: 7.1)
Indicates a set of statistics that should be returned by
query\-stats.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBprovider\fP (\fI\%StatsProvider\fP) \-\- provider for which to return statistics.
.IP \(bu 2
\fBnames\fP (\fB[\fP\fBstring\fP\fB]\fP, \fIoptional\fP) \-\- statistics to be returned (all if omitted).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  StatsVCPUFilter  (Since: 7.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBvcpus\fP (\fB[\fP\fBstring\fP\fB]\fP, \fIoptional\fP) \-\- list of QOM paths for the desired vCPU objects.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  StatsFilter  (Since: 7.1)
The arguments to the query\-stats command; specifies a target for
which to request statistics and optionally the required subset of
information for that target.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtarget\fP (\fI\%StatsTarget\fP) \-\- the kind of objects to query.  Note that each possible
target may enable additional filtering options
.IP \(bu 2
\fBproviders\fP (\fB[\fP\fI\%StatsRequest\fP\fB]\fP, \fIoptional\fP) \-\- which providers to request statistics from, and
optionally which named values to return within each provider
.IP \(bu 2
When \fBtarget\fP is \fBvcpu\fP: The members of \fI\%StatsVCPUFilter\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Alternate  StatsValue  (Since: 7.1)
.INDENT 7.0
.TP
.B Alternatives
.INDENT 7.0
.IP \(bu 2
\fBscalar\fP (\fBint\fP) \-\- single unsigned 64\-bit integers.
.IP \(bu 2
\fBboolean\fP (\fBboolean\fP) \-\- single boolean value.
.IP \(bu 2
\fBlist\fP (\fB[\fP\fBint\fP\fB]\fP) \-\- list of unsigned 64\-bit integers (used for histograms).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  Stats  (Since: 7.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- name of stat.
.IP \(bu 2
\fBvalue\fP (\fI\%StatsValue\fP) \-\- stat value.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  StatsResult  (Since: 7.1)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBprovider\fP (\fI\%StatsProvider\fP) \-\- provider for this set of statistics.
.IP \(bu 2
\fBqom\-path\fP (\fBstring\fP, \fIoptional\fP) \-\- Path to the object for which the statistics are returned,
if the object is exposed in the QOM tree
.IP \(bu 2
\fBstats\fP (\fB[\fP\fI\%Stats\fP\fB]\fP) \-\- list of statistics.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-stats  (Since: 7.1)
Return runtime\-collected statistics for objects such as the VM or
its vCPUs.
.sp
The arguments are a StatsFilter and specify the provider and objects
to return statistics about.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
The members of \fI\%StatsFilter\fP\&.
.UNINDENT
.TP
.B Return
\fB[\fP\fI\%StatsResult\fP\fB]\fP \-\- a list of StatsResult, one for each provider and object
(e.g., for each vCPU).
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  StatsSchemaValue  (Since: 7.1)
Schema for a single statistic.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- name of the statistic; each element of the schema is uniquely
identified by a target, a provider (both available in
\fBStatsSchema\fP) and the name.
.IP \(bu 2
\fBtype\fP (\fI\%StatsType\fP) \-\- kind of statistic.
.IP \(bu 2
\fBunit\fP (\fI\%StatsUnit\fP, \fIoptional\fP) \-\- basic unit of measure for the statistic; if missing, the
statistic is a simple number or counter.
.IP \(bu 2
\fBbase\fP (\fBint\fP, \fIoptional\fP) \-\- base for the multiple of \fBunit\fP in which the statistic is
measured.  Only present if \fBexponent\fP is non\-zero; \fBbase\fP and
\fBexponent\fP together form a SI prefix (e.g., _nano\-_ for
\fBbase=10\fP and \fBexponent=\-9\fP) or IEC binary prefix (e.g.
_kibi\-_ for \fBbase=2\fP and \fBexponent=10\fP)
.IP \(bu 2
\fBexponent\fP (\fBint\fP) \-\- exponent for the multiple of \fBunit\fP in which the statistic
is expressed, or 0 for the basic unit
.IP \(bu 2
\fBbucket\-size\fP (\fBint\fP, \fIoptional\fP) \-\- Present when \fBtype\fP is \(dqlinear\-histogram\(dq, contains the
width of each bucket of the histogram.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  StatsSchema  (Since: 7.1)
Schema for all available statistics for a provider and target.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBprovider\fP (\fI\%StatsProvider\fP) \-\- provider for this set of statistics.
.IP \(bu 2
\fBtarget\fP (\fI\%StatsTarget\fP) \-\- the kind of object that can be queried through the
provider.
.IP \(bu 2
\fBstats\fP (\fB[\fP\fI\%StatsSchemaValue\fP\fB]\fP) \-\- list of statistics.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-stats\-schemas  (Since: 7.1)
Return the schema for all available runtime\-collected statistics.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBprovider\fP (\fI\%StatsProvider\fP, \fIoptional\fP) \-\- a provider to restrict the query to.
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
Runtime\-collected statistics and their names fall outside
QEMU\(aqs usual deprecation policies.  QEMU will try to keep the set
of available data stable, together with their names, but will not
guarantee stability at all costs; the same is true of providers
that source statistics externally, e.g. from Linux.  For example,
if the same value is being tracked with different names on
different architectures or by different providers, one of them
might be renamed.  A statistic might go away if an algorithm is
changed or some code is removed; changing a default might cause
previously useful statistics to always report 0.  Such changes,
however, are expected to be rare.
.UNINDENT
.UNINDENT
.UNINDENT
.SH VIRTIO DEVICES
.INDENT 0.0
.TP
.B Object  VirtioInfo  (Since: 7.2)
Basic information about a given VirtIODevice
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- The VirtIODevice\(aqs canonical QOM path
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- Name of the VirtIODevice
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-query\-virtio  (Since: 7.2)
This command is unstable/experimental.
.sp
Return a list of all realized VirtIODevices
.INDENT 7.0
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is meant for debugging.
.UNINDENT
.TP
.B Return
\fB[\fP\fI\%VirtioInfo\fP\fB]\fP \-\- List of gathered VirtIODevices
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqx\-query\-virtio\(dq }
<\- { \(dqreturn\(dq: [
         {
             \(dqname\(dq: \(dqvirtio\-input\(dq,
             \(dqpath\(dq: \(dq/machine/peripheral\-anon/device[4]/virtio\-backend\(dq
         },
         {
             \(dqname\(dq: \(dqvirtio\-crypto\(dq,
             \(dqpath\(dq: \(dq/machine/peripheral/crypto0/virtio\-backend\(dq
         },
         {
             \(dqname\(dq: \(dqvirtio\-scsi\(dq,
             \(dqpath\(dq: \(dq/machine/peripheral\-anon/device[2]/virtio\-backend\(dq
         },
         {
             \(dqname\(dq: \(dqvirtio\-net\(dq,
             \(dqpath\(dq: \(dq/machine/peripheral\-anon/device[1]/virtio\-backend\(dq
         },
         {
             \(dqname\(dq: \(dqvirtio\-serial\(dq,
             \(dqpath\(dq: \(dq/machine/peripheral\-anon/device[0]/virtio\-backend\(dq
         }
     ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VhostStatus  (Since: 7.2)
Information about a vhost device.  This information will only be
displayed if the vhost device is active.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBn\-mem\-sections\fP (\fBint\fP) \-\- vhost_dev n_mem_sections
.IP \(bu 2
\fBn\-tmp\-sections\fP (\fBint\fP) \-\- vhost_dev n_tmp_sections
.IP \(bu 2
\fBnvqs\fP (\fBint\fP) \-\- vhost_dev nvqs (number of virtqueues being used)
.IP \(bu 2
\fBvq\-index\fP (\fBint\fP) \-\- vhost_dev vq_index
.IP \(bu 2
\fBfeatures\fP (\fI\%VirtioDeviceFeatures\fP) \-\- vhost_dev features
.IP \(bu 2
\fBacked\-features\fP (\fI\%VirtioDeviceFeatures\fP) \-\- vhost_dev acked_features
.IP \(bu 2
\fBbackend\-features\fP (\fI\%VirtioDeviceFeatures\fP) \-\- vhost_dev backend_features
.IP \(bu 2
\fBprotocol\-features\fP (\fI\%VhostDeviceProtocols\fP) \-\- vhost_dev protocol_features
.IP \(bu 2
\fBmax\-queues\fP (\fBint\fP) \-\- vhost_dev max_queues
.IP \(bu 2
\fBbackend\-cap\fP (\fBint\fP) \-\- vhost_dev backend_cap
.IP \(bu 2
\fBlog\-enabled\fP (\fBboolean\fP) \-\- vhost_dev log_enabled flag
.IP \(bu 2
\fBlog\-size\fP (\fBint\fP) \-\- vhost_dev log_size
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VirtioStatus  (Since: 7.2)
Full status of the virtio device with most VirtIODevice members.
Also includes the full status of the corresponding vhost device if
the vhost device is active.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- VirtIODevice name
.IP \(bu 2
\fBdevice\-id\fP (\fBint\fP) \-\- VirtIODevice ID
.IP \(bu 2
\fBvhost\-started\fP (\fBboolean\fP) \-\- VirtIODevice vhost_started flag
.IP \(bu 2
\fBguest\-features\fP (\fI\%VirtioDeviceFeatures\fP) \-\- VirtIODevice guest_features
.IP \(bu 2
\fBhost\-features\fP (\fI\%VirtioDeviceFeatures\fP) \-\- VirtIODevice host_features
.IP \(bu 2
\fBbackend\-features\fP (\fI\%VirtioDeviceFeatures\fP) \-\- VirtIODevice backend_features
.IP \(bu 2
\fBdevice\-endian\fP (\fBstring\fP) \-\- VirtIODevice device_endian
.IP \(bu 2
\fBnum\-vqs\fP (\fBint\fP) \-\- VirtIODevice virtqueue count.  This is the number of
active virtqueues being used by the VirtIODevice.
.IP \(bu 2
\fBstatus\fP (\fI\%VirtioDeviceStatus\fP) \-\- VirtIODevice configuration status (VirtioDeviceStatus)
.IP \(bu 2
\fBisr\fP (\fBint\fP) \-\- VirtIODevice ISR
.IP \(bu 2
\fBqueue\-sel\fP (\fBint\fP) \-\- VirtIODevice queue_sel
.IP \(bu 2
\fBvm\-running\fP (\fBboolean\fP) \-\- VirtIODevice vm_running flag
.IP \(bu 2
\fBbroken\fP (\fBboolean\fP) \-\- VirtIODevice broken flag
.IP \(bu 2
\fBdisabled\fP (\fBboolean\fP) \-\- VirtIODevice disabled flag
.IP \(bu 2
\fBuse\-started\fP (\fBboolean\fP) \-\- VirtIODevice use_started flag
.IP \(bu 2
\fBstarted\fP (\fBboolean\fP) \-\- VirtIODevice started flag
.IP \(bu 2
\fBstart\-on\-kick\fP (\fBboolean\fP) \-\- VirtIODevice start_on_kick flag
.IP \(bu 2
\fBdisable\-legacy\-check\fP (\fBboolean\fP) \-\- VirtIODevice disabled_legacy_check flag
.IP \(bu 2
\fBbus\-name\fP (\fBstring\fP) \-\- VirtIODevice bus_name
.IP \(bu 2
\fBuse\-guest\-notifier\-mask\fP (\fBboolean\fP) \-\- VirtIODevice use_guest_notifier_mask flag
.IP \(bu 2
\fBvhost\-dev\fP (\fI\%VhostStatus\fP, \fIoptional\fP) \-\- Corresponding vhost device info for a given
VirtIODevice.  Present if the given VirtIODevice has an active
vhost device.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-query\-virtio\-status  (Since: 7.2)
This command is unstable/experimental.
.sp
Poll for a comprehensive status of a given virtio device
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- Canonical QOM path of the VirtIODevice
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is meant for debugging.
.UNINDENT
.TP
.B Return
\fI\%VirtioStatus\fP \-\- VirtioStatus of the virtio device
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.sp
Poll for the status of virtio\-crypto (no vhost\-crypto active)
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqx\-query\-virtio\-status\(dq,
     \(dqarguments\(dq: { \(dqpath\(dq: \(dq/machine/peripheral/crypto0/virtio\-backend\(dq }
   }
<\- { \(dqreturn\(dq: {
         \(dqdevice\-endian\(dq: \(dqlittle\(dq,
         \(dqbus\-name\(dq: \(dq\(dq,
         \(dqdisable\-legacy\-check\(dq: false,
         \(dqname\(dq: \(dqvirtio\-crypto\(dq,
         \(dqstarted\(dq: true,
         \(dqdevice\-id\(dq: 20,
         \(dqbackend\-features\(dq: {
             \(dqtransports\(dq: [],
             \(dqdev\-features\(dq: []
         },
         \(dqstart\-on\-kick\(dq: false,
         \(dqisr\(dq: 1,
         \(dqbroken\(dq: false,
         \(dqstatus\(dq: {
             \(dqstatuses\(dq: [
                 \(dqVIRTIO_CONFIG_S_ACKNOWLEDGE: Valid virtio device found\(dq,
                 \(dqVIRTIO_CONFIG_S_DRIVER: Guest OS compatible with device\(dq,
                 \(dqVIRTIO_CONFIG_S_FEATURES_OK: Feature negotiation complete\(dq,
                 \(dqVIRTIO_CONFIG_S_DRIVER_OK: Driver setup and ready\(dq
             ]
         },
         \(dqnum\-vqs\(dq: 2,
         \(dqguest\-features\(dq: {
             \(dqdev\-features\(dq: [],
             \(dqtransports\(dq: [
                 \(dqVIRTIO_RING_F_EVENT_IDX: Used & avail. event fields enabled\(dq,
                 \(dqVIRTIO_RING_F_INDIRECT_DESC: Indirect descriptors supported\(dq,
                 \(dqVIRTIO_F_VERSION_1: Device compliant for v1 spec (legacy)\(dq
             ]
         },
         \(dqhost\-features\(dq: {
             \(dqunknown\-dev\-features\(dq: 1073741824,
             \(dqdev\-features\(dq: [],
             \(dqtransports\(dq: [
                 \(dqVIRTIO_RING_F_EVENT_IDX: Used & avail. event fields enabled\(dq,
                 \(dqVIRTIO_RING_F_INDIRECT_DESC: Indirect descriptors supported\(dq,
                 \(dqVIRTIO_F_VERSION_1: Device compliant for v1 spec (legacy)\(dq,
                 \(dqVIRTIO_F_ANY_LAYOUT: Device accepts arbitrary desc. layouts\(dq,
                 \(dqVIRTIO_F_NOTIFY_ON_EMPTY: Notify when device runs out of avail. descs. on VQ\(dq
             ]
         },
         \(dquse\-guest\-notifier\-mask\(dq: true,
         \(dqvm\-running\(dq: true,
         \(dqqueue\-sel\(dq: 1,
         \(dqdisabled\(dq: false,
         \(dqvhost\-started\(dq: false,
         \(dquse\-started\(dq: true
     }
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.sp
Poll for the status of virtio\-net (vhost\-net is active)
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqx\-query\-virtio\-status\(dq,
     \(dqarguments\(dq: { \(dqpath\(dq: \(dq/machine/peripheral\-anon/device[1]/virtio\-backend\(dq }
   }
<\- { \(dqreturn\(dq: {
         \(dqdevice\-endian\(dq: \(dqlittle\(dq,
         \(dqbus\-name\(dq: \(dq\(dq,
         \(dqdisabled\-legacy\-check\(dq: false,
         \(dqname\(dq: \(dqvirtio\-net\(dq,
         \(dqstarted\(dq: true,
         \(dqdevice\-id\(dq: 1,
         \(dqvhost\-dev\(dq: {
             \(dqn\-tmp\-sections\(dq: 4,
             \(dqn\-mem\-sections\(dq: 4,
             \(dqmax\-queues\(dq: 1,
             \(dqbackend\-cap\(dq: 2,
             \(dqlog\-size\(dq: 0,
             \(dqbackend\-features\(dq: {
                 \(dqdev\-features\(dq: [],
                 \(dqtransports\(dq: []
             },
             \(dqnvqs\(dq: 2,
             \(dqprotocol\-features\(dq: {
                 \(dqprotocols\(dq: []
             },
             \(dqvq\-index\(dq: 0,
             \(dqlog\-enabled\(dq: false,
             \(dqacked\-features\(dq: {
                 \(dqdev\-features\(dq: [
                     \(dqVIRTIO_NET_F_MRG_RXBUF: Driver can merge receive buffers\(dq
                 ],
                 \(dqtransports\(dq: [
                     \(dqVIRTIO_RING_F_EVENT_IDX: Used & avail. event fields enabled\(dq,
                     \(dqVIRTIO_RING_F_INDIRECT_DESC: Indirect descriptors supported\(dq,
                     \(dqVIRTIO_F_VERSION_1: Device compliant for v1 spec (legacy)\(dq
                 ]
             },
             \(dqfeatures\(dq: {
                 \(dqdev\-features\(dq: [
                     \(dqVHOST_F_LOG_ALL: Logging write descriptors supported\(dq,
                     \(dqVIRTIO_NET_F_MRG_RXBUF: Driver can merge receive buffers\(dq
                 ],
                 \(dqtransports\(dq: [
                     \(dqVIRTIO_RING_F_EVENT_IDX: Used & avail. event fields enabled\(dq,
                     \(dqVIRTIO_RING_F_INDIRECT_DESC: Indirect descriptors supported\(dq,
                     \(dqVIRTIO_F_IOMMU_PLATFORM: Device can be used on IOMMU platform\(dq,
                     \(dqVIRTIO_F_VERSION_1: Device compliant for v1 spec (legacy)\(dq,
                     \(dqVIRTIO_F_ANY_LAYOUT: Device accepts arbitrary desc. layouts\(dq,
                     \(dqVIRTIO_F_NOTIFY_ON_EMPTY: Notify when device runs out of avail. descs. on VQ\(dq
                 ]
             }
         },
         \(dqbackend\-features\(dq: {
             \(dqdev\-features\(dq: [
                 \(dqVHOST_USER_F_PROTOCOL_FEATURES: Vhost\-user protocol features negotiation supported\(dq,
                 \(dqVIRTIO_NET_F_GSO: Handling GSO\-type packets supported\(dq,
                 \(dqVIRTIO_NET_F_CTRL_MAC_ADDR: MAC address set through control channel\(dq,
                 \(dqVIRTIO_NET_F_GUEST_ANNOUNCE: Driver sending gratuitous packets supported\(dq,
                 \(dqVIRTIO_NET_F_CTRL_RX_EXTRA: Extra RX mode control supported\(dq,
                 \(dqVIRTIO_NET_F_CTRL_VLAN: Control channel VLAN filtering supported\(dq,
                 \(dqVIRTIO_NET_F_CTRL_RX: Control channel RX mode supported\(dq,
                 \(dqVIRTIO_NET_F_CTRL_VQ: Control channel available\(dq,
                 \(dqVIRTIO_NET_F_STATUS: Configuration status field available\(dq,
                 \(dqVIRTIO_NET_F_MRG_RXBUF: Driver can merge receive buffers\(dq,
                 \(dqVIRTIO_NET_F_HOST_UFO: Device can receive UFO\(dq,
                 \(dqVIRTIO_NET_F_HOST_ECN: Device can receive TSO with ECN\(dq,
                 \(dqVIRTIO_NET_F_HOST_TSO6: Device can receive TSOv6\(dq,
                 \(dqVIRTIO_NET_F_HOST_TSO4: Device can receive TSOv4\(dq,
                 \(dqVIRTIO_NET_F_GUEST_UFO: Driver can receive UFO\(dq,
                 \(dqVIRTIO_NET_F_GUEST_ECN: Driver can receive TSO with ECN\(dq,
                 \(dqVIRTIO_NET_F_GUEST_TSO6: Driver can receive TSOv6\(dq,
                 \(dqVIRTIO_NET_F_GUEST_TSO4: Driver can receive TSOv4\(dq,
                 \(dqVIRTIO_NET_F_MAC: Device has given MAC address\(dq,
                 \(dqVIRTIO_NET_F_CTRL_GUEST_OFFLOADS: Control channel offloading reconfig. supported\(dq,
                 \(dqVIRTIO_NET_F_GUEST_CSUM: Driver handling packets with partial checksum supported\(dq,
                 \(dqVIRTIO_NET_F_CSUM: Device handling packets with partial checksum supported\(dq
             ],
             \(dqtransports\(dq: [
                 \(dqVIRTIO_RING_F_EVENT_IDX: Used & avail. event fields enabled\(dq,
                 \(dqVIRTIO_RING_F_INDIRECT_DESC: Indirect descriptors supported\(dq,
                 \(dqVIRTIO_F_VERSION_1: Device compliant for v1 spec (legacy)\(dq,
                 \(dqVIRTIO_F_ANY_LAYOUT: Device accepts arbitrary desc. layouts\(dq,
                 \(dqVIRTIO_F_NOTIFY_ON_EMPTY: Notify when device runs out of avail. descs. on VQ\(dq
             ]
         },
         \(dqstart\-on\-kick\(dq: false,
         \(dqisr\(dq: 1,
         \(dqbroken\(dq: false,
         \(dqstatus\(dq: {
             \(dqstatuses\(dq: [
                 \(dqVIRTIO_CONFIG_S_ACKNOWLEDGE: Valid virtio device found\(dq,
                 \(dqVIRTIO_CONFIG_S_DRIVER: Guest OS compatible with device\(dq,
                 \(dqVIRTIO_CONFIG_S_FEATURES_OK: Feature negotiation complete\(dq,
                 \(dqVIRTIO_CONFIG_S_DRIVER_OK: Driver setup and ready\(dq
             ]
         },
         \(dqnum\-vqs\(dq: 3,
         \(dqguest\-features\(dq: {
             \(dqdev\-features\(dq: [
                 \(dqVIRTIO_NET_F_CTRL_MAC_ADDR: MAC address set through control channel\(dq,
                 \(dqVIRTIO_NET_F_GUEST_ANNOUNCE: Driver sending gratuitous packets supported\(dq,
                 \(dqVIRTIO_NET_F_CTRL_VLAN: Control channel VLAN filtering supported\(dq,
                 \(dqVIRTIO_NET_F_CTRL_RX: Control channel RX mode supported\(dq,
                 \(dqVIRTIO_NET_F_CTRL_VQ: Control channel available\(dq,
                 \(dqVIRTIO_NET_F_STATUS: Configuration status field available\(dq,
                 \(dqVIRTIO_NET_F_MRG_RXBUF: Driver can merge receive buffers\(dq,
                 \(dqVIRTIO_NET_F_HOST_UFO: Device can receive UFO\(dq,
                 \(dqVIRTIO_NET_F_HOST_ECN: Device can receive TSO with ECN\(dq,
                 \(dqVIRTIO_NET_F_HOST_TSO6: Device can receive TSOv6\(dq,
                 \(dqVIRTIO_NET_F_HOST_TSO4: Device can receive TSOv4\(dq,
                 \(dqVIRTIO_NET_F_GUEST_UFO: Driver can receive UFO\(dq,
                 \(dqVIRTIO_NET_F_GUEST_ECN: Driver can receive TSO with ECN\(dq,
                 \(dqVIRTIO_NET_F_GUEST_TSO6: Driver can receive TSOv6\(dq,
                 \(dqVIRTIO_NET_F_GUEST_TSO4: Driver can receive TSOv4\(dq,
                 \(dqVIRTIO_NET_F_MAC: Device has given MAC address\(dq,
                 \(dqVIRTIO_NET_F_CTRL_GUEST_OFFLOADS: Control channel offloading reconfig. supported\(dq,
                 \(dqVIRTIO_NET_F_GUEST_CSUM: Driver handling packets with partial checksum supported\(dq,
                 \(dqVIRTIO_NET_F_CSUM: Device handling packets with partial checksum supported\(dq
             ],
             \(dqtransports\(dq: [
                 \(dqVIRTIO_RING_F_EVENT_IDX: Used & avail. event fields enabled\(dq,
                 \(dqVIRTIO_RING_F_INDIRECT_DESC: Indirect descriptors supported\(dq,
                 \(dqVIRTIO_F_VERSION_1: Device compliant for v1 spec (legacy)\(dq
            ]
         },
         \(dqhost\-features\(dq: {
             \(dqdev\-features\(dq: [
                 \(dqVHOST_USER_F_PROTOCOL_FEATURES: Vhost\-user protocol features negotiation supported\(dq,
                 \(dqVIRTIO_NET_F_GSO: Handling GSO\-type packets supported\(dq,
                 \(dqVIRTIO_NET_F_CTRL_MAC_ADDR: MAC address set through control channel\(dq,
                 \(dqVIRTIO_NET_F_GUEST_ANNOUNCE: Driver sending gratuitous packets supported\(dq,
                 \(dqVIRTIO_NET_F_CTRL_RX_EXTRA: Extra RX mode control supported\(dq,
                 \(dqVIRTIO_NET_F_CTRL_VLAN: Control channel VLAN filtering supported\(dq,
                 \(dqVIRTIO_NET_F_CTRL_RX: Control channel RX mode supported\(dq,
                 \(dqVIRTIO_NET_F_CTRL_VQ: Control channel available\(dq,
                 \(dqVIRTIO_NET_F_STATUS: Configuration status field available\(dq,
                 \(dqVIRTIO_NET_F_MRG_RXBUF: Driver can merge receive buffers\(dq,
                 \(dqVIRTIO_NET_F_HOST_UFO: Device can receive UFO\(dq,
                 \(dqVIRTIO_NET_F_HOST_ECN: Device can receive TSO with ECN\(dq,
                 \(dqVIRTIO_NET_F_HOST_TSO6: Device can receive TSOv6\(dq,
                 \(dqVIRTIO_NET_F_HOST_TSO4: Device can receive TSOv4\(dq,
                 \(dqVIRTIO_NET_F_GUEST_UFO: Driver can receive UFO\(dq,
                 \(dqVIRTIO_NET_F_GUEST_ECN: Driver can receive TSO with ECN\(dq,
                 \(dqVIRTIO_NET_F_GUEST_TSO6: Driver can receive TSOv6\(dq,
                 \(dqVIRTIO_NET_F_GUEST_TSO4: Driver can receive TSOv4\(dq,
                 \(dqVIRTIO_NET_F_MAC: Device has given MAC address\(dq,
                 \(dqVIRTIO_NET_F_CTRL_GUEST_OFFLOADS: Control channel offloading reconfig. supported\(dq,
                 \(dqVIRTIO_NET_F_GUEST_CSUM: Driver handling packets with partial checksum supported\(dq,
                 \(dqVIRTIO_NET_F_CSUM: Device handling packets with partial checksum supported\(dq
             ],
             \(dqtransports\(dq: [
                 \(dqVIRTIO_RING_F_EVENT_IDX: Used & avail. event fields enabled\(dq,
                 \(dqVIRTIO_RING_F_INDIRECT_DESC: Indirect descriptors supported\(dq,
                 \(dqVIRTIO_F_VERSION_1: Device compliant for v1 spec (legacy)\(dq,
                 \(dqVIRTIO_F_ANY_LAYOUT: Device accepts arbitrary desc. layouts\(dq,
                 \(dqVIRTIO_F_NOTIFY_ON_EMPTY: Notify when device runs out of avail. descs. on VQ\(dq
            ]
         },
         \(dquse\-guest\-notifier\-mask\(dq: true,
         \(dqvm\-running\(dq: true,
         \(dqqueue\-sel\(dq: 2,
         \(dqdisabled\(dq: false,
         \(dqvhost\-started\(dq: true,
         \(dquse\-started\(dq: true
     }
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VirtioDeviceStatus  (Since: 7.2)
A structure defined to list the configuration statuses of a virtio
device
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBstatuses\fP (\fB[\fP\fBstring\fP\fB]\fP) \-\- List of decoded configuration statuses of the virtio
device
.IP \(bu 2
\fBunknown\-statuses\fP (\fBint\fP, \fIoptional\fP) \-\- Virtio device statuses bitmap that have not been
decoded
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VhostDeviceProtocols  (Since: 7.2)
A structure defined to list the vhost user protocol features of a
Vhost User device
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBprotocols\fP (\fB[\fP\fBstring\fP\fB]\fP) \-\- List of decoded vhost user protocol features of a vhost
user device
.IP \(bu 2
\fBunknown\-protocols\fP (\fBint\fP, \fIoptional\fP) \-\- Vhost user device protocol features bitmap that
have not been decoded
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VirtioDeviceFeatures  (Since: 7.2)
The common fields that apply to most Virtio devices.  Some devices
may not have their own device\-specific features (e.g. virtio\-rng).
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtransports\fP (\fB[\fP\fBstring\fP\fB]\fP) \-\- List of transport features of the virtio device
.IP \(bu 2
\fBdev\-features\fP (\fB[\fP\fBstring\fP\fB]\fP, \fIoptional\fP) \-\- List of device\-specific features (if the device has
unique features)
.IP \(bu 2
\fBunknown\-dev\-features\fP (\fBint\fP, \fIoptional\fP) \-\- Virtio device features bitmap that have not
been decoded
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VirtQueueStatus  (Since: 7.2)
Information of a VirtIODevice VirtQueue, including most members of
the VirtQueue data structure.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- Name of the VirtIODevice that uses this VirtQueue
.IP \(bu 2
\fBqueue\-index\fP (\fBint\fP) \-\- VirtQueue queue_index
.IP \(bu 2
\fBinuse\fP (\fBint\fP) \-\- VirtQueue inuse
.IP \(bu 2
\fBvring\-num\fP (\fBint\fP) \-\- VirtQueue vring.num
.IP \(bu 2
\fBvring\-num\-default\fP (\fBint\fP) \-\- VirtQueue vring.num_default
.IP \(bu 2
\fBvring\-align\fP (\fBint\fP) \-\- VirtQueue vring.align
.IP \(bu 2
\fBvring\-desc\fP (\fBint\fP) \-\- VirtQueue vring.desc (descriptor area)
.IP \(bu 2
\fBvring\-avail\fP (\fBint\fP) \-\- VirtQueue vring.avail (driver area)
.IP \(bu 2
\fBvring\-used\fP (\fBint\fP) \-\- VirtQueue vring.used (device area)
.IP \(bu 2
\fBlast\-avail\-idx\fP (\fBint\fP, \fIoptional\fP) \-\- VirtQueue last_avail_idx or return of vhost_dev
vhost_get_vring_base (if vhost active)
.IP \(bu 2
\fBshadow\-avail\-idx\fP (\fBint\fP, \fIoptional\fP) \-\- VirtQueue shadow_avail_idx
.IP \(bu 2
\fBused\-idx\fP (\fBint\fP) \-\- VirtQueue used_idx
.IP \(bu 2
\fBsignalled\-used\fP (\fBint\fP) \-\- VirtQueue signalled_used
.IP \(bu 2
\fBsignalled\-used\-valid\fP (\fBboolean\fP) \-\- VirtQueue signalled_used_valid flag
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-query\-virtio\-queue\-status  (Since: 7.2)
This command is unstable/experimental.
.sp
Return the status of a given VirtIODevice\(aqs VirtQueue
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- VirtIODevice canonical QOM path
.IP \(bu 2
\fBqueue\fP (\fBint\fP) \-\- VirtQueue index to examine
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is meant for debugging.
.UNINDENT
.TP
.B Return
\fI\%VirtQueueStatus\fP \-\- VirtQueueStatus of the VirtQueue
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
last_avail_idx will not be displayed in the case where the
selected VirtIODevice has a running vhost device and the
VirtIODevice VirtQueue index (queue) does not exist for the
corresponding vhost device vhost_virtqueue.  Also,
shadow_avail_idx will not be displayed in the case where the
selected VirtIODevice has a running vhost device.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.sp
Get VirtQueueStatus for virtio\-vsock (vhost\-vsock running)
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqx\-query\-virtio\-queue\-status\(dq,
     \(dqarguments\(dq: { \(dqpath\(dq: \(dq/machine/peripheral/vsock0/virtio\-backend\(dq,
                    \(dqqueue\(dq: 1 }
   }
<\- { \(dqreturn\(dq: {
         \(dqsignalled\-used\(dq: 0,
         \(dqinuse\(dq: 0,
         \(dqname\(dq: \(dqvhost\-vsock\(dq,
         \(dqvring\-align\(dq: 4096,
         \(dqvring\-desc\(dq: 5217370112,
         \(dqsignalled\-used\-valid\(dq: false,
         \(dqvring\-num\-default\(dq: 128,
         \(dqvring\-avail\(dq: 5217372160,
         \(dqqueue\-index\(dq: 1,
         \(dqlast\-avail\-idx\(dq: 0,
         \(dqvring\-used\(dq: 5217372480,
         \(dqused\-idx\(dq: 0,
         \(dqvring\-num\(dq: 128
     }
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.sp
Get VirtQueueStatus for virtio\-serial (no vhost)
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { \(dqexecute\(dq: \(dqx\-query\-virtio\-queue\-status\(dq,
     \(dqarguments\(dq: { \(dqpath\(dq: \(dq/machine/peripheral\-anon/device[0]/virtio\-backend\(dq,
                    \(dqqueue\(dq: 20 }
   }
<\- { \(dqreturn\(dq: {
         \(dqsignalled\-used\(dq: 0,
         \(dqinuse\(dq: 0,
         \(dqname\(dq: \(dqvirtio\-serial\(dq,
         \(dqvring\-align\(dq: 4096,
         \(dqvring\-desc\(dq: 5182074880,
         \(dqsignalled\-used\-valid\(dq: false,
         \(dqvring\-num\-default\(dq: 128,
         \(dqvring\-avail\(dq: 5182076928,
         \(dqqueue\-index\(dq: 20,
         \(dqlast\-avail\-idx\(dq: 0,
         \(dqvring\-used\(dq: 5182077248,
         \(dqused\-idx\(dq: 0,
         \(dqshadow\-avail\-idx\(dq: 0,
         \(dqvring\-num\(dq: 128
     }
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VirtVhostQueueStatus  (Since: 7.2)
Information of a vhost device\(aqs vhost_virtqueue, including most
members of the vhost_dev vhost_virtqueue data structure.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- Name of the VirtIODevice that uses this vhost_virtqueue
.IP \(bu 2
\fBkick\fP (\fBint\fP) \-\- vhost_virtqueue kick
.IP \(bu 2
\fBcall\fP (\fBint\fP) \-\- vhost_virtqueue call
.IP \(bu 2
\fBdesc\fP (\fBint\fP) \-\- vhost_virtqueue desc
.IP \(bu 2
\fBavail\fP (\fBint\fP) \-\- vhost_virtqueue avail
.IP \(bu 2
\fBused\fP (\fBint\fP) \-\- vhost_virtqueue used
.IP \(bu 2
\fBnum\fP (\fBint\fP) \-\- vhost_virtqueue num
.IP \(bu 2
\fBdesc\-phys\fP (\fBint\fP) \-\- vhost_virtqueue desc_phys (descriptor area physical
address)
.IP \(bu 2
\fBdesc\-size\fP (\fBint\fP) \-\- vhost_virtqueue desc_size
.IP \(bu 2
\fBavail\-phys\fP (\fBint\fP) \-\- vhost_virtqueue avail_phys (driver area physical
address)
.IP \(bu 2
\fBavail\-size\fP (\fBint\fP) \-\- vhost_virtqueue avail_size
.IP \(bu 2
\fBused\-phys\fP (\fBint\fP) \-\- vhost_virtqueue used_phys (device area physical address)
.IP \(bu 2
\fBused\-size\fP (\fBint\fP) \-\- vhost_virtqueue used_size
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-query\-virtio\-vhost\-queue\-status  (Since: 7.2)
This command is unstable/experimental.
.sp
Return information of a given vhost device\(aqs vhost_virtqueue
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- VirtIODevice canonical QOM path
.IP \(bu 2
\fBqueue\fP (\fBint\fP) \-\- vhost_virtqueue index to examine
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is meant for debugging.
.UNINDENT
.TP
.B Return
\fI\%VirtVhostQueueStatus\fP \-\- VirtVhostQueueStatus of the vhost_virtqueue
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Get vhost_virtqueue status for vhost\-crypto"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqx\-query\-virtio\-vhost\-queue\-status\(dq,
      \(dqarguments\(dq: { \(dqpath\(dq: \(dq/machine/peripheral/crypto0/virtio\-backend\(dq,
                     \(dqqueue\(dq: 0 }
    }
 <\- { \(dqreturn\(dq: {
          \(dqavail\-phys\(dq: 5216124928,
          \(dqname\(dq: \(dqvirtio\-crypto\(dq,
          \(dqused\-phys\(dq: 5216127040,
          \(dqavail\-size\(dq: 2054,
          \(dqdesc\-size\(dq: 16384,
          \(dqused\-size\(dq: 8198,
          \(dqdesc\(dq: 140141447430144,
          \(dqnum\(dq: 1024,
          \(dqcall\(dq: 0,
          \(dqavail\(dq: 140141447446528,
          \(dqdesc\-phys\(dq: 5216108544,
          \(dqused\(dq: 140141447448640,
          \(dqkick\(dq: 0
      }
    }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Get vhost_virtqueue status for vhost\-vsock"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqx\-query\-virtio\-vhost\-queue\-status\(dq,
      \(dqarguments\(dq: { \(dqpath\(dq: \(dq/machine/peripheral/vsock0/virtio\-backend\(dq,
                     \(dqqueue\(dq: 0 }
    }
 <\- { \(dqreturn\(dq: {
          \(dqavail\-phys\(dq: 5182261248,
          \(dqname\(dq: \(dqvhost\-vsock\(dq,
          \(dqused\-phys\(dq: 5182261568,
          \(dqavail\-size\(dq: 262,
          \(dqdesc\-size\(dq: 2048,
          \(dqused\-size\(dq: 1030,
          \(dqdesc\(dq: 140141413580800,
          \(dqnum\(dq: 128,
          \(dqcall\(dq: 0,
          \(dqavail\(dq: 140141413582848,
          \(dqdesc\-phys\(dq: 5182259200,
          \(dqused\(dq: 140141413583168,
          \(dqkick\(dq: 0
      }
    }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VirtioRingDesc  (Since: 7.2)
Information regarding the vring descriptor area
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBaddr\fP (\fBint\fP) \-\- Guest physical address of the descriptor area
.IP \(bu 2
\fBlen\fP (\fBint\fP) \-\- Length of the descriptor area
.IP \(bu 2
\fBflags\fP (\fB[\fP\fBstring\fP\fB]\fP) \-\- List of descriptor flags
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VirtioRingAvail  (Since: 7.2)
Information regarding the avail vring (a.k.a. driver area)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBflags\fP (\fBint\fP) \-\- VRingAvail flags
.IP \(bu 2
\fBidx\fP (\fBint\fP) \-\- VRingAvail index
.IP \(bu 2
\fBring\fP (\fBint\fP) \-\- VRingAvail ring[] entry at provided index
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VirtioRingUsed  (Since: 7.2)
Information regarding the used vring (a.k.a. device area)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBflags\fP (\fBint\fP) \-\- VRingUsed flags
.IP \(bu 2
\fBidx\fP (\fBint\fP) \-\- VRingUsed index
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  VirtioQueueElement  (Since: 7.2)
Information regarding a VirtQueue\(aqs VirtQueueElement including
descriptor, driver, and device areas
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- Name of the VirtIODevice that uses this VirtQueue
.IP \(bu 2
\fBindex\fP (\fBint\fP) \-\- Index of the element in the queue
.IP \(bu 2
\fBdescs\fP (\fB[\fP\fI\%VirtioRingDesc\fP\fB]\fP) \-\- List of descriptors (VirtioRingDesc)
.IP \(bu 2
\fBavail\fP (\fI\%VirtioRingAvail\fP) \-\- VRingAvail info
.IP \(bu 2
\fBused\fP (\fI\%VirtioRingUsed\fP) \-\- VRingUsed info
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  x\-query\-virtio\-queue\-element  (Since: 7.2)
This command is unstable/experimental.
.sp
Return the information about a VirtQueue\(aqs VirtQueueElement
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- VirtIODevice canonical QOM path
.IP \(bu 2
\fBqueue\fP (\fBint\fP) \-\- VirtQueue index to examine
.IP \(bu 2
\fBindex\fP (\fBint\fP, \fIoptional\fP) \-\- Index of the element in the queue (default: head of the
queue)
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- This command is meant for debugging.
.UNINDENT
.TP
.B Return
\fI\%VirtioQueueElement\fP \-\- VirtioQueueElement information
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Introspect on virtio\-net\(aqs VirtQueue 0 at index 5"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqx\-query\-virtio\-queue\-element\(dq,
      \(dqarguments\(dq: { \(dqpath\(dq: \(dq/machine/peripheral\-anon/device[1]/virtio\-backend\(dq,
                     \(dqqueue\(dq: 0,
                     \(dqindex\(dq: 5 }
    }
 <\- { \(dqreturn\(dq: {
          \(dqindex\(dq: 5,
          \(dqname\(dq: \(dqvirtio\-net\(dq,
          \(dqdescs\(dq: [
              {
                  \(dqflags\(dq: [\(dqwrite\(dq],
                  \(dqlen\(dq: 1536,
                  \(dqaddr\(dq: 5257305600
              }
          ],
          \(dqavail\(dq: {
              \(dqidx\(dq: 256,
              \(dqflags\(dq: 0,
              \(dqring\(dq: 5
          },
          \(dqused\(dq: {
              \(dqidx\(dq: 13,
              \(dqflags\(dq: 0
          }
      }
    }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Introspect on virtio\-crypto\(aqs VirtQueue 1 at head"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqx\-query\-virtio\-queue\-element\(dq,
      \(dqarguments\(dq: { \(dqpath\(dq: \(dq/machine/peripheral/crypto0/virtio\-backend\(dq,
                     \(dqqueue\(dq: 1 }
    }
 <\- { \(dqreturn\(dq: {
          \(dqindex\(dq: 0,
          \(dqname\(dq: \(dqvirtio\-crypto\(dq,
          \(dqdescs\(dq: [
              {
                  \(dqflags\(dq: [],
                  \(dqlen\(dq: 0,
                  \(dqaddr\(dq: 8080268923184214134
              }
          ],
          \(dqavail\(dq: {
              \(dqidx\(dq: 280,
              \(dqflags\(dq: 0,
              \(dqring\(dq: 0
          },
          \(dqused\(dq: {
              \(dqidx\(dq: 280,
              \(dqflags\(dq: 0
          }
      }
    }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example: Introspect on virtio\-scsi\(aqs VirtQueue 2 at head"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
 \-> { \(dqexecute\(dq: \(dqx\-query\-virtio\-queue\-element\(dq,
      \(dqarguments\(dq: { \(dqpath\(dq: \(dq/machine/peripheral\-anon/device[2]/virtio\-backend\(dq,
                     \(dqqueue\(dq: 2 }
    }
 <\- { \(dqreturn\(dq: {
          \(dqindex\(dq: 19,
          \(dqname\(dq: \(dqvirtio\-scsi\(dq,
          \(dqdescs\(dq: [
              {
                  \(dqflags\(dq: [\(dqused\(dq, \(dqindirect\(dq, \(dqwrite\(dq],
                  \(dqlen\(dq: 4099327944,
                  \(dqaddr\(dq: 12055409292258155293
              }
          ],
          \(dqavail\(dq: {
              \(dqidx\(dq: 1147,
              \(dqflags\(dq: 0,
              \(dqring\(dq: 19
          },
          \(dqused\(dq: {
              \(dqidx\(dq: 280,
              \(dqflags\(dq: 0
          }
      }
    }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  IOThreadVirtQueueMapping  (Since: 9.0)
Describes the subset of virtqueues assigned to an IOThread.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBiothread\fP (\fBstring\fP) \-\- the id of IOThread object
.IP \(bu 2
\fBvqs\fP (\fB[\fP\fBint\fP\fB]\fP, \fIoptional\fP) \-\- an optional array of virtqueue indices that will be handled by
this IOThread.  When absent, virtqueues are assigned round\-robin
across all IOThreadVirtQueueMappings provided.  Either all
IOThreadVirtQueueMappings must have \fBvqs\fP or none of them must
have it.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  DummyVirtioForceArrays  (Since: 9.0)
Not used by QMP; hack to let us use IOThreadVirtQueueMappingList
internally
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBunused\-iothread\-vq\-mapping\fP (\fB[\fP\fI\%IOThreadVirtQueueMapping\fP\fB]\fP) \-\- Not documented
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  GranuleMode  (Since: 9.0)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fB4k\fP \-\- granule page size of 4KiB
.IP \(bu 2
\fB8k\fP \-\- granule page size of 8KiB
.IP \(bu 2
\fB16k\fP \-\- granule page size of 16KiB
.IP \(bu 2
\fB64k\fP \-\- granule page size of 64KiB
.IP \(bu 2
\fBhost\fP \-\- granule matches the host page size
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  VMAppleVirtioBlkVariant  (Since: 9.2)
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBunspecified\fP \-\- The default, not a valid setting.
.IP \(bu 2
\fBroot\fP \-\- Block device holding the root volume
.IP \(bu 2
\fBaux\fP \-\- Block device holding auxiliary data required for boot
.UNINDENT
.UNINDENT
.UNINDENT
.SH VFIO DEVICES
.INDENT 0.0
.TP
.B Enum  QapiVfioMigrationState  (Since: 9.1)
An enumeration of the VFIO device migration states.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBstop\fP \-\- The device is stopped.
.IP \(bu 2
\fBrunning\fP \-\- The device is running.
.IP \(bu 2
\fBstop\-copy\fP \-\- The device is stopped and its internal state is
available for reading.
.IP \(bu 2
\fBresuming\fP \-\- The device is stopped and its internal state is available
for writing.
.IP \(bu 2
\fBrunning\-p2p\fP \-\- The device is running in the P2P quiescent state.
.IP \(bu 2
\fBpre\-copy\fP \-\- The device is running, tracking its internal state and
its internal state is available for reading.
.IP \(bu 2
\fBpre\-copy\-p2p\fP \-\- The device is running in the P2P quiescent state,
tracking its internal state and its internal state is available
for reading.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Event  VFIO_MIGRATION  (Since: 9.1)
This event is emitted when a VFIO device migration state is changed.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBdevice\-id\fP (\fBstring\fP) \-\- The device\(aqs id, if it has one.
.IP \(bu 2
\fBqom\-path\fP (\fBstring\fP) \-\- The device\(aqs QOM path.
.IP \(bu 2
\fBdevice\-state\fP (\fI\%QapiVfioMigrationState\fP) \-\- The new changed device migration state.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Example:"
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { \(dqtimestamp\(dq: { \(dqseconds\(dq: 1713771323, \(dqmicroseconds\(dq: 212268 },
     \(dqevent\(dq: \(dqVFIO_MIGRATION\(dq,
     \(dqdata\(dq: {
         \(dqdevice\-id\(dq: \(dqvfio_dev1\(dq,
         \(dqqom\-path\(dq: \(dq/machine/peripheral/vfio_dev1\(dq,
         \(dqdevice\-state\(dq: \(dqstop\(dq } }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH CRYPTOGRAPHY DEVICES
.INDENT 0.0
.TP
.B Enum  QCryptodevBackendAlgoType  (Since: 8.0)
The supported algorithm types of a crypto device.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBsym\fP \-\- symmetric encryption
.IP \(bu 2
\fBasym\fP \-\- asymmetric Encryption
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QCryptodevBackendServiceType  (Since: 8.0)
The supported service types of a crypto device.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBcipher\fP \-\- Symmetric Key Cipher service
.IP \(bu 2
\fBhash\fP \-\- Hash service
.IP \(bu 2
\fBmac\fP \-\- Message Authentication Codes service
.IP \(bu 2
\fBaead\fP \-\- Authenticated Encryption with Associated Data service
.IP \(bu 2
\fBakcipher\fP \-\- Asymmetric Key Cipher service
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  QCryptodevBackendType  (Since: 8.0)
The crypto device backend type
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBbuiltin\fP \-\- the QEMU builtin support
.IP \(bu 2
\fBvhost\-user\fP \-\- vhost\-user
.IP \(bu 2
\fBlkcf\fP \-\- Linux kernel cryptographic framework
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptodevBackendClient  (Since: 8.0)
Information about a queue of crypto device.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBqueue\fP (\fBint\fP) \-\- the queue index of the crypto device
.IP \(bu 2
\fBtype\fP (\fI\%QCryptodevBackendType\fP) \-\- the type of the crypto device
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  QCryptodevInfo  (Since: 8.0)
Information about a crypto device.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBid\fP (\fBstring\fP) \-\- the id of the crypto device
.IP \(bu 2
\fBservice\fP (\fB[\fP\fI\%QCryptodevBackendServiceType\fP\fB]\fP) \-\- supported service types of a crypto device
.IP \(bu 2
\fBclient\fP (\fB[\fP\fI\%QCryptodevBackendClient\fP\fB]\fP) \-\- the additional information of the crypto device
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  query\-cryptodev  (Since: 8.0)
Return information about current crypto devices.
.INDENT 7.0
.TP
.B Return
\fB[\fP\fI\%QCryptodevInfo\fP\fB]\fP \-\- a list of \fBQCryptodevInfo\fP
.UNINDENT
.UNINDENT
.SH CXL DEVICES
.INDENT 0.0
.TP
.B Enum  CxlEventLog  (Since: 8.1)
CXL has a number of separate event logs for different types of
events.  Each such event log is handled and signaled independently.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBinformational\fP \-\- Information Event Log
.IP \(bu 2
\fBwarning\fP \-\- Warning Event Log
.IP \(bu 2
\fBfailure\fP \-\- Failure Event Log
.IP \(bu 2
\fBfatal\fP \-\- Fatal Event Log
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  cxl\-inject\-general\-media\-event  (Since: 8.1)
Inject an event record for a General Media Event (CXL r3.0
8.2.9.2.1.1).  This event type is reported via one of the event logs
specified via the log parameter.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- CXL type 3 device canonical QOM path
.IP \(bu 2
\fBlog\fP (\fI\%CxlEventLog\fP) \-\- event log to add the event to
.IP \(bu 2
\fBflags\fP (\fBint\fP) \-\- Event Record Flags.  See CXL r3.0 Table 8\-42 Common Event
Record Format, Event Record Flags for subfield definitions.
.IP \(bu 2
\fBdpa\fP (\fBint\fP) \-\- Device Physical Address (relative to \fBpath\fP device).  Note
lower bits include some flags.  See CXL r3.0 Table 8\-43 General
Media Event Record, Physical Address.
.IP \(bu 2
\fBdescriptor\fP (\fBint\fP) \-\- Memory Event Descriptor with additional memory event
information.  See CXL r3.0 Table 8\-43 General Media Event
Record, Memory Event Descriptor for bit definitions.
.IP \(bu 2
\fBtype\fP (\fBint\fP) \-\- Type of memory event that occurred.  See CXL r3.0 Table 8\-43
General Media Event Record, Memory Event Type for possible
values.
.IP \(bu 2
\fBtransaction\-type\fP (\fBint\fP) \-\- Type of first transaction that caused the event
to occur.  See CXL r3.0 Table 8\-43 General Media Event Record,
Transaction Type for possible values.
.IP \(bu 2
\fBchannel\fP (\fBint\fP, \fIoptional\fP) \-\- The channel of the memory event location.  A channel is an
interface that can be independently accessed for a transaction.
.IP \(bu 2
\fBrank\fP (\fBint\fP, \fIoptional\fP) \-\- The rank of the memory event location.  A rank is a set of
memory devices on a channel that together execute a transaction.
.IP \(bu 2
\fBdevice\fP (\fBint\fP, \fIoptional\fP) \-\- Bitmask that represents all devices in the rank associated
with the memory event location.
.IP \(bu 2
\fBcomponent\-id\fP (\fBstring\fP, \fIoptional\fP) \-\- Device specific component identifier for the event.
May describe a field replaceable sub\-component of the device.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  cxl\-inject\-dram\-event  (Since: 8.1)
Inject an event record for a DRAM Event (CXL r3.0 8.2.9.2.1.2).
This event type is reported via one of the event logs specified via
the log parameter.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- CXL type 3 device canonical QOM path
.IP \(bu 2
\fBlog\fP (\fI\%CxlEventLog\fP) \-\- Event log to add the event to
.IP \(bu 2
\fBflags\fP (\fBint\fP) \-\- Event Record Flags.  See CXL r3.0 Table 8\-42 Common Event
Record Format, Event Record Flags for subfield definitions.
.IP \(bu 2
\fBdpa\fP (\fBint\fP) \-\- Device Physical Address (relative to \fBpath\fP device).  Note
lower bits include some flags.  See CXL r3.0 Table 8\-44 DRAM
Event Record, Physical Address.
.IP \(bu 2
\fBdescriptor\fP (\fBint\fP) \-\- Memory Event Descriptor with additional memory event
information.  See CXL r3.0 Table 8\-44 DRAM Event Record, Memory
Event Descriptor for bit definitions.
.IP \(bu 2
\fBtype\fP (\fBint\fP) \-\- Type of memory event that occurred.  See CXL r3.0 Table 8\-44
DRAM Event Record, Memory Event Type for possible values.
.IP \(bu 2
\fBtransaction\-type\fP (\fBint\fP) \-\- Type of first transaction that caused the event
to occur.  See CXL r3.0 Table 8\-44 DRAM Event Record,
Transaction Type for possible values.
.IP \(bu 2
\fBchannel\fP (\fBint\fP, \fIoptional\fP) \-\- The channel of the memory event location.  A channel is an
interface that can be independently accessed for a transaction.
.IP \(bu 2
\fBrank\fP (\fBint\fP, \fIoptional\fP) \-\- The rank of the memory event location.  A rank is a set of
memory devices on a channel that together execute a transaction.
.IP \(bu 2
\fBnibble\-mask\fP (\fBint\fP, \fIoptional\fP) \-\- Identifies one or more nibbles that the error affects
.IP \(bu 2
\fBbank\-group\fP (\fBint\fP, \fIoptional\fP) \-\- Bank group of the memory event location, incorporating
a number of Banks.
.IP \(bu 2
\fBbank\fP (\fBint\fP, \fIoptional\fP) \-\- Bank of the memory event location.  A single bank is accessed
per read or write of the memory.
.IP \(bu 2
\fBrow\fP (\fBint\fP, \fIoptional\fP) \-\- Row address within the DRAM.
.IP \(bu 2
\fBcolumn\fP (\fBint\fP, \fIoptional\fP) \-\- Column address within the DRAM.
.IP \(bu 2
\fBcorrection\-mask\fP (\fB[\fP\fBint\fP\fB]\fP, \fIoptional\fP) \-\- Bits within each nibble.  Used in order of bits
set in the nibble\-mask.  Up to 4 nibbles may be covered.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  cxl\-inject\-memory\-module\-event  (Since: 8.1)
Inject an event record for a Memory Module Event (CXL r3.0
8.2.9.2.1.3).  This event includes a copy of the Device Health info
at the time of the event.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- CXL type 3 device canonical QOM path
.IP \(bu 2
\fBlog\fP (\fI\%CxlEventLog\fP) \-\- Event Log to add the event to
.IP \(bu 2
\fBflags\fP (\fBint\fP) \-\- Event Record Flags.  See CXL r3.0 Table 8\-42 Common Event
Record Format, Event Record Flags for subfield definitions.
.IP \(bu 2
\fBtype\fP (\fBint\fP) \-\- Device Event Type.  See CXL r3.0 Table 8\-45 Memory Module
Event Record for bit definitions for bit definiions.
.IP \(bu 2
\fBhealth\-status\fP (\fBint\fP) \-\- Overall health summary bitmap.  See CXL r3.0 Table
8\-100 Get Health Info Output Payload, Health Status for bit
definitions.
.IP \(bu 2
\fBmedia\-status\fP (\fBint\fP) \-\- Overall media health summary.  See CXL r3.0 Table
8\-100 Get Health Info Output Payload, Media Status for bit
definitions.
.IP \(bu 2
\fBadditional\-status\fP (\fBint\fP) \-\- See CXL r3.0 Table 8\-100 Get Health Info Output
Payload, Additional Status for subfield definitions.
.IP \(bu 2
\fBlife\-used\fP (\fBint\fP) \-\- Percentage (0\-100) of factory expected life span.
.IP \(bu 2
\fBtemperature\fP (\fBint\fP) \-\- Device temperature in degrees Celsius.
.IP \(bu 2
\fBdirty\-shutdown\-count\fP (\fBint\fP) \-\- Number of times the device has been unable to
determine whether data loss may have occurred.
.IP \(bu 2
\fBcorrected\-volatile\-error\-count\fP (\fBint\fP) \-\- Total number of correctable errors
in volatile memory.
.IP \(bu 2
\fBcorrected\-persistent\-error\-count\fP (\fBint\fP) \-\- Total number of correctable
errors in persistent memory
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  cxl\-inject\-poison  (Since: 8.1)
Poison records indicate that a CXL memory device knows that a
particular memory region may be corrupted.  This may be because of
locally detected errors (e.g. ECC failure) or poisoned writes
received from other components in the system.  This injection
mechanism enables testing of the OS handling of poison records which
may be queried via the CXL mailbox.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- CXL type 3 device canonical QOM path
.IP \(bu 2
\fBstart\fP (\fBint\fP) \-\- Start address; must be 64 byte aligned.
.IP \(bu 2
\fBlength\fP (\fBint\fP) \-\- Length of poison to inject; must be a multiple of 64 bytes.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  CxlUncorErrorType  (Since: 8.0)
Type of uncorrectable CXL error to inject.  These errors are
reported via an AER uncorrectable internal error with additional
information logged at the CXL device.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBcache\-data\-parity\fP \-\- Data error such as data parity or data ECC error
CXL.cache
.IP \(bu 2
\fBcache\-address\-parity\fP \-\- Address parity or other errors associated
with the address field on CXL.cache
.IP \(bu 2
\fBcache\-be\-parity\fP \-\- Byte enable parity or other byte enable errors on
CXL.cache
.IP \(bu 2
\fBcache\-data\-ecc\fP \-\- ECC error on CXL.cache
.IP \(bu 2
\fBmem\-data\-parity\fP \-\- Data error such as data parity or data ECC error
on CXL.mem
.IP \(bu 2
\fBmem\-address\-parity\fP \-\- Address parity or other errors associated with
the address field on CXL.mem
.IP \(bu 2
\fBmem\-be\-parity\fP \-\- Byte enable parity or other byte enable errors on
CXL.mem.
.IP \(bu 2
\fBmem\-data\-ecc\fP \-\- Data ECC error on CXL.mem.
.IP \(bu 2
\fBreinit\-threshold\fP \-\- REINIT threshold hit.
.IP \(bu 2
\fBrsvd\-encoding\fP \-\- Received unrecognized encoding.
.IP \(bu 2
\fBpoison\-received\fP \-\- Received poison from the peer.
.IP \(bu 2
\fBreceiver\-overflow\fP \-\- Buffer overflows (first 3 bits of header log
indicate which)
.IP \(bu 2
\fBinternal\fP \-\- Component specific error
.IP \(bu 2
\fBcxl\-ide\-tx\fP \-\- Integrity and data encryption tx error.
.IP \(bu 2
\fBcxl\-ide\-rx\fP \-\- Integrity and data encryption rx error.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CXLUncorErrorRecord  (Since: 8.0)
Record of a single error including header log.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBtype\fP (\fI\%CxlUncorErrorType\fP) \-\- Type of error
.IP \(bu 2
\fBheader\fP (\fB[\fP\fBint\fP\fB]\fP) \-\- 16 DWORD of header.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  cxl\-inject\-uncorrectable\-errors  (Since: 8.0)
Command to allow injection of multiple errors in one go.  This
allows testing of multiple header log handling in the OS.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- CXL Type 3 device canonical QOM path
.IP \(bu 2
\fBerrors\fP (\fB[\fP\fI\%CXLUncorErrorRecord\fP\fB]\fP) \-\- Errors to inject
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  CxlCorErrorType  (Since: 8.0)
Type of CXL correctable error to inject
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBcache\-data\-ecc\fP \-\- Data ECC error on CXL.cache
.IP \(bu 2
\fBmem\-data\-ecc\fP \-\- Data ECC error on CXL.mem
.IP \(bu 2
\fBcrc\-threshold\fP \-\- Component specific and applicable to 68 byte Flit
mode only.
.IP \(bu 2
\fBretry\-threshold\fP \-\- Retry threshold hit in the Local Retry State
Machine, 68B Flits only.
.IP \(bu 2
\fBcache\-poison\-received\fP \-\- Received poison from a peer on CXL.cache.
.IP \(bu 2
\fBmem\-poison\-received\fP \-\- Received poison from a peer on CXL.mem
.IP \(bu 2
\fBphysical\fP \-\- Received error indication from the physical layer.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  cxl\-inject\-correctable\-error  (Since: 8.0)
Command to inject a single correctable error.  Multiple error
injection of this error type is not interesting as there is no
associated header log.  These errors are reported via AER as a
correctable internal error, with additional detail available from
the CXL device.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- CXL Type 3 device canonical QOM path
.IP \(bu 2
\fBtype\fP (\fI\%CxlCorErrorType\fP) \-\- Type of error.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  CxlDynamicCapacityExtent  (Since: 9.1)
A single dynamic capacity extent.  This is a contiguous allocation
of memory by Device Physical Address within a single Dynamic
Capacity Region on a CXL Type 3 Device.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBoffset\fP (\fBint\fP) \-\- The offset (in bytes) to the start of the region where the
extent belongs to.
.IP \(bu 2
\fBlen\fP (\fBint\fP) \-\- The length of the extent in bytes.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  CxlExtentSelectionPolicy  (Since: 9.1)
The policy to use for selecting which extents comprise the added
capacity, as defined in Compute Express Link (CXL) Specification,
Revision 3.1, Table 7\-70.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBfree\fP \-\- Device is responsible for allocating the requested memory
capacity and is free to do this using any combination of
supported extents.
.IP \(bu 2
\fBcontiguous\fP \-\- Device is responsible for allocating the requested
memory capacity but must do so as a single contiguous
extent.
.IP \(bu 2
\fBprescriptive\fP \-\- The precise set of extents to be allocated is
specified by the command.  Thus allocation is being managed
by the issuer of the allocation command, not the device.
.IP \(bu 2
\fBenable\-shared\-access\fP \-\- Capacity has already been allocated to a
different host using free, contiguous or prescriptive policy
with a known tag.  This policy then instructs the device to make
the capacity with the specified tag available to an additional
host.  Capacity is implicit as it matches that already
associated with the tag.  Note that the extent list (and hence
Device Physical Addresses) used are per host, so a device may
use different representations on each host.  The ordering of the
extents provided to each host is indicated to the host using per
extent sequence numbers generated by the device.  Has a similar
meaning for temporal sharing, but in that case there may be only
one host involved.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  cxl\-add\-dynamic\-capacity  (Since: 9.1)
This command is unstable/experimental.
.sp
Initiate adding dynamic capacity extents to a host.  This simulates
operations defined in Compute Express Link (CXL) Specification,
Revision 3.1, Section 7.6.7.6.5.  Note that, currently, establishing
success or failure of the full Add Dynamic Capacity flow requires
out of band communication with the OS of the CXL host.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- path to the CXL Dynamic Capacity Device in the QOM tree.
.IP \(bu 2
\fBhost\-id\fP (\fBint\fP) \-\- The \(dqHost ID\(dq field as defined in Compute Express Link
(CXL) Specification, Revision 3.1, Table 7\-70.
.IP \(bu 2
\fBselection\-policy\fP (\fI\%CxlExtentSelectionPolicy\fP) \-\- The \(dqSelection Policy\(dq bits as defined in
Compute Express Link (CXL) Specification, Revision 3.1,
Table 7\-70.  It specifies the policy to use for selecting
which extents comprise the added capacity.
.IP \(bu 2
\fBregion\fP (\fBint\fP) \-\- The \(dqRegion Number\(dq field as defined in Compute Express
Link (CXL) Specification, Revision 3.1, Table 7\-70.  Valid
range is from 0\-7.
.IP \(bu 2
\fBtag\fP (\fBstring\fP, \fIoptional\fP) \-\- The \(dqTag\(dq field as defined in Compute Express Link (CXL)
Specification, Revision 3.1, Table 7\-70.
.IP \(bu 2
\fBextents\fP (\fB[\fP\fI\%CxlDynamicCapacityExtent\fP\fB]\fP) \-\- The \(dqExtent List\(dq field as defined in Compute Express Link
(CXL) Specification, Revision 3.1, Table 7\-70.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- For now this command is subject to change.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Enum  CxlExtentRemovalPolicy  (Since: 9.1)
The policy to use for selecting which extents comprise the released
capacity, defined in the \(dqFlags\(dq field in Compute Express Link (CXL)
Specification, Revision 3.1, Table 7\-71.
.INDENT 7.0
.TP
.B Values
.INDENT 7.0
.IP \(bu 2
\fBtag\-based\fP \-\- Extents are selected by the device based on tag, with
no requirement for contiguous extents.
.IP \(bu 2
\fBprescriptive\fP \-\- Extent list of capacity to release is included in
the request payload.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Command  cxl\-release\-dynamic\-capacity  (Since: 9.1)
This command is unstable/experimental.
.sp
Initiate release of dynamic capacity extents from a host.  This
simulates operations defined in Compute Express Link (CXL)
Specification, Revision 3.1, Section 7.6.7.6.6.  Note that,
currently, success or failure of the full Release Dynamic Capacity
flow requires out of band communication with the OS of the CXL host.
.INDENT 7.0
.TP
.B Arguments
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fBstring\fP) \-\- path to the CXL Dynamic Capacity Device in the QOM tree.
.IP \(bu 2
\fBhost\-id\fP (\fBint\fP) \-\- The \(dqHost ID\(dq field as defined in Compute Express Link
(CXL) Specification, Revision 3.1, Table 7\-71.
.IP \(bu 2
\fBremoval\-policy\fP (\fI\%CxlExtentRemovalPolicy\fP) \-\- Bit[3:0] of the \(dqFlags\(dq field as defined in
Compute Express Link (CXL) Specification, Revision 3.1,
Table 7\-71.
.IP \(bu 2
\fBforced\-removal\fP (\fBboolean\fP, \fIoptional\fP) \-\- Bit[4] of the \(dqFlags\(dq field in Compute Express
Link (CXL) Specification, Revision 3.1, Table 7\-71.  When set,
the device does not wait for a Release Dynamic Capacity command
from the host.  Instead, the host immediately looses access to
the released capacity.
.IP \(bu 2
\fBsanitize\-on\-release\fP (\fBboolean\fP, \fIoptional\fP) \-\- Bit[5] of the \(dqFlags\(dq field in Compute Express
Link (CXL) Specification, Revision 3.1, Table 7\-71.  When set,
the device should sanitize all released capacity as a result of
this request.  This ensures that all user data and metadata is
made permanently unavailable by whatever means is appropriate
for the media type.  Note that changing encryption keys is not
sufficient.
.IP \(bu 2
\fBregion\fP (\fBint\fP) \-\- The \(dqRegion Number\(dq field as defined in Compute Express
Link Specification, Revision 3.1, Table 7\-71.  Valid range
is from 0\-7.
.IP \(bu 2
\fBtag\fP (\fBstring\fP, \fIoptional\fP) \-\- The \(dqTag\(dq field as defined in Compute Express Link (CXL)
Specification, Revision 3.1, Table 7\-71.
.IP \(bu 2
\fBextents\fP (\fB[\fP\fI\%CxlDynamicCapacityExtent\fP\fB]\fP) \-\- The \(dqExtent List\(dq field as defined in Compute Express
Link (CXL) Specification, Revision 3.1, Table 7\-71.
.UNINDENT
.TP
.B Features
.INDENT 7.0
.IP \(bu 2
\fBunstable\fP \-\- For now this command is subject to change.
.UNINDENT
.UNINDENT
.UNINDENT
.SH UEFI VARIABLE STORE
.sp
The qemu efi variable store implementation (hw/uefi/) uses this to
store non\-volatile variables in json format on disk.
.sp
This is an existing format already supported by (at least) two other
projects, specifically \fI\%https://gitlab.com/kraxel/virt\-firmware\fP and
\fI\%https://github.com/awslabs/python\-uefivars\fP\&.
.INDENT 0.0
.TP
.B Object  UefiVariable  (Since: 10.0)
UEFI Variable.  Check the UEFI specifification for more detailed
information on the fields.
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBguid\fP (\fBstring\fP) \-\- variable namespace GUID
.IP \(bu 2
\fBname\fP (\fBstring\fP) \-\- variable name, in UTF\-8 encoding.
.IP \(bu 2
\fBattr\fP (\fBint\fP) \-\- variable attributes.
.IP \(bu 2
\fBdata\fP (\fBstring\fP) \-\- variable value, encoded as hex string.
.IP \(bu 2
\fBtime\fP (\fBstring\fP, \fIoptional\fP) \-\- variable modification time.  EFI_TIME struct, encoded as hex
string.  Used only for authenticated variables, where the
EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS attribute bit
is set.
.IP \(bu 2
\fBdigest\fP (\fBstring\fP, \fIoptional\fP) \-\- variable certificate digest.  Used to verify the signature
of updates for authenticated variables.  UEFI has two kinds of
authenticated variables.  The secure boot variables (\(aqPK\(aq,
\(aqKEK\(aq, \(aqdb\(aq and \(aqdbx\(aq) have hard coded signature checking rules.
For other authenticated variables the firmware stores a digest
of the signing certificate at variable creation time, and any
updates must be signed with the same certificate.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Object  UefiVarStore  (Since: 10.0)
.INDENT 7.0
.TP
.B Members
.INDENT 7.0
.IP \(bu 2
\fBversion\fP (\fBint\fP) \-\- currently always 2
.IP \(bu 2
\fBvariables\fP (\fB[\fP\fI\%UefiVariable\fP\fB]\fP) \-\- list of UEFI variables
.UNINDENT
.UNINDENT
.UNINDENT
.SH COPYRIGHT
2025, The QEMU Project Developers
.\" Generated by docutils manpage writer.
.
